// BEGIN SMACK-GENERATED CODE

// Memory region declarations: 58
var $M.0: [int] int;
var $M.1: [int] int;
var $M.2: [int] int;
var $M.3: [int] int;
var $M.4: [int] int;
var $M.5: [int] int;
var $M.6: [int] int;
var $M.7: [int] int;
var $M.8: [int] int;
var $M.9: [int] int;
var $M.10: [int] int;
var $M.11: [int] int;
var $M.12: [int] int;
var $M.13: [int] int;
var $M.14: [int] int;
var $M.15: [int] int;
var $M.16: [int] int;
var $M.17: [int] int;
var $M.18: [int] int;
var $M.19: [int] int;
var $M.20: [int] int;
var $M.21: [int] int;
var $M.22: [int] int;
var $M.23: [int] int;
var $M.24: [int] int;
var $M.25: [int] int;
var $M.26: [int] int;
var $M.27: [int] int;
var $M.28: [int] int;
var $M.29: [int] int;
var $M.30: [int] int;
var $M.31: [int] int;
var $M.32: [int] int;
var $M.33: [int] int;
var $M.34: [int] int;
var $M.35: [int] int;
var $M.36: [int] int;
var $M.37: [int] int;
var $M.38: [int] int;
var $M.39: [int] int;
var $M.40: [int] int;
var $M.41: [int] int;
var $M.42: [int] int;
var $M.43: [int] int;
var $M.44: [int] int;
var $M.45: [int] int;
var $M.46: [int] int;
var $M.47: [int] int;
var $M.48: [int] int;
var $M.49: [int] int;
var $M.50: [int] int;
var $M.51: [int] int;
var $M.52: [int] int;
var $M.53: [int] int;
var $M.54: [int] int;
var $M.55: [int] int;
var $M.56: [int] int;
var $M.57: [int] int;

// Undefined values
const $u.0, $u.1: int;

axiom $GLOBALS_BOTTOM == -6586;
const unique .str: int;
const unique .str1: int;
const unique .str10: int;
const unique .str100: int;
const unique .str101: int;
const unique .str102: int;
const unique .str103: int;
const unique .str104: int;
const unique .str105: int;
const unique .str106: int;
const unique .str107: int;
const unique .str108: int;
const unique .str109: int;
const unique .str11: int;
const unique .str110: int;
const unique .str111: int;
const unique .str112: int;
const unique .str113: int;
const unique .str114: int;
const unique .str115: int;
const unique .str116: int;
const unique .str117: int;
const unique .str118: int;
const unique .str119: int;
const unique .str12: int;
const unique .str120: int;
const unique .str121: int;
const unique .str122: int;
const unique .str123: int;
const unique .str124: int;
const unique .str125: int;
const unique .str126: int;
const unique .str127: int;
const unique .str128: int;
const unique .str129: int;
const unique .str13: int;
const unique .str130: int;
const unique .str131: int;
const unique .str132: int;
const unique .str14: int;
const unique .str15: int;
const unique .str16: int;
const unique .str17: int;
const unique .str18: int;
const unique .str19: int;
const unique .str2: int;
const unique .str20: int;
const unique .str21: int;
const unique .str22: int;
const unique .str23: int;
const unique .str24: int;
const unique .str25: int;
const unique .str26: int;
const unique .str27: int;
const unique .str28: int;
const unique .str29: int;
const unique .str3: int;
const unique .str30: int;
const unique .str31: int;
const unique .str32: int;
const unique .str33: int;
const unique .str34: int;
const unique .str35: int;
const unique .str36: int;
const unique .str37: int;
const unique .str38: int;
const unique .str39: int;
const unique .str4: int;
const unique .str40: int;
const unique .str41: int;
const unique .str42: int;
const unique .str43: int;
const unique .str44: int;
const unique .str45: int;
const unique .str46: int;
const unique .str47: int;
const unique .str48: int;
const unique .str49: int;
const unique .str5: int;
const unique .str50: int;
const unique .str51: int;
const unique .str52: int;
const unique .str53: int;
const unique .str54: int;
const unique .str55: int;
const unique .str56: int;
const unique .str57: int;
const unique .str58: int;
const unique .str59: int;
const unique .str6: int;
const unique .str60: int;
const unique .str61: int;
const unique .str62: int;
const unique .str63: int;
const unique .str64: int;
const unique .str65: int;
const unique .str66: int;
const unique .str67: int;
const unique .str68: int;
const unique .str69: int;
const unique .str7: int;
const unique .str70: int;
const unique .str71: int;
const unique .str72: int;
const unique .str73: int;
const unique .str74: int;
const unique .str75: int;
const unique .str76: int;
const unique .str77: int;
const unique .str78: int;
const unique .str79: int;
const unique .str8: int;
const unique .str80: int;
const unique .str81: int;
const unique .str82: int;
const unique .str83: int;
const unique .str84: int;
const unique .str85: int;
const unique .str86: int;
const unique .str87: int;
const unique .str88: int;
const unique .str89: int;
const unique .str9: int;
const unique .str90: int;
const unique .str91: int;
const unique .str92: int;
const unique .str93: int;
const unique .str94: int;
const unique .str95: int;
const unique .str96: int;
const unique .str97: int;
const unique .str98: int;
const unique .str99: int;
const unique CheckPort: int;
const unique DC: int;
const unique DriverEntry: int;
const unique ExAcquireFastMutex: int;
const unique ExAllocatePoolWithTag: int;
const unique ExFreePool: int;
const unique ExReleaseFastMutex: int;
const unique ExfInterlockedInsertHeadList: int;
const unique ExfInterlockedInsertTailList: int;
const unique ExfInterlockedRemoveHeadList: int;
const unique Extension_FilterMode: int;
const unique GUID_PARALLEL_DEVICE: int;
const unique GUID_PARCLASS_DEVICE: int;
const unique IPC: int;
const unique InitNEC_98: int;
const unique InterlockedDecrement: int;
const unique InterlockedExchange: int;
const unique InterlockedIncrement: int;
const unique IoAcquireCancelSpinLock: int;
const unique IoAcquireRemoveLockEx: int;
const unique IoAllocateErrorLogEntry: int;
const unique IoAllocateMdl: int;
const unique IoAttachDeviceToDeviceStack: int;
const unique IoBuildAsynchronousFsdRequest: int;
const unique IoBuildDeviceIoControlRequest: int;
const unique IoConnectInterrupt: int;
const unique IoCreateDevice: int;
const unique IoCreateSymbolicLink: int;
const unique IoDeleteDevice: int;
const unique IoDeleteSymbolicLink: int;
const unique IoDetachDevice: int;
const unique IoDisconnectInterrupt: int;
const unique IoFreeIrp: int;
const unique IoFreeMdl: int;
const unique IoGetConfigurationInformation: int;
const unique IoInitializeRemoveLockEx: int;
const unique IoOpenDeviceRegistryKey: int;
const unique IoQueryDeviceDescription: int;
const unique IoRegisterDeviceInterface: int;
const unique IoReleaseCancelSpinLock: int;
const unique IoReleaseRemoveLockAndWaitEx: int;
const unique IoReleaseRemoveLockEx: int;
const unique IoReportResourceUsage: int;
const unique IoSetDeviceInterfaceState: int;
const unique IoSetHardErrorOrVerifyDevice: int;
const unique IoWMIRegistrationControl: int;
const unique IoWriteErrorLogEntry: int;
const unique IofCallDriver: int;
const unique IofCompleteRequest: int;
const unique KeAcquireSpinLockRaiseToDpc: int;
const unique KeDelayExecutionThread: int;
const unique KeInitializeDpc: int;
const unique KeInitializeEvent: int;
const unique KeInitializeSemaphore: int;
const unique KeInitializeSpinLock: int;
const unique KeInsertQueueDpc: int;
const unique KeQueryTickCount: int;
const unique KeQueryTimeIncrement: int;
const unique KeReleaseSemaphore: int;
const unique KeSetEvent: int;
const unique KeStallExecutionProcessor: int;
const unique KeSynchronizeExecution: int;
const unique KeWaitForSingleObject: int;
const unique KfReleaseSpinLock: int;
const {:count 3} unique LegacyZipModeQualifier___11: int;
const unique MPR1: int;
const unique MPR3: int;
const unique MmAllocateContiguousMemory: int;
const unique MmFreeContiguousMemory: int;
const unique MmMapLockedPagesSpecifyCache: int;
const unique MmPageEntireDriver: int;
const unique MmResetDriverPaging: int;
const unique MmUnlockPages: int;
const {:count 7} unique ModeQualifier___6: int;
const unique NP: int;
const unique ObReferenceObjectByHandle: int;
const unique ObfDereferenceObject: int;
const unique ObfReferenceObject: int;
const unique PhysicalZero: int;
const {:count 25} unique PnpIrpName: int;
const unique PoCallDriver: int;
const unique PoRequestPowerIrp: int;
const unique PoSetPowerState: int;
const unique PoStartNextPowerIrp: int;
const unique PortInfoMutex: int;
const unique PortInfoReferenceCount: int;
const unique Ppt1284_3AssignAddress: int;
const unique PptAcquireRemoveLock: int;
const unique PptAcquireRemoveLockOrFailIrp: int;
const unique PptAddPptRemovalRelation: int;
const unique PptBreakOn: int;
const unique PptBuildDeviceObject: int;
const unique PptBuildParallelPortDeviceName: int;
const unique PptBuildResourceList: int;
const unique PptCancelRoutine: int;
const unique PptCheckByteMode: int;
const unique PptCheckIfNon1284_3Present: int;
const unique PptCheckIfStl1284_3: int;
const unique PptCheckIfStlProductId: int;
const unique PptCleanRemovalRelationsList: int;
const unique PptClearByteMode: int;
const unique PptClearChipMode: int;
const unique PptCompleteRequest: int;
const unique PptConnectInterrupt: int;
const unique PptDebugDumpPnpIrpInfo: int;
const unique PptDebugDumpResourceList: int;
const unique PptDebugDumpResourceRequirementsList: int;
const unique PptDebugLevel: int;
const unique PptDeselectDevice: int;
const unique PptDeselectLegacyZip: int;
const unique PptDetectBytePort: int;
const unique PptDetectChipFilter: int;
const unique PptDetectEcpPort: int;
const unique PptDetectEppPort: int;
const unique PptDetectEppPortIfDot3DevicePresent: int;
const unique PptDetectEppPortIfUserRequested: int;
const unique PptDetectPortCapabilities: int;
const unique PptDetectPortType: int;
const unique PptDetermineFifoDepth: int;
const unique PptDetermineFifoWidth: int;
const unique PptDisconnectInterrupt: int;
const unique PptDispatchCleanup: int;
const unique PptDispatchClose: int;
const unique PptDispatchCreate: int;
const unique PptDispatchInternalDeviceControl: int;
const unique PptDispatchPnp: int;
const unique PptDispatchPostProcessIrp: int;
const unique PptDispatchPower: int;
const unique PptDispatchPreProcessIrp: int;
const unique PptDispatchSystemControl: int;
const unique PptDot3Retries: int;
const unique PptDumpPptRemovalRelationsStruct: int;
const unique PptDumpRemovalRelationsList: int;
const unique PptEcrClearMode: int;
const unique PptEcrSetMode: int;
const unique PptFailRequest: int;
const unique PptFindNatChip: int;
const unique PptFreePort: int;
const unique PptFreePortDpc: int;
const unique PptFreePortFromInterruptLevel: int;
const unique PptGetPortNameFromPhysicalDeviceObject: int;
const unique PptGetPortNumberFromLptName: int;
const unique PptInitializeDeviceExtension: int;
const unique PptInitiate1284_3: int;
const unique PptInterruptService: int;
const unique PptIsNecR98Machine: int;
const unique PptIsPci: int;
const unique PptLegacyZipCheckDevice: int;
const unique PptLegacyZipClockDiskModeByte: int;
const unique PptLegacyZipClockPrtModeByte: int;
const unique PptLegacyZipSetDiskMode: int;
const unique PptLogError: int;
const unique PptPnpAddDevice: int;
const unique PptPnpBounceAndCatchPnpIrp: int;
const unique PptPnpBuildRemovalRelations: int;
const unique PptPnpCancelRemoveDevice: int;
const unique PptPnpCancelStopDevice: int;
const {:count 25} unique PptPnpDispatchFunctionTable: int;
const unique PptPnpFilterExistsNonIrqResourceList: int;
const unique PptPnpFilterGetEndOfResourceRequirementsList: int;
const unique PptPnpFilterNukeIrqResourceDescriptors: int;
const unique PptPnpFilterNukeIrqResourceDescriptorsFromAllLists: int;
const unique PptPnpFilterRemoveIrqResourceLists: int;
const unique PptPnpFilterResourceRequirements: int;
const unique PptPnpInitDispatchFunctionTable: int;
const unique PptPnpListContainsIrqResourceDescriptor: int;
const unique PptPnpPassThroughPnpIrpAndReleaseRemoveLock: int;
const unique PptPnpQueryDeviceRelations: int;
const unique PptPnpQueryRemoveDevice: int;
const unique PptPnpQueryStopDevice: int;
const unique PptPnpRemoveDevice: int;
const unique PptPnpStartDevice: int;
const unique PptPnpStartScanCmResourceList: int;
const unique PptPnpStartScanPciCardCmResourceList: int;
const unique PptPnpStartValidateResources: int;
const unique PptPnpStopDevice: int;
const unique PptPnpSurpriseRemoval: int;
const unique PptPnpUnhandledIrp: int;
const unique PptPowerComplete: int;
const unique PptQueryNumWaiters: int;
const unique PptRegGetDeviceParameterDword: int;
const unique PptRegInitDriverSettings: int;
const unique PptRegSetDeviceParameterDword: int;
const unique PptReleaseRemoveLock: int;
const unique PptReleaseRemoveLockAndWait: int;
const unique PptRemovePptRemovalRelation: int;
const unique PptSend1284_3Command: int;
const unique PptSetByteMode: int;
const unique PptSetCancelRoutine: int;
const unique PptSetChipMode: int;
const unique PptSynchCompletionRoutine: int;
const unique PptSynchronizedDecrement: int;
const unique PptSynchronizedDisconnect: int;
const unique PptSynchronizedIncrement: int;
const unique PptSynchronizedQueue: int;
const unique PptSynchronizedRead: int;
const unique PptTraversePortCheckList: int;
const unique PptTryAllocatePort: int;
const unique PptTryAllocatePortAtInterruptLevel: int;
const unique PptTrySelectDevice: int;
const unique PptTrySelectLegacyZip: int;
const unique PptUnload: int;
const unique PptWmiAllocFreeCountsGuid: int;
const unique PptWmiGuidList: int;
const unique PptWmiInitWmi: int;
const unique PptWmiQueryWmiDataBlock: int;
const unique PptWmiQueryWmiRegInfo: int;
const unique PsCreateSystemThread: int;
const unique PsTerminateSystemThread: int;
const unique READ_PORT_UCHAR: int;
const unique RegistryPath: int;
const unique RtlAnsiStringToUnicodeString: int;
const unique RtlAppendUnicodeStringToString: int;
const unique RtlCompareMemory: int;
const unique RtlCompareUnicodeString: int;
const unique RtlCopyUnicodeString: int;
const unique RtlDeleteRegistryValue: int;
const unique RtlFreeUnicodeString: int;
const unique RtlInitString: int;
const unique RtlInitUnicodeString: int;
const unique RtlIntegerToUnicodeString: int;
const unique RtlQueryRegistryValues: int;
const unique RtlUnicodeStringToInteger: int;
const unique SKIP1: int;
const unique SKIP2: int;
const unique UNLOADED: int;
const unique WRITE_PORT_UCHAR: int;
const unique WmiCompleteRequest: int;
const unique WmiSystemControl: int;
const unique ZwClose: int;
const unique ZwQueryValueKey: int;
const unique ZwSetValueKey: int;
const unique _BLAST_init: int;
const unique _SLAM_alloc_dummy: int;
const unique __SMACK_assert: int;
const unique __SMACK_assume: int;
const unique __SMACK_decls: int;
const unique __SMACK_nondet: int;
const unique __SMACK_nondet.XXX: int;
const unique __VERIFIER_nondet_char: int;
const unique __VERIFIER_nondet_int: int;
const unique __VERIFIER_nondet_long: int;
const unique __VERIFIER_nondet_pointer: int;
const unique compFptr: int;
const unique compRegistered: int;
const unique customIrp: int;
const unique errorFn: int;
const unique llvm.memmove.p0i8.p0i8.i32: int;
const unique lowerDriverReturn: int;
const unique main: int;
const unique malloc: int;
const unique myStatus: int;
const unique pended: int;
const unique pirp: int;
const unique routine: int;
const unique s: int;
const unique setEventCalled: int;
const unique stubMoreProcessingRequired: int;
const unique stub_driver_init: int;
procedure $static_init()
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  $M.23[__SMACK_nondet.XXX] := 0;
  $M.24[myStatus] := 0;
  $M.25[$pa(PnpIrpName, 0, 4)] := $pa($pa(.str105, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 1, 4)] := $pa($pa(.str106, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 2, 4)] := $pa($pa(.str107, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 3, 4)] := $pa($pa(.str108, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 4, 4)] := $pa($pa(.str109, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 5, 4)] := $pa($pa(.str110, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 6, 4)] := $pa($pa(.str111, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 7, 4)] := $pa($pa(.str112, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 8, 4)] := $pa($pa(.str113, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 9, 4)] := $pa($pa(.str114, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 10, 4)] := $pa($pa(.str115, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 11, 4)] := $pa($pa(.str116, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 12, 4)] := $pa($pa(.str117, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 13, 4)] := $pa($pa(.str118, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 14, 4)] := $pa($pa(.str119, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 15, 4)] := $pa($pa(.str120, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 16, 4)] := $pa($pa(.str121, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 17, 4)] := $pa($pa(.str122, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 18, 4)] := $pa($pa(.str123, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 19, 4)] := $pa($pa(.str124, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 20, 4)] := $pa($pa(.str125, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 21, 4)] := $pa($pa(.str126, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 22, 4)] := $pa($pa(.str127, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 23, 4)] := $pa($pa(.str128, 0, 41), 0, 1);
  $M.25[$pa(PnpIrpName, 24, 4)] := $pa($pa(.str129, 0, 41), 0, 1);
  $M.0[$pa(RegistryPath, 0, 1)] := 0;
  $M.0[$pa(RegistryPath, 2, 1)] := 0;
  $M.0[$pa(RegistryPath, 4, 1)] := 0;
  $M.26[PortInfoMutex] := 0;
  $M.27[pended] := 0;
  $M.28[PptDot3Retries] := 5;
  $M.29[$pa(ModeQualifier___6, 0, 1)] := 170;
  $M.29[$pa(ModeQualifier___6, 1, 1)] := 85;
  $M.29[$pa(ModeQualifier___6, 2, 1)] := 0;
  $M.29[$pa(ModeQualifier___6, 3, 1)] := 255;
  $M.29[$pa(ModeQualifier___6, 4, 1)] := 135;
  $M.29[$pa(ModeQualifier___6, 5, 1)] := 120;
  $M.29[$pa(ModeQualifier___6, 6, 1)] := 255;
  $M.30[Extension_FilterMode] := 0;
  $M.31[$pa(GUID_PARALLEL_DEVICE, 0, 1)] := -1745391888;
  $M.31[$pa(GUID_PARALLEL_DEVICE, 4, 1)] := 63619;
  $M.31[$pa(GUID_PARALLEL_DEVICE, 6, 1)] := 4560;
  $M.31[$pa($pa(GUID_PARALLEL_DEVICE, 8, 1), 0, 1)] := 175;
  $M.31[$pa($pa(GUID_PARALLEL_DEVICE, 8, 1), 1, 1)] := 31;
  $M.31[$pa($pa(GUID_PARALLEL_DEVICE, 8, 1), 2, 1)] := 0;
  $M.31[$pa($pa(GUID_PARALLEL_DEVICE, 8, 1), 3, 1)] := 0;
  $M.31[$pa($pa(GUID_PARALLEL_DEVICE, 8, 1), 4, 1)] := 248;
  $M.31[$pa($pa(GUID_PARALLEL_DEVICE, 8, 1), 5, 1)] := 0;
  $M.31[$pa($pa(GUID_PARALLEL_DEVICE, 8, 1), 6, 1)] := 132;
  $M.31[$pa($pa(GUID_PARALLEL_DEVICE, 8, 1), 7, 1)] := 92;
  $M.32[$pa(GUID_PARCLASS_DEVICE, 0, 1)] := -2128623963;
  $M.32[$pa(GUID_PARCLASS_DEVICE, 4, 1)] := 63272;
  $M.32[$pa(GUID_PARCLASS_DEVICE, 6, 1)] := 4560;
  $M.32[$pa($pa(GUID_PARCLASS_DEVICE, 8, 1), 0, 1)] := 165;
  $M.32[$pa($pa(GUID_PARCLASS_DEVICE, 8, 1), 1, 1)] := 55;
  $M.32[$pa($pa(GUID_PARCLASS_DEVICE, 8, 1), 2, 1)] := 0;
  $M.32[$pa($pa(GUID_PARCLASS_DEVICE, 8, 1), 3, 1)] := 0;
  $M.32[$pa($pa(GUID_PARCLASS_DEVICE, 8, 1), 4, 1)] := 248;
  $M.32[$pa($pa(GUID_PARCLASS_DEVICE, 8, 1), 5, 1)] := 117;
  $M.32[$pa($pa(GUID_PARCLASS_DEVICE, 8, 1), 6, 1)] := 62;
  $M.32[$pa($pa(GUID_PARCLASS_DEVICE, 8, 1), 7, 1)] := 209;
  $M.0[PptDebugLevel] := 0;
  $M.0[PptBreakOn] := 0;
  $M.33[PortInfoReferenceCount] := -1;
  $M.0[$pa($pa(PhysicalZero, 0, 1), 0, 1)] := 0;
  $M.0[$pa($pa(PhysicalZero, 0, 1), 4, 1)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 0, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 1, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 2, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 3, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 4, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 5, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 6, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 7, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 8, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 9, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 10, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 11, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 12, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 13, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 14, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 15, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 16, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 17, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 18, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 19, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 20, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 21, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 22, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 23, 4)] := 0;
  $M.34[$pa(PptPnpDispatchFunctionTable, 24, 4)] := 0;
  $M.35[s] := 0;
  $M.36[NP] := 0;
  $M.37[SKIP1] := 0;
  $M.38[compRegistered] := 0;
  $M.39[compFptr] := 0;
  $M.40[routine] := 0;
  $M.41[$pa(LegacyZipModeQualifier___11, 0, 1)] := 0;
  $M.41[$pa(LegacyZipModeQualifier___11, 1, 1)] := 60;
  $M.41[$pa(LegacyZipModeQualifier___11, 2, 1)] := 32;
  $M.0[$pa(PptWmiAllocFreeCountsGuid, 0, 1)] := 1270573546;
  $M.0[$pa(PptWmiAllocFreeCountsGuid, 4, 1)] := 26707;
  $M.0[$pa(PptWmiAllocFreeCountsGuid, 6, 1)] := 4562;
  $M.0[$pa($pa(PptWmiAllocFreeCountsGuid, 8, 1), 0, 1)] := 142;
  $M.0[$pa($pa(PptWmiAllocFreeCountsGuid, 8, 1), 1, 1)] := 206;
  $M.0[$pa($pa(PptWmiAllocFreeCountsGuid, 8, 1), 2, 1)] := 0;
  $M.0[$pa($pa(PptWmiAllocFreeCountsGuid, 8, 1), 3, 1)] := 192;
  $M.0[$pa($pa(PptWmiAllocFreeCountsGuid, 8, 1), 4, 1)] := 79;
  $M.0[$pa($pa(PptWmiAllocFreeCountsGuid, 8, 1), 5, 1)] := 142;
  $M.0[$pa($pa(PptWmiAllocFreeCountsGuid, 8, 1), 6, 1)] := 244;
  $M.0[$pa($pa(PptWmiAllocFreeCountsGuid, 8, 1), 7, 1)] := 129;
  $M.0[$pa($pa(PptWmiGuidList, 0, 12), 0, 1)] := PptWmiAllocFreeCountsGuid;
  $M.0[$pa($pa(PptWmiGuidList, 0, 12), 4, 1)] := 1;
  $M.0[$pa($pa(PptWmiGuidList, 0, 12), 8, 1)] := 0;
  $M.42[DC] := 0;
  $M.43[UNLOADED] := 0;
  $M.44[SKIP2] := 0;
  $M.45[MPR1] := 0;
  $M.46[MPR3] := 0;
  $M.47[IPC] := 0;
  $M.48[lowerDriverReturn] := 0;
  $M.49[setEventCalled] := 0;
  $M.50[customIrp] := 0;
  $M.51[pirp] := 0;
  $M.52[_SLAM_alloc_dummy] := 0;
  return;
}
procedure CheckPort(wPortAddr: int, bMask: int, bValue: int, usTimeDelay: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b20: bool;
  var $b31: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p32: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(8, 1));
  call $p2 := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 9003, 26} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9003, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9003, 58} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9003, 74} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9005, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9006, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9007, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9013, 9} true;
  call $p3 := READ_PORT_UCHAR(wPortAddr);
  assume {:sourceloc "parport_true.i.cil.c", 9013, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9015, 3} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 9015, 3} true;
  $p5 := bMask;
  assume {:sourceloc "parport_true.i.cil.c", 9015, 3} true;
  $p6 := $and($p4, $p5);
  assume {:sourceloc "parport_true.i.cil.c", 9015, 3} true;
  $p7 := bValue;
  assume {:sourceloc "parport_true.i.cil.c", 9015, 3} true;
  $b := ($p6 == $p7);
  assume {:sourceloc "parport_true.i.cil.c", 9015, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9016, 5} true;
  $p32 := 1;
  goto $bb19;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9015, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9015, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9021, 9} true;
  call $p8 := KeQueryTimeIncrement();
  assume {:sourceloc "parport_true.i.cil.c", 9021, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9022, 3} true;
  $p9 := usTimeDelay;
  assume {:sourceloc "parport_true.i.cil.c", 9022, 3} true;
  $p10 := $mul($p9, 10);
  assume {:sourceloc "parport_true.i.cil.c", 9022, 3} true;
  $p11 := $mul($p10, 10);
  assume {:sourceloc "parport_true.i.cil.c", 9022, 3} true;
  $p12 := $add($p11, $p8);
  assume {:sourceloc "parport_true.i.cil.c", 9022, 3} true;
  $p13 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 9022, 3} true;
  $p14 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 9022, 3} true;
  $M.8[$p14] := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 9023, 3} true;
  call KeQueryTickCount($p1);
  assume {:sourceloc "parport_true.i.cil.c", 9026, 3} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 9026, 13} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9029, 5} true;
  call KeQueryTickCount($p2);
  assume {:sourceloc "parport_true.i.cil.c", 9030, 11} true;
  call $p15 := READ_PORT_UCHAR(wPortAddr);
  assume {:sourceloc "parport_true.i.cil.c", 9030, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9032, 5} true;
  $p16 := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 9032, 5} true;
  $p17 := bMask;
  assume {:sourceloc "parport_true.i.cil.c", 9032, 5} true;
  $p18 := $and($p16, $p17);
  assume {:sourceloc "parport_true.i.cil.c", 9032, 5} true;
  $p19 := bValue;
  assume {:sourceloc "parport_true.i.cil.c", 9032, 5} true;
  $b20 := ($p18 == $p19);
  assume {:sourceloc "parport_true.i.cil.c", 9032, 5} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 9033, 7} true;
  $p32 := 1;
  goto $bb19;
$bb9:
  goto $bb12;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 9032, 5} true;
  assume $b20;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 9032, 5} true;
  assume !($b20);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 9038, 15} true;
  call $p21 := KeQueryTimeIncrement();
  assume {:sourceloc "parport_true.i.cil.c", 9038, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p22 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p23 := $M.0[$p22];
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p24 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p26 := $sub($p23, $p25);
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p27 := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p28 := $mul($p26, $p27);
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p29 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $p30 := $M.8[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  $b31 := $sgt($p28, $p30);
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  goto $bb15, $bb16;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 9041, 7} true;
  goto $bb18;
$bb14:
  goto $bb17;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  assume $b31;
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 9040, 5} true;
  assume !($b31);
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 9045, 3} true;
  goto $bb6;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 9049, 3} true;
  $p32 := 0;
  goto $bb19;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 9051, 1} true;
  $r := $p32;
  return;
}
procedure DriverEntry(DriverObject: int, pRegistryPath: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2669, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2669, 68} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2674, 3} true;
  call PptRegInitDriverSettings(pRegistryPath);
  assume {:sourceloc "parport_true.i.cil.c", 2675, 12} true;
  $p := $pa($pa(pRegistryPath, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2675, 12} true;
  $p1 := $M.53[$p];
  assume {:sourceloc "parport_true.i.cil.c", 2675, 12} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 2675, 12} true;
  call $p3 := ExAllocatePoolWithTag(1, $p2, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 2675, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2677, 3} true;
  $p4 := $p2i($p3);
  assume {:sourceloc "parport_true.i.cil.c", 2677, 3} true;
  $b := (0 == $p4);
  assume {:sourceloc "parport_true.i.cil.c", 2677, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2680, 5} true;
  $p47 := -1073741670;
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 2683, 5} true;
  $p5 := $M.0[$pa($pa(RegistryPath, 0, 8), 4, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 2683, 5} true;
  $p6 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 2683, 5} true;
  $p7 := $pa($pa(pRegistryPath, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2683, 5} true;
  $p8 := $M.53[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 2683, 5} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 2683, 5} true;
  call $memset.0($p6, 0, $p9, 2, false);
  assume {:sourceloc "parport_true.i.cil.c", 2684, 5} true;
  $p10 := $pa($pa(pRegistryPath, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2684, 5} true;
  $p11 := $M.53[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 2684, 5} true;
  $M.0[$pa($pa(RegistryPath, 0, 8), 0, 1)] := $p11;
  assume {:sourceloc "parport_true.i.cil.c", 2685, 5} true;
  $p12 := $pa($pa(pRegistryPath, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2685, 5} true;
  $p13 := $M.53[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 2685, 5} true;
  $M.0[$pa($pa(RegistryPath, 0, 8), 2, 1)] := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  $p14 := $M.0[$pa($pa(RegistryPath, 0, 8), 4, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  $p15 := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  $p16 := $pa($pa(pRegistryPath, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  $p17 := $M.54[$p16];
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  $p18 := $p17;
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  $p19 := $pa($pa(pRegistryPath, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  $p20 := $M.53[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  $p21 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 2686, 5} true;
  call llvm.memmove.p0i8.p0i8.i32($p15, $p18, $p21, 2, false);
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2677, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2677, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2690, 3} true;
  call PptPnpInitDispatchFunctionTable();
  assume {:sourceloc "parport_true.i.cil.c", 2691, 3} true;
  $p22 := $pa($pa(DriverObject, 0, 168), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2691, 3} true;
  $p23 := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 2691, 3} true;
  $p24 := $pa($pa($p23, 0, 112), 0, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2691, 3} true;
  $M.55[$p24] := PptDispatchCreate;
  assume {:sourceloc "parport_true.i.cil.c", 2692, 3} true;
  $p25 := $pa($pa(DriverObject, 0, 168), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2692, 3} true;
  $p26 := $p25;
  assume {:sourceloc "parport_true.i.cil.c", 2692, 3} true;
  $p27 := $pa($pa($p26, 0, 112), 2, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2692, 3} true;
  $M.55[$p27] := PptDispatchClose;
  assume {:sourceloc "parport_true.i.cil.c", 2693, 3} true;
  $p28 := $pa($pa(DriverObject, 0, 168), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2693, 3} true;
  $p29 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 2693, 3} true;
  $p30 := $pa($pa($p29, 0, 112), 15, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2693, 3} true;
  $M.55[$p30] := PptDispatchInternalDeviceControl;
  assume {:sourceloc "parport_true.i.cil.c", 2694, 3} true;
  $p31 := $pa($pa(DriverObject, 0, 168), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2694, 3} true;
  $p32 := $p31;
  assume {:sourceloc "parport_true.i.cil.c", 2694, 3} true;
  $p33 := $pa($pa($p32, 0, 112), 18, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2694, 3} true;
  $M.55[$p33] := PptDispatchCleanup;
  assume {:sourceloc "parport_true.i.cil.c", 2695, 3} true;
  $p34 := $pa($pa(DriverObject, 0, 168), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2695, 3} true;
  $p35 := $p34;
  assume {:sourceloc "parport_true.i.cil.c", 2695, 3} true;
  $p36 := $pa($pa($p35, 0, 112), 27, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2695, 3} true;
  $M.55[$p36] := PptDispatchPnp;
  assume {:sourceloc "parport_true.i.cil.c", 2696, 3} true;
  $p37 := $pa($pa(DriverObject, 0, 168), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2696, 3} true;
  $p38 := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 2696, 3} true;
  $p39 := $pa($pa($p38, 0, 112), 22, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2696, 3} true;
  $M.55[$p39] := PptDispatchPower;
  assume {:sourceloc "parport_true.i.cil.c", 2697, 3} true;
  $p40 := $pa($pa(DriverObject, 0, 168), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2697, 3} true;
  $p41 := $p40;
  assume {:sourceloc "parport_true.i.cil.c", 2697, 3} true;
  $p42 := $pa($pa($p41, 0, 112), 23, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2697, 3} true;
  $M.55[$p42] := PptDispatchSystemControl;
  assume {:sourceloc "parport_true.i.cil.c", 2698, 3} true;
  $p43 := $pa($pa(DriverObject, 0, 168), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2698, 3} true;
  $p44 := $M.55[$p43];
  assume {:sourceloc "parport_true.i.cil.c", 2698, 3} true;
  $p45 := $pa($pa($p44, 0, 20), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2698, 3} true;
  $M.56[$p45] := PptPnpAddDevice;
  assume {:sourceloc "parport_true.i.cil.c", 2699, 3} true;
  $p46 := $pa($pa(DriverObject, 0, 168), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2699, 3} true;
  $M.55[$p46] := PptUnload;
  assume {:sourceloc "parport_true.i.cil.c", 2701, 3} true;
  $p47 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2703, 1} true;
  $r := $p47;
  return;
}
procedure ExAcquireFastMutex(FastMutex: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9804, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9810, 1} true;
  return;
}
procedure ExAllocatePoolWithTag(PoolType: int, NumberOfBytes: int, Tag: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9822, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9822, 57} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9823, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9829, 9} true;
  call $p := $malloc(NumberOfBytes);
  assume {:sourceloc "parport_true.i.cil.c", 9829, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9830, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9832, 3} true;
  $r := $p;
  return;
}
procedure ExFreePool(P: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9836, 23} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9842, 1} true;
  return;
}
procedure ExReleaseFastMutex(FastMutex: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9812, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9818, 1} true;
  return;
}
procedure ExfInterlockedInsertHeadList(ListHead: int, ListEntry: int, Lock: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9846, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9847, 87} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9848, 87} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9852, 3} true;
  $r := 0;
  return;
}
procedure ExfInterlockedInsertTailList(ListHead: int, ListEntry: int, Lock: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9858, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9859, 87} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9860, 87} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9864, 3} true;
  $r := 0;
  return;
}
procedure ExfInterlockedRemoveHeadList(ListHead: int, Lock: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9869, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9870, 87} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9874, 3} true;
  $r := 0;
  return;
}
procedure InitNEC_98(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7828, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7833, 3} true;
  $p := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7833, 3} true;
  $p1 := $pa($pa($p, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7833, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 7833, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7834, 3} true;
  $p3 := $pa($p2, 9, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7834, 3} true;
  call WRITE_PORT_UCHAR($p3, 16);
  assume {:sourceloc "parport_true.i.cil.c", 7835, 3} true;
  $p4 := $pa($p2, 14, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7835, 3} true;
  call WRITE_PORT_UCHAR($p4, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7836, 3} true;
  $p5 := $pa($p2, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7836, 3} true;
  call WRITE_PORT_UCHAR($p5, 4);
  assume {:sourceloc "parport_true.i.cil.c", 7840, 1} true;
  return;
}
procedure InterlockedDecrement(p#0: int)
  returns ($r: int);
procedure InterlockedExchange(p#0: int, p#1: int)
  returns ($r: int);
procedure InterlockedIncrement(p#0: int)
  returns ($r: int);
procedure IoAcquireCancelSpinLock(p#0: int);
procedure IoAcquireRemoveLockEx(RemoveLock: int, Tag: int, File: int, Line: int, RemlockSize: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10929, 48} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10930, 70} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10930, 82} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10931, 70} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10931, 83} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10932, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10932, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10935, 3} true;
  $b := ($p != 0);
  assume {:sourceloc "parport_true.i.cil.c", 10935, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10936, 5} true;
  $p1 := 0;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10938, 5} true;
  $p1 := -1073741738;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10935, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10935, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10941, 1} true;
  $r := $p1;
  return;
}
procedure IoAllocateErrorLogEntry(p#0: int, p#1: int)
  returns ($r: int);
procedure IoAllocateMdl(VirtualAddress: int, Length: int, SecondaryBuffer: int, ChargeQuota: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9880, 26} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9880, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9880, 66} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9881, 28} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9881, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9882, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9882, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9886, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9886, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9887, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 9890, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9886, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9886, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9898, 7} true;
  $p1 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 9905, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9894, 13} true;
  call $p2 := $malloc(28);
  assume {:sourceloc "parport_true.i.cil.c", 9894, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9896, 7} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9896, 7} true;
  $p1 := $p3;
  goto $bb6;
}
procedure IoAttachDeviceToDeviceStack(SourceDevice: int, TargetDevice: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9908, 59} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9908, 89} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9909, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9909, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9912, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9912, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9913, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 9916, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9912, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9912, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9921, 7} true;
  $p1 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 9928, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9919, 7} true;
  $p1 := TargetDevice;
  goto $bb6;
}
procedure IoBuildAsynchronousFsdRequest(MajorFunction: int, DeviceObject: int, Buffer: int, Length: int, StartingOffset: int, IoStatusBlock: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9935, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9935, 73} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9936, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9936, 57} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9936, 81} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9937, 53} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9938, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9938, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9942, 3} true;
  $M.50[customIrp] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 9943, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9943, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9944, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 9947, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9943, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9943, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9955, 7} true;
  $p1 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 9962, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9951, 13} true;
  call $p2 := $malloc(112);
  assume {:sourceloc "parport_true.i.cil.c", 9951, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9953, 7} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9953, 7} true;
  $p1 := $p3;
  goto $bb6;
}
procedure IoBuildDeviceIoControlRequest(IoControlCode: int, DeviceObject: int, InputBuffer: int, InputBufferLength: int, OutputBuffer: int, OutputBufferLength: int, InternalDeviceIoControl: int, Event: int, IoStatusBlock: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9972, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9972, 73} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9973, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9973, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9973, 88} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9974, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9974, 71} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9975, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9975, 69} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9976, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9976, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9980, 3} true;
  $M.50[customIrp] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 9981, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9981, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9982, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 9985, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9981, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9981, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9993, 7} true;
  $p1 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10000, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9989, 13} true;
  call $p2 := $malloc(112);
  assume {:sourceloc "parport_true.i.cil.c", 9989, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9991, 7} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9991, 7} true;
  $p1 := $p3;
  goto $bb6;
}
procedure IoConnectInterrupt(p#0: int, p#1: int, p#2: int, p#3: int, p#4: int, p#5: int, p#6: int, p#7: int, p#8: int, p#9: int, p#10: int)
  returns ($r: int);
procedure IoCreateDevice(DriverObject: int, DeviceExtensionSize: int, DeviceName: int, DeviceType: int, DeviceCharacteristics: int, Exclusive: int, DeviceObject: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10006, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10006, 61} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10007, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10007, 60} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10007, 79} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10008, 33} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10008, 61} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10009, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10009, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10013, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10013, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10014, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10017, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10013, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10013, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10026, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10033, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10021, 13} true;
  call $p2 := $malloc(184);
  assume {:sourceloc "parport_true.i.cil.c", 10021, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10022, 7} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 10022, 7} true;
  $M.16[DeviceObject] := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 10024, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure IoCreateSymbolicLink(SymbolicLinkName: int, DeviceName: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10036, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10036, 82} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10037, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10037, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10040, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10040, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10041, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10044, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10040, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10040, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10049, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10056, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10047, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure IoDeleteDevice(DeviceObject: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10058, 36} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10064, 1} true;
  return;
}
procedure IoDeleteSymbolicLink(SymbolicLinkName: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10066, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10067, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10067, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10070, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10070, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10071, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10074, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10070, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10070, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10079, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10086, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10077, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure IoDetachDevice(TargetDevice: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10088, 36} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10094, 1} true;
  return;
}
procedure IoDisconnectInterrupt(p#0: int);
procedure IoFreeIrp(Irp: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10096, 21} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10102, 1} true;
  return;
}
procedure IoFreeMdl(Mdl: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10104, 21} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10110, 1} true;
  return;
}
procedure IoGetConfigurationInformation()
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10117, 9} true;
  call $p := $malloc(40);
  assume {:sourceloc "parport_true.i.cil.c", 10117, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10119, 3} true;
  $p1 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 10119, 3} true;
  $r := $p1;
  return;
}
procedure IoInitializeRemoveLockEx(p#0: int, p#1: int, p#2: int, p#3: int, p#4: int);
procedure IoOpenDeviceRegistryKey(p#0: int, p#1: int, p#2: int, p#3: int)
  returns ($r: int);
procedure IoQueryDeviceDescription(BusType: int, BusNumber: int, ControllerType: int, ControllerNumber: int, PeripheralType: int, PeripheralNumber: int, CalloutRoutine: int, Context: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10140, 51} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10140, 68} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10140, 100} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10141, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10141, 81} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10142, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10142, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10153, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10154, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10154, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10157, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10157, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10158, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10161, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10157, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10157, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10166, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10173, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10164, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure IoRegisterDeviceInterface(PhysicalDeviceObject: int, InterfaceClassGuid: int, ReferenceString: int, SymbolicLinkName: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10178, 51} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10179, 82} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10180, 84} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10181, 84} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10182, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10182, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10185, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10185, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10186, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10189, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10185, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10185, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10194, 7} true;
  $p1 := -1073741808;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10201, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10192, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure IoReleaseCancelSpinLock(Irql: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10203, 36} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10209, 1} true;
  return;
}
procedure IoReleaseRemoveLockAndWaitEx(p#0: int, p#1: int, p#2: int);
procedure IoReleaseRemoveLockEx(p#0: int, p#1: int, p#2: int);
procedure IoReportResourceUsage(p#0: int, p#1: int, p#2: int, p#3: int, p#4: int, p#5: int, p#6: int, p#7: int, p#8: int)
  returns ($r: int);
procedure IoSetDeviceInterfaceState(SymbolicLinkName: int, Enable: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10212, 52} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10212, 79} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10213, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10213, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10216, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10216, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10217, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10220, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10216, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10216, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10225, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10232, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10223, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure IoSetHardErrorOrVerifyDevice(Irp: int, DeviceObject: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10234, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10234, 61} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10240, 1} true;
  return;
}
procedure IoWMIRegistrationControl(p#0: int, p#1: int)
  returns ($r: int);
procedure IoWriteErrorLogEntry(p#0: int);
procedure IofCallDriver(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $b14: bool;
  var $b16: bool;
  var $b21: bool;
  var $b23: bool;
  var $b26: bool;
  var $b3: bool;
  var $b4: bool;
  var $b8: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p12: int;
  var $p13: int;
  var $p15: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p22: int;
  var $p24: int;
  var $p25: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p30: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10257, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10258, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10259, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10259, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10262, 20} true;
  call $p1 := __VERIFIER_nondet_pointer();
  assume {:sourceloc "parport_true.i.cil.c", 10262, 20} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10267, 3} true;
  $p2 := $M.38[compRegistered];
  assume {:sourceloc "parport_true.i.cil.c", 10267, 3} true;
  $b := ($p2 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 10267, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10268, 5} true;
  $p20 := $M.40[routine];
  assume {:sourceloc "parport_true.i.cil.c", 10268, 5} true;
  $b21 := ($p20 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10268, 5} true;
  goto $bb43, $bb44;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10267, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10267, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10293, 3} true;
  $b3 := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10293, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10294, 5} true;
  goto $bb40;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10296, 5} true;
  $b4 := ($p == 1);
  assume {:sourceloc "parport_true.i.cil.c", 10296, 5} true;
  goto $bb12, $bb13;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 10293, 3} true;
  assume $b3;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 10293, 3} true;
  assume !($b3);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 10297, 7} true;
  goto $bb39;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 10300, 7} true;
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 10296, 5} true;
  assume $b4;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 10296, 5} true;
  assume !($b4);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 10309, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10310, 9} true;
  $p5 := 259;
  goto $bb15;
$bb15:
  goto $bb16;
$bb16:
  goto $bb17;
$bb17:
  goto $bb18;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 10317, 3} true;
  $p6 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10317, 3} true;
  $p7 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 10317, 3} true;
  $b8 := ($p6 == $p7);
  assume {:sourceloc "parport_true.i.cil.c", 10317, 3} true;
  goto $bb21, $bb22;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 10318, 5} true;
  $p19 := $M.47[IPC];
  assume {:sourceloc "parport_true.i.cil.c", 10318, 5} true;
  $M.35[s] := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 10319, 5} true;
  $M.48[lowerDriverReturn] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 10320, 3} true;
  goto $bb33;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 10321, 5} true;
  $p9 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10321, 5} true;
  $p10 := $M.45[MPR1];
  assume {:sourceloc "parport_true.i.cil.c", 10321, 5} true;
  $b11 := ($p9 == $p10);
  assume {:sourceloc "parport_true.i.cil.c", 10321, 5} true;
  goto $bb25, $bb26;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 10317, 3} true;
  assume $b8;
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 10317, 3} true;
  assume !($b8);
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 10322, 7} true;
  $b16 := ($p5 == 259);
  assume {:sourceloc "parport_true.i.cil.c", 10322, 7} true;
  goto $bb36, $bb37;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 10330, 7} true;
  $p12 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10330, 7} true;
  $p13 := $M.37[SKIP1];
  assume {:sourceloc "parport_true.i.cil.c", 10330, 7} true;
  $b14 := ($p12 == $p13);
  assume {:sourceloc "parport_true.i.cil.c", 10330, 7} true;
  goto $bb29, $bb30;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 10321, 5} true;
  assume $b11;
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 10321, 5} true;
  assume !($b11);
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 10331, 9} true;
  $p15 := $M.44[SKIP2];
  assume {:sourceloc "parport_true.i.cil.c", 10331, 9} true;
  $M.35[s] := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 10332, 9} true;
  $M.48[lowerDriverReturn] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 10333, 7} true;
  goto $bb31;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 10335, 9} true;
  call errorFn();
  goto $bb31;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 10330, 7} true;
  assume $b14;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 10330, 7} true;
  assume !($b14);
  goto $bb28;
$bb31:
  goto $bb32;
$bb32:
  goto $bb33;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 10340, 3} true;
  $r := $p5;
  return;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 10323, 9} true;
  $p18 := $M.46[MPR3];
  assume {:sourceloc "parport_true.i.cil.c", 10323, 9} true;
  $M.35[s] := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 10324, 9} true;
  $M.48[lowerDriverReturn] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 10325, 7} true;
  goto $bb38;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 10326, 9} true;
  $p17 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 10326, 9} true;
  $M.35[s] := $p17;
  assume {:sourceloc "parport_true.i.cil.c", 10327, 9} true;
  $M.48[lowerDriverReturn] := $p5;
  goto $bb38;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 10322, 7} true;
  assume $b16;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 10322, 7} true;
  assume !($b16);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 10329, 5} true;
  goto $bb32;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 10306, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10307, 9} true;
  $p5 := -1073741823;
  goto $bb15;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 10303, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10304, 9} true;
  $p5 := 0;
  goto $bb15;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 10270, 13} true;
  $p29 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 10270, 13} true;
  call $p30 := PptSynchCompletionRoutine(DeviceObject, Irp, $p29);
  assume {:sourceloc "parport_true.i.cil.c", 10270, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10271, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10273, 5} true;
  $p25 := $p30;
  goto $bb50;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 10274, 7} true;
  $p22 := $M.40[routine];
  assume {:sourceloc "parport_true.i.cil.c", 10274, 7} true;
  $b23 := ($p22 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 10274, 7} true;
  goto $bb47, $bb48;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 10268, 5} true;
  assume $b21;
  goto $bb41;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 10268, 5} true;
  assume !($b21);
  goto $bb42;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 10276, 19} true;
  $p27 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 10276, 19} true;
  call $p28 := PptPowerComplete(DeviceObject, Irp, $p27);
  assume {:sourceloc "parport_true.i.cil.c", 10276, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10277, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10279, 7} true;
  $p24 := $p28;
  goto $bb49;
$bb46:
  $p24 := $u.0;
  goto $bb49;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 10274, 7} true;
  assume $b23;
  goto $bb45;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 10274, 7} true;
  assume !($b23);
  goto $bb46;
$bb49:
  $p25 := $p24;
  goto $bb50;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 10283, 5} true;
  $b26 := ($p25 == -1073741802);
  assume {:sourceloc "parport_true.i.cil.c", 10283, 5} true;
  goto $bb53, $bb54;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 10285, 7} true;
  call stubMoreProcessingRequired();
  assume {:sourceloc "parport_true.i.cil.c", 10287, 5} true;
  goto $bb55;
$bb52:
  goto $bb55;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 10283, 5} true;
  assume $b26;
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 10283, 5} true;
  assume !($b26);
  goto $bb52;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 10290, 3} true;
  goto $bb5;
}
procedure IofCompleteRequest(Irp: int, PriorityBoost: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10345, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10345, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10349, 3} true;
  $p := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10349, 3} true;
  $p1 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 10349, 3} true;
  $b := ($p == $p1);
  assume {:sourceloc "parport_true.i.cil.c", 10349, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10350, 5} true;
  $p2 := $M.42[DC];
  assume {:sourceloc "parport_true.i.cil.c", 10350, 5} true;
  $M.35[s] := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 10351, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10353, 5} true;
  call errorFn();
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10349, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10349, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10358, 1} true;
  return;
}
procedure KeAcquireSpinLockRaiseToDpc(SpinLock: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10360, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10364, 3} true;
  $r := 0;
  return;
}
procedure KeDelayExecutionThread(WaitMode: int, Alertable: int, Interval: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10370, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10370, 68} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10370, 95} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10371, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10371, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10374, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10374, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10375, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10378, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10374, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10374, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10383, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10390, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10381, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure KeInitializeDpc(p#0: int, p#1: int, p#2: int);
procedure KeInitializeEvent(Event: int, Type: int, State: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10393, 33} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10393, 52} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10393, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10399, 1} true;
  return;
}
procedure KeInitializeSemaphore(Semaphore: int, Count: int, Limit: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10402, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10402, 58} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10402, 71} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10408, 1} true;
  return;
}
procedure KeInitializeSpinLock(SpinLock: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10410, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10416, 1} true;
  return;
}
procedure KeInsertQueueDpc(p#0: int, p#1: int, p#2: int)
  returns ($r: int);
procedure KeQueryTickCount(p#0: int);
procedure KeQueryTimeIncrement()
  returns ($r: int);
procedure KeReleaseSemaphore(Semaphore: int, Increment: int, Adjustment: int, Wait: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10419, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10419, 60} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10419, 77} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10420, 33} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10421, 12} true;
  call $p := __VERIFIER_nondet_long();
  assume {:sourceloc "parport_true.i.cil.c", 10421, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10424, 3} true;
  $r := $p;
  return;
}
procedure KeSetEvent(Event: int, Increment: int, Wait: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10438, 26} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10438, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10438, 64} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10439, 12} true;
  call $p := __VERIFIER_nondet_long();
  assume {:sourceloc "parport_true.i.cil.c", 10439, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10442, 3} true;
  $M.49[setEventCalled] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 10443, 3} true;
  $r := $p;
  return;
}
procedure KeStallExecutionProcessor(p#0: int);
procedure KeSynchronizeExecution(p#0: int, p#1: int, p#2: int)
  returns ($r: int);
procedure KeWaitForSingleObject(Object: int, WaitReason: int, WaitMode: int, Alertable: int, Timeout: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b12: bool;
  var $b4: bool;
  var $b7: bool;
  var $b8: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p13: int;
  var $p2: int;
  var $p3: int;
  var $p5: int;
  var $p6: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10450, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10450, 60} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10450, 89} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10451, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10451, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10452, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10452, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10455, 3} true;
  $p1 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10455, 3} true;
  $p2 := $M.46[MPR3];
  assume {:sourceloc "parport_true.i.cil.c", 10455, 3} true;
  $b := ($p1 == $p2);
  assume {:sourceloc "parport_true.i.cil.c", 10455, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10456, 5} true;
  $p11 := $M.49[setEventCalled];
  assume {:sourceloc "parport_true.i.cil.c", 10456, 5} true;
  $b12 := ($p11 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 10456, 5} true;
  goto $bb26, $bb27;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10462, 10} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10455, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10455, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10464, 5} true;
  $p3 := $M.50[customIrp];
  assume {:sourceloc "parport_true.i.cil.c", 10464, 5} true;
  $b4 := ($p3 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 10464, 5} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10465, 7} true;
  $p10 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 10465, 7} true;
  $M.35[s] := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 10466, 7} true;
  $M.50[customIrp] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 10467, 5} true;
  goto $bb15;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10468, 7} true;
  $p5 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10468, 7} true;
  $p6 := $M.46[MPR3];
  assume {:sourceloc "parport_true.i.cil.c", 10468, 7} true;
  $b7 := ($p5 == $p6);
  assume {:sourceloc "parport_true.i.cil.c", 10468, 7} true;
  goto $bb12, $bb13;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 10464, 5} true;
  assume $b4;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 10464, 5} true;
  assume !($b4);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 10470, 9} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 10472, 7} true;
  goto $bb14;
$bb11:
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 10468, 7} true;
  assume $b7;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 10468, 7} true;
  assume !($b7);
  goto $bb11;
$bb14:
  goto $bb15;
$bb15:
  goto $bb16;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 10477, 3} true;
  $b8 := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10477, 3} true;
  goto $bb19, $bb20;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 10478, 5} true;
  goto $bb23;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 10481, 5} true;
  goto $bb21;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 10477, 3} true;
  assume $b8;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 10477, 3} true;
  assume !($b8);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 10486, 7} true;
  $p9 := -1073741823;
  goto $bb22;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 10493, 1} true;
  $r := $p9;
  return;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 10484, 7} true;
  $p9 := 0;
  goto $bb22;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 10457, 7} true;
  $p13 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 10457, 7} true;
  $M.35[s] := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 10458, 7} true;
  $M.49[setEventCalled] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 10459, 5} true;
  goto $bb28;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 10460, 7} true;
  goto $bb5;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 10456, 5} true;
  assume $b12;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 10456, 5} true;
  assume !($b12);
  goto $bb25;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 10462, 3} true;
  goto $bb16;
}
procedure KfReleaseSpinLock(SpinLock: int, NewIrql: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10429, 36} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10429, 53} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10435, 1} true;
  return;
}
procedure MmAllocateContiguousMemory(NumberOfBytes: int, p#1: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b4: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p5: int;
  var $p6: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 10496, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p1 := $p;
  $p2 := p#1;
  call $memcpy.21.21($p1, $p2, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 10496, 74} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10497, 24} true;
  call $p3 := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10497, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10501, 3} true;
  $b := ($p3 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10501, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10502, 5} true;
  goto $bb18;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10504, 5} true;
  $b4 := ($p3 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 10504, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10501, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10501, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10505, 7} true;
  goto $bb19;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10507, 7} true;
  goto $bb11, $bb12;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10504, 5} true;
  assume $b4;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 10504, 5} true;
  assume !($b4);
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 10507, 14} true;
  goto $bb18;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 10515, 14} true;
  goto $bb13;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 10507, 7} true;
  assume false;
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 10507, 7} true;
  assume !(false);
  goto $bb10;
$bb13:
  goto $bb14;
$bb14:
  goto $bb15;
$bb15:
  goto $bb16;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 10520, 3} true;
  $p5 := 0;
  goto $bb17;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 10522, 1} true;
  $r := $p5;
  return;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 10510, 15} true;
  call $p6 := $malloc(NumberOfBytes);
  assume {:sourceloc "parport_true.i.cil.c", 10510, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10512, 9} true;
  $p5 := $p6;
  goto $bb17;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 10514, 9} true;
  $p5 := 0;
  goto $bb17;
}
procedure MmFreeContiguousMemory(BaseAddress: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10524, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10530, 1} true;
  return;
}
procedure MmMapLockedPagesSpecifyCache(MemoryDescriptorList: int, AccessMode: int, CacheType: int, BaseAddress: int, BugCheckOnFailure: int, Priority: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10537, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10537, 80} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10538, 56} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10538, 74} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10539, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10539, 79} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10543, 3} true;
  $r := 0;
  return;
}
procedure MmPageEntireDriver(AddressWithinSection: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10547, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10551, 3} true;
  $r := 0;
  return;
}
procedure MmResetDriverPaging(AddressWithinSection: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10555, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10561, 1} true;
  return;
}
procedure MmUnlockPages(MemoryDescriptorList: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10563, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10569, 1} true;
  return;
}
procedure ObReferenceObjectByHandle(Handle: int, DesiredAccess: int, ObjectType: int, AccessMode: int, Object: int, HandleInformation: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10576, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10576, 64} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10576, 93} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10577, 52} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10577, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10577, 108} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10578, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10578, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10581, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10581, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10582, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10585, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10581, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10581, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10590, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10597, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10588, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure ObfDereferenceObject(Object: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10599, 33} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10605, 1} true;
  return;
}
procedure ObfReferenceObject(p#0: int);
procedure PoCallDriver(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $b14: bool;
  var $b16: bool;
  var $b21: bool;
  var $b23: bool;
  var $b26: bool;
  var $b3: bool;
  var $b4: bool;
  var $b8: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p12: int;
  var $p13: int;
  var $p15: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p22: int;
  var $p24: int;
  var $p25: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p30: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10608, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10608, 58} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10609, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10609, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10612, 20} true;
  call $p1 := __VERIFIER_nondet_pointer();
  assume {:sourceloc "parport_true.i.cil.c", 10612, 20} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10617, 3} true;
  $p2 := $M.38[compRegistered];
  assume {:sourceloc "parport_true.i.cil.c", 10617, 3} true;
  $b := ($p2 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 10617, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10618, 5} true;
  $p20 := $M.40[routine];
  assume {:sourceloc "parport_true.i.cil.c", 10618, 5} true;
  $b21 := ($p20 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10618, 5} true;
  goto $bb43, $bb44;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10617, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10617, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10643, 3} true;
  $b3 := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10643, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10644, 5} true;
  goto $bb40;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10646, 5} true;
  $b4 := ($p == 1);
  assume {:sourceloc "parport_true.i.cil.c", 10646, 5} true;
  goto $bb12, $bb13;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 10643, 3} true;
  assume $b3;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 10643, 3} true;
  assume !($b3);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 10647, 7} true;
  goto $bb39;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 10650, 7} true;
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 10646, 5} true;
  assume $b4;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 10646, 5} true;
  assume !($b4);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 10659, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10660, 9} true;
  $p5 := 259;
  goto $bb15;
$bb15:
  goto $bb16;
$bb16:
  goto $bb17;
$bb17:
  goto $bb18;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 10667, 3} true;
  $p6 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10667, 3} true;
  $p7 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 10667, 3} true;
  $b8 := ($p6 == $p7);
  assume {:sourceloc "parport_true.i.cil.c", 10667, 3} true;
  goto $bb21, $bb22;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 10668, 5} true;
  $p19 := $M.47[IPC];
  assume {:sourceloc "parport_true.i.cil.c", 10668, 5} true;
  $M.35[s] := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 10669, 5} true;
  $M.48[lowerDriverReturn] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 10670, 3} true;
  goto $bb33;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 10671, 5} true;
  $p9 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10671, 5} true;
  $p10 := $M.45[MPR1];
  assume {:sourceloc "parport_true.i.cil.c", 10671, 5} true;
  $b11 := ($p9 == $p10);
  assume {:sourceloc "parport_true.i.cil.c", 10671, 5} true;
  goto $bb25, $bb26;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 10667, 3} true;
  assume $b8;
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 10667, 3} true;
  assume !($b8);
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 10672, 7} true;
  $b16 := ($p5 == 259);
  assume {:sourceloc "parport_true.i.cil.c", 10672, 7} true;
  goto $bb36, $bb37;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 10680, 7} true;
  $p12 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10680, 7} true;
  $p13 := $M.37[SKIP1];
  assume {:sourceloc "parport_true.i.cil.c", 10680, 7} true;
  $b14 := ($p12 == $p13);
  assume {:sourceloc "parport_true.i.cil.c", 10680, 7} true;
  goto $bb29, $bb30;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 10671, 5} true;
  assume $b11;
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 10671, 5} true;
  assume !($b11);
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 10681, 9} true;
  $p15 := $M.44[SKIP2];
  assume {:sourceloc "parport_true.i.cil.c", 10681, 9} true;
  $M.35[s] := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 10682, 9} true;
  $M.48[lowerDriverReturn] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 10683, 7} true;
  goto $bb31;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 10685, 9} true;
  call errorFn();
  goto $bb31;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 10680, 7} true;
  assume $b14;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 10680, 7} true;
  assume !($b14);
  goto $bb28;
$bb31:
  goto $bb32;
$bb32:
  goto $bb33;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 10690, 3} true;
  $r := $p5;
  return;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 10673, 9} true;
  $p18 := $M.46[MPR3];
  assume {:sourceloc "parport_true.i.cil.c", 10673, 9} true;
  $M.35[s] := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 10674, 9} true;
  $M.48[lowerDriverReturn] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 10675, 7} true;
  goto $bb38;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 10676, 9} true;
  $p17 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 10676, 9} true;
  $M.35[s] := $p17;
  assume {:sourceloc "parport_true.i.cil.c", 10677, 9} true;
  $M.48[lowerDriverReturn] := $p5;
  goto $bb38;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 10672, 7} true;
  assume $b16;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 10672, 7} true;
  assume !($b16);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 10679, 5} true;
  goto $bb32;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 10656, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10657, 9} true;
  $p5 := -1073741823;
  goto $bb15;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 10653, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10654, 9} true;
  $p5 := 0;
  goto $bb15;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 10620, 13} true;
  $p29 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 10620, 13} true;
  call $p30 := PptSynchCompletionRoutine(DeviceObject, Irp, $p29);
  assume {:sourceloc "parport_true.i.cil.c", 10620, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10621, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10623, 5} true;
  $p25 := $p30;
  goto $bb50;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 10624, 7} true;
  $p22 := $M.40[routine];
  assume {:sourceloc "parport_true.i.cil.c", 10624, 7} true;
  $b23 := ($p22 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 10624, 7} true;
  goto $bb47, $bb48;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 10618, 5} true;
  assume $b21;
  goto $bb41;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 10618, 5} true;
  assume !($b21);
  goto $bb42;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 10626, 19} true;
  $p27 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 10626, 19} true;
  call $p28 := PptPowerComplete(DeviceObject, Irp, $p27);
  assume {:sourceloc "parport_true.i.cil.c", 10626, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10627, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10629, 7} true;
  $p24 := $p28;
  goto $bb49;
$bb46:
  $p24 := $u.1;
  goto $bb49;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 10624, 7} true;
  assume $b23;
  goto $bb45;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 10624, 7} true;
  assume !($b23);
  goto $bb46;
$bb49:
  $p25 := $p24;
  goto $bb50;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 10633, 5} true;
  $b26 := ($p25 == -1073741802);
  assume {:sourceloc "parport_true.i.cil.c", 10633, 5} true;
  goto $bb53, $bb54;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 10635, 7} true;
  call stubMoreProcessingRequired();
  assume {:sourceloc "parport_true.i.cil.c", 10637, 5} true;
  goto $bb55;
$bb52:
  goto $bb55;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 10633, 5} true;
  assume $b26;
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 10633, 5} true;
  assume !($b26);
  goto $bb52;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 10640, 3} true;
  goto $bb5;
}
procedure PoRequestPowerIrp(p#0: int, p#1: int, p#2: int, p#3: int, p#4: int, p#5: int)
  returns ($r: int);
procedure PoSetPowerState(p#0: int, p#1: int, p#2: int)
  returns ($r: int);
procedure PoStartNextPowerIrp(Irp: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10694, 31} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10700, 1} true;
  return;
}
procedure Ppt1284_3AssignAddress(DeviceExtension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b29: bool;
  var $b35: bool;
  var $b40: bool;
  var $b42: bool;
  var $b49: bool;
  var $b51: bool;
  var $b56: bool;
  var $b58: bool;
  var $b62: bool;
  var $b67: bool;
  var $b74: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p41: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p5: int;
  var $p50: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p57: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p83: int;
  var $p84: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 4193, 48} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4194, 13} true;
  call $p := __VERIFIER_nondet_char();
  assume {:sourceloc "parport_true.i.cil.c", 4194, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4213, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4214, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4215, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4216, 3} true;
  $p1 := $pa($pa(DeviceExtension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4216, 3} true;
  $p2 := $pa($pa($p1, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4216, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 4216, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4217, 3} true;
  $p4 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4217, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4218, 3} true;
  $p5 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4218, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4219, 11} true;
  call $p6 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 4219, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4220, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 4220, 3} true;
  $p8 := $and($p7, -9);
  assume {:sourceloc "parport_true.i.cil.c", 4220, 3} true;
  $p9 := $or($p8, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4220, 3} true;
  $p10 := $trunc($p9, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4220, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4221, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 4221, 3} true;
  $p12 := $and($p11, -33);
  assume {:sourceloc "parport_true.i.cil.c", 4221, 3} true;
  $p13 := $trunc($p12, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4221, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4222, 3} true;
  call WRITE_PORT_UCHAR($p5, $p13);
  assume {:sourceloc "parport_true.i.cil.c", 4223, 3} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4223, 3} true;
  $p15 := $and($p14, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4223, 3} true;
  $p16 := $trunc($p15, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4223, 3} true;
  call WRITE_PORT_UCHAR($p5, $p16);
  assume {:sourceloc "parport_true.i.cil.c", 4224, 3} true;
  $p17 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4224, 3} true;
  $p18 := $pa($pa(ModeQualifier___6, 0, 7), $p17, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4224, 3} true;
  $p19 := $M.29[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 4224, 3} true;
  call WRITE_PORT_UCHAR($p3, $p19);
  assume {:sourceloc "parport_true.i.cil.c", 4225, 3} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4226, 12} true;
  call $p20 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4226, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4228, 3} true;
  $p21 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 4228, 3} true;
  $p22 := $and($p21, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4228, 3} true;
  $b := ($p22 == 184);
  assume {:sourceloc "parport_true.i.cil.c", 4228, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4230, 5} true;
  $p25 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 4, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4230, 5} true;
  call WRITE_PORT_UCHAR($p3, $p25);
  assume {:sourceloc "parport_true.i.cil.c", 4231, 5} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4232, 14} true;
  call $p26 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4232, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4234, 5} true;
  $p27 := $p26;
  assume {:sourceloc "parport_true.i.cil.c", 4234, 5} true;
  $p28 := $and($p27, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4234, 5} true;
  $b29 := ($p28 == 24);
  assume {:sourceloc "parport_true.i.cil.c", 4234, 5} true;
  goto $bb8, $bb9;
$bb2:
  $p23 := 0;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4228, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4228, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 4339, 3} true;
  call WRITE_PORT_UCHAR($p5, $p6);
  assume {:sourceloc "parport_true.i.cil.c", 4341, 3} true;
  $p24 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 4341, 3} true;
  $r := $p24;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 4236, 7} true;
  $p31 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 5, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4236, 7} true;
  call WRITE_PORT_UCHAR($p3, $p31);
  assume {:sourceloc "parport_true.i.cil.c", 4237, 7} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4238, 16} true;
  call $p32 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4238, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4240, 7} true;
  $p33 := $p32;
  assume {:sourceloc "parport_true.i.cil.c", 4240, 7} true;
  $p34 := $and($p33, 48);
  assume {:sourceloc "parport_true.i.cil.c", 4240, 7} true;
  $b35 := ($p34 == 48);
  assume {:sourceloc "parport_true.i.cil.c", 4240, 7} true;
  goto $bb13, $bb14;
$bb7:
  $p30 := 0;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 4234, 5} true;
  assume $b29;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 4234, 5} true;
  assume !($b29);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 4335, 3} true;
  $p23 := $p30;
  goto $bb5;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 4242, 9} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4245, 9} true;
  $p37 := 0;
  $p38 := 0;
  goto $bb16;
$bb12:
  $p36 := 0;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4240, 7} true;
  assume $b35;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 4240, 7} true;
  assume !($b35);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4332, 5} true;
  $p30 := $p36;
  goto $bb10;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 4245, 19} true;
  goto $bb17;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 4247, 11} true;
  $p39 := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 4247, 11} true;
  $b40 := $slt($p39, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4247, 11} true;
  goto $bb20, $bb21;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 4248, 13} true;
  $b67 := ($p38 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4248, 13} true;
  goto $bb59, $bb60;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 4254, 13} true;
  goto $bb22;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 4247, 11} true;
  assume $b40;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 4247, 11} true;
  assume !($b40);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 4278, 9} true;
  $p41 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 6, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4278, 9} true;
  call WRITE_PORT_UCHAR($p3, $p41);
  assume {:sourceloc "parport_true.i.cil.c", 4280, 9} true;
  $b42 := ($p37 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4280, 9} true;
  goto $bb25, $bb26;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 4282, 32} true;
  call $p44 := PptCheckIfNon1284_3Present(DeviceExtension);
  assume {:sourceloc "parport_true.i.cil.c", 4282, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4283, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4284, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4287, 11} true;
  $p45 := 0;
  $p46 := 0;
  goto $bb28;
$bb24:
  $p43 := $p37;
  goto $bb27;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 4280, 9} true;
  assume $b42;
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 4280, 9} true;
  assume !($b42);
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 4329, 7} true;
  $p36 := $p43;
  goto $bb15;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 4287, 21} true;
  goto $bb29;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 4289, 13} true;
  $p47 := $p45;
  assume {:sourceloc "parport_true.i.cil.c", 4289, 13} true;
  $p48 := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 4289, 13} true;
  $b49 := $slt($p47, $p48);
  assume {:sourceloc "parport_true.i.cil.c", 4289, 13} true;
  goto $bb32, $bb33;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 4291, 13} true;
  goto $bb40;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 4292, 15} true;
  goto $bb34;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 4289, 13} true;
  assume $b49;
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 4289, 13} true;
  assume !($b49);
  goto $bb31;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 4321, 11} true;
  $p50 := $p46;
  assume {:sourceloc "parport_true.i.cil.c", 4321, 11} true;
  $b51 := (1 == $p50);
  assume {:sourceloc "parport_true.i.cil.c", 4321, 11} true;
  goto $bb37, $bb38;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 4322, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4323, 11} true;
  $p52 := $p45;
  goto $bb39;
$bb36:
  $p52 := $p37;
  goto $bb39;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 4321, 11} true;
  assume $b51;
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 4321, 11} true;
  assume !($b51);
  goto $bb36;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 4326, 9} true;
  $p43 := $p52;
  goto $bb27;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 4295, 23} true;
  $p53 := $p45;
  assume {:sourceloc "parport_true.i.cil.c", 4295, 23} true;
  call $p54 := PptCheckIfStl1284_3(DeviceExtension, $p53, $p44);
  assume {:sourceloc "parport_true.i.cil.c", 4295, 23} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4297, 13} true;
  $p55 := $p54;
  assume {:sourceloc "parport_true.i.cil.c", 4297, 13} true;
  $b56 := (1 == $p55);
  assume {:sourceloc "parport_true.i.cil.c", 4297, 13} true;
  goto $bb43, $bb44;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 4298, 15} true;
  $p63 := $p46;
  goto $bb56;
$bb42:
  goto $bb45;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 4297, 13} true;
  assume $b56;
  goto $bb41;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 4297, 13} true;
  assume !($b56);
  goto $bb42;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 4302, 13} true;
  $p57 := $p44;
  assume {:sourceloc "parport_true.i.cil.c", 4302, 13} true;
  $b58 := (1 == $p57);
  assume {:sourceloc "parport_true.i.cil.c", 4302, 13} true;
  goto $bb48, $bb49;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 4304, 25} true;
  $p59 := $p45;
  assume {:sourceloc "parport_true.i.cil.c", 4304, 25} true;
  call $p60 := PptCheckIfStlProductId(DeviceExtension, $p59);
  assume {:sourceloc "parport_true.i.cil.c", 4304, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4306, 15} true;
  $p61 := $p60;
  assume {:sourceloc "parport_true.i.cil.c", 4306, 15} true;
  $b62 := (1 == $p61);
  assume {:sourceloc "parport_true.i.cil.c", 4306, 15} true;
  goto $bb53, $bb54;
$bb47:
  goto $bb50;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 4302, 13} true;
  assume $b58;
  goto $bb46;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 4302, 13} true;
  assume !($b58);
  goto $bb47;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 4315, 13} true;
  goto $bb34;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 4307, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4308, 17} true;
  $p63 := 1;
  goto $bb56;
$bb52:
  goto $bb55;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 4306, 15} true;
  assume $b62;
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 4306, 15} true;
  assume !($b62);
  goto $bb52;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 4312, 13} true;
  goto $bb50;
$bb56:
  assume {:sourceloc "parport_true.i.cil.c", 4317, 13} true;
  $p64 := $p45;
  assume {:sourceloc "parport_true.i.cil.c", 4317, 13} true;
  $p65 := $add($p64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4317, 13} true;
  $p66 := $trunc($p65, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4317, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4318, 11} true;
  $p45 := $p66;
  $p46 := $p63;
  goto $bb28;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 4251, 15} true;
  goto $bb22;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 4250, 13} true;
  goto $bb61;
$bb59:
  assume {:sourceloc "parport_true.i.cil.c", 4248, 13} true;
  assume $b67;
  goto $bb57;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 4248, 13} true;
  assume !($b67);
  goto $bb58;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 4253, 11} true;
  goto $bb62;
$bb62:
  assume {:sourceloc "parport_true.i.cil.c", 4257, 11} true;
  call WRITE_PORT_UCHAR($p3, $p37);
  assume {:sourceloc "parport_true.i.cil.c", 4258, 11} true;
  $p68 := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 4258, 11} true;
  $p69 := $add($p68, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4258, 11} true;
  $p70 := $trunc($p69, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4258, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4259, 11} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4260, 17} true;
  call $p71 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4260, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4262, 11} true;
  $p72 := $p71;
  assume {:sourceloc "parport_true.i.cil.c", 4262, 11} true;
  $p73 := $and($p72, 128);
  assume {:sourceloc "parport_true.i.cil.c", 4262, 11} true;
  $b74 := ($p73 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 4262, 11} true;
  goto $bb65, $bb66;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 4263, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4264, 11} true;
  $p75 := 1;
  goto $bb67;
$bb64:
  $p75 := $p38;
  goto $bb67;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 4262, 11} true;
  assume $b74;
  goto $bb63;
$bb66:
  assume {:sourceloc "parport_true.i.cil.c", 4262, 11} true;
  assume !($b74);
  goto $bb64;
$bb67:
  assume {:sourceloc "parport_true.i.cil.c", 4268, 11} true;
  $p76 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4268, 11} true;
  $p77 := $and($p76, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4268, 11} true;
  $p78 := $trunc($p77, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4268, 11} true;
  call WRITE_PORT_UCHAR($p5, $p78);
  assume {:sourceloc "parport_true.i.cil.c", 4269, 11} true;
  $p79 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4269, 11} true;
  $p80 := $or($p79, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4269, 11} true;
  $p81 := $trunc($p80, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4269, 11} true;
  call WRITE_PORT_UCHAR($p5, $p81);
  assume {:sourceloc "parport_true.i.cil.c", 4270, 11} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4271, 11} true;
  $p82 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4271, 11} true;
  $p83 := $and($p82, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4271, 11} true;
  $p84 := $trunc($p83, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4271, 11} true;
  call WRITE_PORT_UCHAR($p5, $p84);
  assume {:sourceloc "parport_true.i.cil.c", 4272, 11} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4274, 9} true;
  $p37 := $p70;
  $p38 := $p75;
  goto $bb16;
}
procedure PptAcquireRemoveLock(RemoveLock: int, Tag: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2409, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2409, 66} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2414, 12} true;
  call $p := IoAcquireRemoveLockEx(RemoveLock, Tag, $pa($pa(.str131, 0, 8), 0, 1), 69, 24);
  assume {:sourceloc "parport_true.i.cil.c", 2414, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2416, 3} true;
  $r := $p;
  return;
}
procedure PptAcquireRemoveLockOrFailIrp(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8417, 55} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8417, 75} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8425, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8425, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8425, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8425, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8426, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8426, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8427, 9} true;
  $p4 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 8427, 9} true;
  call $p5 := IoAcquireRemoveLockEx($p3, $p4, $pa($pa(.str132, 0, 7), 0, 1), 33, 24);
  assume {:sourceloc "parport_true.i.cil.c", 8427, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8428, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8430, 3} true;
  $b := $sge($p5, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8430, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8432, 5} true;
  call $p6 := PptFailRequest(Irp, $p5);
  assume {:sourceloc "parport_true.i.cil.c", 8434, 3} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8430, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8430, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8437, 3} true;
  $r := $p5;
  return;
}
procedure PptAddPptRemovalRelation(Extension: int, PptRemovalRelations: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b23: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2848, 53} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2848, 92} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2857, 9} true;
  call $p := ExAllocatePoolWithTag(1, 24, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 2857, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2858, 3} true;
  $p1 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 2858, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2862, 3} true;
  $b := ($p1 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2862, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 2865, 5} true;
  $p2 := -1073741670;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2862, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2862, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2901, 1} true;
  $r := $p2;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2870, 3} true;
  $p3 := $pa($pa(PptRemovalRelations, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2870, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 2870, 3} true;
  $p5 := $pa($pa($p1, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2870, 3} true;
  $M.0[$p5] := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 2871, 3} true;
  $p6 := $pa($pa(PptRemovalRelations, 0, 12), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2871, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 2871, 3} true;
  $p8 := $pa($pa($p1, 0, 24), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2871, 3} true;
  $M.0[$p8] := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 2872, 3} true;
  $p9 := $pa($pa($p1, 0, 24), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2872, 3} true;
  $p10 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 2872, 3} true;
  call $memset.0($p10, 0, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 2873, 13} true;
  $p11 := $pa($pa(PptRemovalRelations, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2873, 13} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 2873, 13} true;
  $p13 := $pa($pa($p12, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2873, 13} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 2873, 13} true;
  $p15 := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 2873, 13} true;
  call $p16 := ExAllocatePoolWithTag(1, $p15, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 2873, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2875, 3} true;
  $p17 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 2875, 3} true;
  $p18 := $pa($pa($p1, 0, 24), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2875, 3} true;
  $p19 := $pa($pa($p18, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2875, 3} true;
  $M.0[$p19] := $p17;
  assume {:sourceloc "parport_true.i.cil.c", 2877, 3} true;
  $p20 := $pa($pa($p1, 0, 24), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2877, 3} true;
  $p21 := $pa($pa($p20, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2877, 3} true;
  $p22 := $M.0[$p21];
  assume {:sourceloc "parport_true.i.cil.c", 2877, 3} true;
  $b23 := ($p22 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2877, 3} true;
  goto $bb9, $bb10;
$bb7:
  goto $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 2883, 5} true;
  $p2 := -1073741670;
  goto $bb5;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 2877, 3} true;
  assume $b23;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 2877, 3} true;
  assume !($b23);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 2888, 3} true;
  $p24 := $pa($pa(PptRemovalRelations, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2888, 3} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 2888, 3} true;
  $p26 := $pa($pa($p25, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2888, 3} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 2888, 3} true;
  $p28 := $pa($pa($p1, 0, 24), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2888, 3} true;
  $p29 := $pa($pa($p28, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2888, 3} true;
  $M.0[$p29] := $p27;
  assume {:sourceloc "parport_true.i.cil.c", 2891, 3} true;
  $p30 := $pa($pa(Extension, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2891, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2892, 3} true;
  $p31 := $pa($pa($p30, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2892, 3} true;
  $p32 := $M.0[$p31];
  assume {:sourceloc "parport_true.i.cil.c", 2892, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2893, 3} true;
  $p33 := $pa($pa($p1, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2893, 3} true;
  $p34 := $pa($pa($p33, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2893, 3} true;
  $M.0[$p34] := $p30;
  assume {:sourceloc "parport_true.i.cil.c", 2894, 3} true;
  $p35 := $pa($pa($p1, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2894, 3} true;
  $p36 := $pa($pa($p35, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2894, 3} true;
  $M.0[$p36] := $p32;
  assume {:sourceloc "parport_true.i.cil.c", 2895, 3} true;
  $p37 := $pa($pa($p1, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2895, 3} true;
  $p38 := $pa($pa($p32, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2895, 3} true;
  $M.0[$p38] := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 2896, 3} true;
  $p39 := $pa($pa($p1, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2896, 3} true;
  $p40 := $pa($pa($p30, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2896, 3} true;
  $M.0[$p40] := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 2899, 3} true;
  $p2 := 0;
  goto $bb5;
}
procedure PptBuildDeviceObject(DriverObject: int, PhysicalDeviceObject: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b15: bool;
  var $b17: bool;
  var $b19: bool;
  var $b23: bool;
  var $b27: bool;
  var $b36: bool;
  var $b38: bool;
  var $b9: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p16: int;
  var $p18: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p37: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(4, 1));
  call $p2 := $alloca($mul(4, 1));
  assume {:sourceloc "parport_true.i.cil.c", 9201, 52} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9201, 82} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9202, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9203, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9206, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9209, 3} true;
  $p3 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9209, 3} true;
  $M.0[$p3] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9210, 3} true;
  $p4 := $pa($pa($p, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9210, 3} true;
  $M.0[$p4] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9211, 3} true;
  $p5 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9211, 3} true;
  $M.0[$p5] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9212, 3} true;
  $M.0[$p1] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9213, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9214, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9215, 3} true;
  $M.16[$p2] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9219, 14} true;
  call $p6 := PptGetPortNameFromPhysicalDeviceObject(PhysicalDeviceObject);
  assume {:sourceloc "parport_true.i.cil.c", 9219, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9221, 3} true;
  $p7 := $p2i($p6);
  assume {:sourceloc "parport_true.i.cil.c", 9221, 3} true;
  $b := (0 == $p7);
  assume {:sourceloc "parport_true.i.cil.c", 9221, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9224, 5} true;
  goto $bb10;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9221, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9221, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9231, 12} true;
  call $p8 := PptGetPortNumberFromLptName($p6, $p1);
  assume {:sourceloc "parport_true.i.cil.c", 9231, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9233, 3} true;
  $b9 := $sge($p8, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9233, 3} true;
  goto $bb8, $bb9;
$bb6:
  goto $bb11;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9239, 5} true;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 9233, 3} true;
  assume $b9;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 9233, 3} true;
  assume !($b9);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 9342, 3} true;
  $p10 := $M.16[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 9342, 3} true;
  $r := $p10;
  return;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 9243, 3} true;
  $p11 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 9243, 3} true;
  $p12 := $sub($p11, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9243, 3} true;
  $M.0[$p1] := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 9247, 12} true;
  $p13 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 9247, 12} true;
  call $p14 := PptBuildParallelPortDeviceName($p13, $p);
  assume {:sourceloc "parport_true.i.cil.c", 9247, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9249, 3} true;
  $b15 := $sge($p14, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9249, 3} true;
  goto $bb14, $bb15;
$bb12:
  goto $bb16;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 9255, 5} true;
  goto $bb10;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 9249, 3} true;
  assume $b15;
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 9249, 3} true;
  assume !($b15);
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 9262, 12} true;
  call $p16 := IoCreateDevice(DriverObject, 448, $p, 22, 256, 0, $p2);
  assume {:sourceloc "parport_true.i.cil.c", 9262, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9265, 3} true;
  $b17 := (-1073741771 == $p16);
  assume {:sourceloc "parport_true.i.cil.c", 9265, 3} true;
  goto $bb19, $bb20;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 9268, 5} true;
  $M.0[$p1] := 7;
  assume {:sourceloc "parport_true.i.cil.c", 9270, 5} true;
  goto $bb37;
$bb18:
  $p18 := $p16;
  goto $bb21;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 9265, 3} true;
  assume $b17;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 9265, 3} true;
  assume !($b17);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 9304, 3} true;
  $b19 := $sge($p18, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9304, 3} true;
  goto $bb24, $bb25;
$bb22:
  goto $bb26;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 9308, 5} true;
  $M.16[$p2] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9311, 5} true;
  goto $bb10;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 9304, 3} true;
  assume $b19;
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 9304, 3} true;
  assume !($b19);
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 9316, 12} true;
  $p20 := $M.16[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 9316, 12} true;
  $p21 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 9316, 12} true;
  call $p22 := PptInitializeDeviceExtension(DriverObject, PhysicalDeviceObject, $p20, $p, $p6, $p21);
  assume {:sourceloc "parport_true.i.cil.c", 9316, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9319, 3} true;
  $b23 := $sge($p22, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9319, 3} true;
  goto $bb29, $bb30;
$bb27:
  goto $bb31;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 9324, 5} true;
  $M.16[$p2] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9327, 5} true;
  goto $bb10;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 9319, 3} true;
  assume $b23;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 9319, 3} true;
  assume !($b23);
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 9331, 3} true;
  $p24 := $pa($pa(PhysicalDeviceObject, 0, 184), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9331, 3} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 9331, 3} true;
  $p26 := $and($p25, 8192);
  assume {:sourceloc "parport_true.i.cil.c", 9331, 3} true;
  $b27 := ($p26 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 9331, 3} true;
  goto $bb34, $bb35;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 9332, 5} true;
  $p28 := $M.16[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 9332, 5} true;
  $p29 := $pa($pa($p28, 0, 184), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9332, 5} true;
  $p30 := $M.0[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 9332, 5} true;
  $p31 := $or($p30, 8192);
  assume {:sourceloc "parport_true.i.cil.c", 9332, 5} true;
  $M.0[$p29] := $p31;
  assume {:sourceloc "parport_true.i.cil.c", 9333, 3} true;
  goto $bb36;
$bb33:
  goto $bb36;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 9331, 3} true;
  assume $b27;
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 9331, 3} true;
  assume !($b27);
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 9337, 3} true;
  goto $bb10;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 9270, 15} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 9274, 7} true;
  $p32 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 9274, 7} true;
  $p33 := $add($p32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9274, 7} true;
  $M.0[$p1] := $p33;
  assume {:sourceloc "parport_true.i.cil.c", 9275, 16} true;
  $p34 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 9275, 16} true;
  call $p35 := PptBuildParallelPortDeviceName($p34, $p);
  assume {:sourceloc "parport_true.i.cil.c", 9275, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9277, 7} true;
  $b36 := $sge($p35, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9277, 7} true;
  goto $bb41, $bb42;
$bb39:
  goto $bb43;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 9283, 9} true;
  goto $bb10;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 9277, 7} true;
  assume $b36;
  goto $bb39;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 9277, 7} true;
  assume !($b36);
  goto $bb40;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 9290, 16} true;
  call $p37 := IoCreateDevice(DriverObject, 448, $p, 22, 256, 0, $p2);
  assume {:sourceloc "parport_true.i.cil.c", 9290, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9293, 7} true;
  $b38 := (-1073741771 == $p37);
  assume {:sourceloc "parport_true.i.cil.c", 9293, 7} true;
  goto $bb46, $bb47;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 9295, 7} true;
  goto $bb49;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 9296, 9} true;
  goto $bb48;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 9293, 7} true;
  assume $b38;
  goto $bb44;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 9293, 7} true;
  assume !($b38);
  goto $bb45;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 9301, 3} true;
  $p18 := $p37;
  goto $bb21;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 9298, 5} true;
  goto $bb37;
}
procedure PptBuildParallelPortDeviceName(Number: int, DeviceName: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b33: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(8, 1));
  call $p2 := $alloca($mul(8, 1));
  call $p3 := $alloca($mul(20, 1));
  assume {:sourceloc "parport_true.i.cil.c", 9052, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9052, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9053, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9054, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9055, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9056, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9065, 3} true;
  $p4 := $pa($pa($p2, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9065, 3} true;
  $M.0[$p4] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9066, 3} true;
  $p5 := $pa($pa($p2, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9066, 3} true;
  $M.0[$p5] := 20;
  assume {:sourceloc "parport_true.i.cil.c", 9067, 3} true;
  $p6 := $pa($pa($p3, 0, 20), 0, 2);
  assume {:sourceloc "parport_true.i.cil.c", 9067, 3} true;
  $p7 := $pa($pa($p2, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9067, 3} true;
  $M.0[$p7] := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 9068, 12} true;
  call $p8 := RtlIntegerToUnicodeString(Number, 10, $p2);
  assume {:sourceloc "parport_true.i.cil.c", 9068, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9070, 3} true;
  $b := $sge($p8, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9070, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 9073, 5} true;
  $p9 := $p8;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9070, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9070, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9097, 1} true;
  $r := $p9;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p10 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p11 := $M.0[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p12 := $p11;
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p13 := $pa($pa($p1, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p15 := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p16 := $add($p12, $p15);
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p17 := $pa($pa($p2, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p19 := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p20 := $add($p16, $p19);
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p21 := $add($p20, 2);
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p22 := $trunc($p21, 16);
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $p23 := $pa($pa(DeviceName, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9078, 3} true;
  $M.0[$p23] := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 9079, 9} true;
  $p24 := $pa($pa(DeviceName, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9079, 9} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 9079, 9} true;
  $p26 := $p25;
  assume {:sourceloc "parport_true.i.cil.c", 9079, 9} true;
  call $p27 := ExAllocatePoolWithTag(1, $p26, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 9079, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9080, 3} true;
  $p28 := $p27;
  assume {:sourceloc "parport_true.i.cil.c", 9080, 3} true;
  $p29 := $pa($pa(DeviceName, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9080, 3} true;
  $M.0[$p29] := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 9082, 3} true;
  $p30 := $pa($pa(DeviceName, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9082, 3} true;
  $p31 := $M.0[$p30];
  assume {:sourceloc "parport_true.i.cil.c", 9082, 3} true;
  $p32 := $p2i($p31);
  assume {:sourceloc "parport_true.i.cil.c", 9082, 3} true;
  $b33 := (0 == $p32);
  assume {:sourceloc "parport_true.i.cil.c", 9082, 3} true;
  goto $bb9, $bb10;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9085, 5} true;
  $p9 := -1073741670;
  goto $bb5;
$bb8:
  goto $bb11;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 9082, 3} true;
  assume $b33;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 9082, 3} true;
  assume !($b33);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 9090, 3} true;
  $p34 := $pa($pa(DeviceName, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9090, 3} true;
  $p35 := $M.0[$p34];
  assume {:sourceloc "parport_true.i.cil.c", 9090, 3} true;
  $p36 := $p35;
  assume {:sourceloc "parport_true.i.cil.c", 9090, 3} true;
  $p37 := $pa($pa(DeviceName, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9090, 3} true;
  $p38 := $M.0[$p37];
  assume {:sourceloc "parport_true.i.cil.c", 9090, 3} true;
  $p39 := $p38;
  assume {:sourceloc "parport_true.i.cil.c", 9090, 3} true;
  call $memset.0($p36, 0, $p39, 2, false);
  assume {:sourceloc "parport_true.i.cil.c", 9091, 3} true;
  call $p40 := RtlAppendUnicodeStringToString(DeviceName, $p);
  assume {:sourceloc "parport_true.i.cil.c", 9092, 3} true;
  call $p41 := RtlAppendUnicodeStringToString(DeviceName, $p1);
  assume {:sourceloc "parport_true.i.cil.c", 9093, 3} true;
  call $p42 := RtlAppendUnicodeStringToString(DeviceName, $p2);
  assume {:sourceloc "parport_true.i.cil.c", 9095, 3} true;
  $p9 := 0;
  goto $bb5;
}
procedure PptBuildResourceList(Extension: int, Partial: int, Addresses: int, Resources: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5957, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5957, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5957, 84} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5958, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5962, 3} true;
  $p := $pa($pa(Resources, 0, 36), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5962, 3} true;
  $M.0[$p] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 5963, 3} true;
  $p1 := $pa($pa(Extension, 0, 448), 168, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5963, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 5963, 3} true;
  $p3 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5963, 3} true;
  $p4 := $pa($pa($p3, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5963, 3} true;
  $p5 := $pa($pa($p4, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5963, 3} true;
  $M.0[$p5] := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 5964, 3} true;
  $p6 := $pa($pa(Extension, 0, 448), 172, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5964, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 5964, 3} true;
  $p8 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5964, 3} true;
  $p9 := $pa($pa($p8, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5964, 3} true;
  $p10 := $pa($pa($p9, 0, 32), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5964, 3} true;
  $M.0[$p10] := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 5965, 3} true;
  $p11 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5965, 3} true;
  $p12 := $pa($pa($p11, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5965, 3} true;
  $p13 := $pa($pa($p12, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5965, 3} true;
  $p14 := $pa($pa($p13, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5965, 3} true;
  $M.0[$p14] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5966, 3} true;
  $p15 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5966, 3} true;
  $p16 := $pa($pa($p15, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5966, 3} true;
  $p17 := $pa($pa($p16, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5966, 3} true;
  $p18 := $pa($pa($p17, 0, 24), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5966, 3} true;
  $M.0[$p18] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5967, 3} true;
  $p19 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5967, 3} true;
  $p20 := $pa($pa($p19, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5967, 3} true;
  $p21 := $pa($pa($p20, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5967, 3} true;
  $p22 := $pa($pa($p21, 0, 24), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5967, 3} true;
  $M.0[$p22] := Partial;
  assume {:sourceloc "parport_true.i.cil.c", 5968, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5970, 3} true;
  $p23 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5970, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 5972, 5} true;
  $p24 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 5972, 5} true;
  $b := $ult($p24, Partial);
  assume {:sourceloc "parport_true.i.cil.c", 5972, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5974, 5} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5975, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5972, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5972, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 5986, 3} true;
  $r := 0;
  return;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 5977, 5} true;
  $p25 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 5977, 5} true;
  $p26 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5977, 5} true;
  $p27 := $pa($pa($p26, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5977, 5} true;
  $p28 := $pa($pa($p27, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5977, 5} true;
  $p29 := $pa($pa($p28, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5977, 5} true;
  $p30 := $pa($pa($p29, 0, 16), $p25, 16);
  assume {:sourceloc "parport_true.i.cil.c", 5977, 5} true;
  $p31 := $pa($pa($p30, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5977, 5} true;
  $M.0[$p31] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 5978, 5} true;
  $p32 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 5978, 5} true;
  $p33 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5978, 5} true;
  $p34 := $pa($pa($p33, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5978, 5} true;
  $p35 := $pa($pa($p34, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5978, 5} true;
  $p36 := $pa($pa($p35, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5978, 5} true;
  $p37 := $pa($pa($p36, 0, 16), $p32, 16);
  assume {:sourceloc "parport_true.i.cil.c", 5978, 5} true;
  $p38 := $pa($pa($p37, 0, 16), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5978, 5} true;
  $M.0[$p38] := 2;
  assume {:sourceloc "parport_true.i.cil.c", 5979, 5} true;
  $p39 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 5979, 5} true;
  $p40 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5979, 5} true;
  $p41 := $pa($pa($p40, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5979, 5} true;
  $p42 := $pa($pa($p41, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5979, 5} true;
  $p43 := $pa($pa($p42, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5979, 5} true;
  $p44 := $pa($pa($p43, 0, 16), $p39, 16);
  assume {:sourceloc "parport_true.i.cil.c", 5979, 5} true;
  $p45 := $pa($pa($p44, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5979, 5} true;
  $M.0[$p45] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p46 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p47 := $pa(Addresses, $p46, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p48 := $M.0[$p47];
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p49 := $p48;
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p50 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p51 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p52 := $pa($pa($p51, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p53 := $pa($pa($p52, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p54 := $pa($pa($p53, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p55 := $pa($pa($p54, 0, 16), $p50, 16);
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p56 := $pa($pa($p55, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p57 := $p56;
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p58 := $pa($pa($p57, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $p59 := $p58;
  assume {:sourceloc "parport_true.i.cil.c", 5980, 5} true;
  $M.0[$p59] := $p49;
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p60 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p61 := $pa($pa(Resources, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p62 := $pa($pa($p61, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p63 := $pa($pa($p62, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p64 := $pa($pa($p63, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p65 := $pa($pa($p64, 0, 16), $p60, 16);
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p66 := $pa($pa($p65, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p67 := $p66;
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $p68 := $pa($pa($p67, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5981, 5} true;
  $M.0[$p68] := 2;
  assume {:sourceloc "parport_true.i.cil.c", 5982, 5} true;
  $p69 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 5982, 5} true;
  $p70 := $add($p69, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5982, 5} true;
  $p71 := $trunc($p70, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5982, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5983, 3} true;
  $p23 := $p71;
  goto $bb1;
}
procedure PptCancelRoutine(DeviceObject: int, Irp: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8730, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8730, 58} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8732, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8739, 3} true;
  $p1 := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8739, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8739, 3} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 8739, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8740, 3} true;
  $p4 := $pa($pa($p3, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8740, 3} true;
  $p5 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8740, 3} true;
  $M.0[$p5] := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 8741, 3} true;
  $p6 := $pa($pa($p3, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8741, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 8741, 3} true;
  $b := ($p7 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8741, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8743, 5} true;
  $p31 := $pa($pa($p3, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8743, 5} true;
  $p32 := $M.0[$p31];
  assume {:sourceloc "parport_true.i.cil.c", 8743, 5} true;
  $p33 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 8743, 5} true;
  call $p34 := KeSynchronizeExecution($p32, PptSynchronizedDecrement, $p33);
  assume {:sourceloc "parport_true.i.cil.c", 8746, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8748, 5} true;
  $p8 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 8748, 5} true;
  call $p9 := PptSynchronizedDecrement($p8);
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8741, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8741, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8752, 3} true;
  $p10 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8752, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 8752, 3} true;
  $p12 := $pa($pa($p11, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8752, 3} true;
  $p13 := $pa($pa($p12, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8752, 3} true;
  $p14 := $pa($pa($p13, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8752, 3} true;
  $p15 := $M.0[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 8752, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8753, 3} true;
  $p16 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8753, 3} true;
  $p17 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 8753, 3} true;
  $p18 := $pa($pa($p17, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8753, 3} true;
  $p19 := $pa($pa($p18, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8753, 3} true;
  $p20 := $pa($pa($p19, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8753, 3} true;
  $p21 := $M.0[$p20];
  assume {:sourceloc "parport_true.i.cil.c", 8753, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8754, 3} true;
  $p22 := $pa($pa($p21, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8754, 3} true;
  $M.0[$p22] := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 8755, 3} true;
  $p23 := $pa($pa($p15, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8755, 3} true;
  $M.0[$p23] := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 8757, 3} true;
  $p24 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8757, 3} true;
  $p25 := $pa($pa($p24, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8757, 3} true;
  $M.0[$p25] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 8758, 3} true;
  $p26 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8758, 3} true;
  $p27 := $pa($pa($p26, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8758, 3} true;
  $p28 := $p27;
  assume {:sourceloc "parport_true.i.cil.c", 8758, 3} true;
  $M.0[$p28] := -1073741536;
  assume {:sourceloc "parport_true.i.cil.c", 8759, 3} true;
  $M.24[myStatus] := -1073741536;
  assume {:sourceloc "parport_true.i.cil.c", 8760, 3} true;
  $p29 := $pa($pa($p3, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8760, 3} true;
  $p30 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 8760, 3} true;
  call PptReleaseRemoveLock($p29, $p30);
  assume {:sourceloc "parport_true.i.cil.c", 8761, 3} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8765, 1} true;
  return;
}
procedure PptCheckByteMode(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b15: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5637, 45} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5645, 3} true;
  $p := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5645, 3} true;
  $p1 := $pa($pa($p, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5645, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 5645, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5646, 9} true;
  $p3 := $pa($p2, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5646, 9} true;
  call $p4 := READ_PORT_UCHAR($p3);
  assume {:sourceloc "parport_true.i.cil.c", 5646, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5647, 3} true;
  $p5 := $pa($p2, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5647, 3} true;
  $p6 := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 5647, 3} true;
  $p7 := $or($p6, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5647, 3} true;
  $p8 := $trunc($p7, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5647, 3} true;
  call WRITE_PORT_UCHAR($p5, $p8);
  assume {:sourceloc "parport_true.i.cil.c", 5648, 3} true;
  call WRITE_PORT_UCHAR($p2, 85);
  assume {:sourceloc "parport_true.i.cil.c", 5649, 13} true;
  call $p9 := READ_PORT_UCHAR($p2);
  assume {:sourceloc "parport_true.i.cil.c", 5649, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5651, 3} true;
  $p10 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 5651, 3} true;
  $b := ($p10 == 85);
  assume {:sourceloc "parport_true.i.cil.c", 5651, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5653, 5} true;
  call WRITE_PORT_UCHAR($p2, 170);
  assume {:sourceloc "parport_true.i.cil.c", 5654, 11} true;
  call $p13 := READ_PORT_UCHAR($p2);
  assume {:sourceloc "parport_true.i.cil.c", 5654, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5656, 5} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 5656, 5} true;
  $b15 := ($p14 == 170);
  assume {:sourceloc "parport_true.i.cil.c", 5656, 5} true;
  goto $bb9, $bb10;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5651, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5651, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5665, 3} true;
  $p11 := $pa($p2, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5665, 3} true;
  call WRITE_PORT_UCHAR($p11, $p4);
  assume {:sourceloc "parport_true.i.cil.c", 5667, 3} true;
  $p12 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5669, 1} true;
  $r := $p12;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 5657, 7} true;
  $p12 := -1073741823;
  goto $bb6;
$bb8:
  goto $bb11;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5656, 5} true;
  assume $b15;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5656, 5} true;
  assume !($b15);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 5661, 3} true;
  goto $bb5;
}
procedure PptCheckIfNon1284_3Present(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b31: bool;
  var $b36: bool;
  var $b45: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p46: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 4344, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4346, 13} true;
  call $p := __VERIFIER_nondet_char();
  assume {:sourceloc "parport_true.i.cil.c", 4346, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4358, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4359, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4360, 3} true;
  $p1 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4360, 3} true;
  $p2 := $pa($pa($p1, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4360, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 4360, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4361, 3} true;
  $p4 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4361, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4362, 3} true;
  $p5 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4362, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4363, 11} true;
  call $p6 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 4363, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4364, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 4364, 3} true;
  $p8 := $and($p7, -9);
  assume {:sourceloc "parport_true.i.cil.c", 4364, 3} true;
  $p9 := $or($p8, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4364, 3} true;
  $p10 := $trunc($p9, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4364, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4365, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 4365, 3} true;
  $p12 := $and($p11, -33);
  assume {:sourceloc "parport_true.i.cil.c", 4365, 3} true;
  $p13 := $trunc($p12, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4365, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4366, 3} true;
  call WRITE_PORT_UCHAR($p5, $p13);
  assume {:sourceloc "parport_true.i.cil.c", 4367, 3} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4367, 3} true;
  $p15 := $and($p14, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4367, 3} true;
  $p16 := $trunc($p15, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4367, 3} true;
  call WRITE_PORT_UCHAR($p5, $p16);
  assume {:sourceloc "parport_true.i.cil.c", 4368, 3} true;
  $p17 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4368, 3} true;
  $p18 := $pa($pa(ModeQualifier___6, 0, 7), $p17, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4368, 3} true;
  $p19 := $M.29[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 4368, 3} true;
  call WRITE_PORT_UCHAR($p3, $p19);
  assume {:sourceloc "parport_true.i.cil.c", 4369, 3} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4370, 12} true;
  call $p20 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4370, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4372, 3} true;
  $p21 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 4372, 3} true;
  $p22 := $and($p21, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4372, 3} true;
  $b := ($p22 == 184);
  assume {:sourceloc "parport_true.i.cil.c", 4372, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4374, 5} true;
  $p24 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 4374, 5} true;
  $p25 := $and($p24, 64);
  assume {:sourceloc "parport_true.i.cil.c", 4374, 5} true;
  $p26 := $trunc($p25, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4374, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4375, 5} true;
  $p27 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 4, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4375, 5} true;
  call WRITE_PORT_UCHAR($p3, $p27);
  assume {:sourceloc "parport_true.i.cil.c", 4376, 5} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4377, 14} true;
  call $p28 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4377, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4379, 5} true;
  $p29 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 4379, 5} true;
  $p30 := $and($p29, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4379, 5} true;
  $b31 := ($p30 == 24);
  assume {:sourceloc "parport_true.i.cil.c", 4379, 5} true;
  goto $bb8, $bb9;
$bb2:
  $p23 := 0;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4372, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4372, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 4405, 3} true;
  call WRITE_PORT_UCHAR($p5, $p6);
  assume {:sourceloc "parport_true.i.cil.c", 4407, 3} true;
  $r := $p23;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 4380, 7} true;
  $p33 := $p26;
  assume {:sourceloc "parport_true.i.cil.c", 4380, 7} true;
  $p34 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 4380, 7} true;
  $p35 := $and($p34, 64);
  assume {:sourceloc "parport_true.i.cil.c", 4380, 7} true;
  $b36 := ($p33 != $p35);
  assume {:sourceloc "parport_true.i.cil.c", 4380, 7} true;
  goto $bb13, $bb14;
$bb7:
  $p32 := 0;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 4379, 5} true;
  assume $b31;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 4379, 5} true;
  assume !($b31);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 4401, 3} true;
  $p23 := $p32;
  goto $bb5;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 4382, 9} true;
  $p39 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 4382, 9} true;
  $p40 := $and($p39, 64);
  assume {:sourceloc "parport_true.i.cil.c", 4383, 9} true;
  $p41 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 5, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4383, 9} true;
  call WRITE_PORT_UCHAR($p3, $p41);
  assume {:sourceloc "parport_true.i.cil.c", 4384, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4385, 18} true;
  call $p42 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4385, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4387, 9} true;
  $p43 := $p42;
  assume {:sourceloc "parport_true.i.cil.c", 4387, 9} true;
  $p44 := $and($p43, 48);
  assume {:sourceloc "parport_true.i.cil.c", 4387, 9} true;
  $b45 := ($p44 == 48);
  assume {:sourceloc "parport_true.i.cil.c", 4387, 9} true;
  goto $bb18, $bb19;
$bb12:
  $p37 := 0;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4380, 7} true;
  assume $b36;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 4380, 7} true;
  assume !($b36);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4396, 7} true;
  $p38 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 6, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4396, 7} true;
  call WRITE_PORT_UCHAR($p3, $p38);
  assume {:sourceloc "parport_true.i.cil.c", 4398, 5} true;
  $p32 := $p37;
  goto $bb10;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 4388, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4389, 9} true;
  $p46 := 1;
  goto $bb20;
$bb17:
  $p46 := 0;
  goto $bb20;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 4387, 9} true;
  assume $b45;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 4387, 9} true;
  assume !($b45);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 4392, 7} true;
  $p37 := $p46;
  goto $bb15;
}
procedure PptCheckIfStl1284_3(DeviceExtension: int, ulDaisyIndex: int, bNoStrobe: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b28: bool;
  var $b34: bool;
  var $b38: bool;
  var $b40: bool;
  var $b59: bool;
  var $b64: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p39: int;
  var $p4: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 4410, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4410, 71} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4411, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4413, 13} true;
  call $p := __VERIFIER_nondet_char();
  assume {:sourceloc "parport_true.i.cil.c", 4413, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4427, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4428, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4429, 3} true;
  $p1 := $pa($pa(DeviceExtension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4429, 3} true;
  $p2 := $pa($pa($p1, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4429, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 4429, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4430, 3} true;
  $p4 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4430, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4431, 3} true;
  $p5 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4431, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4432, 11} true;
  call $p6 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 4432, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4433, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 4433, 3} true;
  $p8 := $and($p7, -9);
  assume {:sourceloc "parport_true.i.cil.c", 4433, 3} true;
  $p9 := $or($p8, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4433, 3} true;
  $p10 := $trunc($p9, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4433, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4434, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 4434, 3} true;
  $p12 := $and($p11, -33);
  assume {:sourceloc "parport_true.i.cil.c", 4434, 3} true;
  $p13 := $trunc($p12, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4434, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4435, 3} true;
  call WRITE_PORT_UCHAR($p5, $p13);
  assume {:sourceloc "parport_true.i.cil.c", 4436, 3} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4436, 3} true;
  $p15 := $and($p14, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4436, 3} true;
  $p16 := $trunc($p15, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4436, 3} true;
  call WRITE_PORT_UCHAR($p5, $p16);
  assume {:sourceloc "parport_true.i.cil.c", 4437, 3} true;
  $p17 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4437, 3} true;
  $p18 := $pa($pa(ModeQualifier___6, 0, 7), $p17, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4437, 3} true;
  $p19 := $M.29[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 4437, 3} true;
  call WRITE_PORT_UCHAR($p3, $p19);
  assume {:sourceloc "parport_true.i.cil.c", 4438, 3} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4439, 12} true;
  call $p20 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4439, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4441, 3} true;
  $p21 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 4441, 3} true;
  $p22 := $and($p21, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4441, 3} true;
  $b := ($p22 == 184);
  assume {:sourceloc "parport_true.i.cil.c", 4441, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4443, 5} true;
  $p24 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 4, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4443, 5} true;
  call WRITE_PORT_UCHAR($p3, $p24);
  assume {:sourceloc "parport_true.i.cil.c", 4444, 5} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4445, 14} true;
  call $p25 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4445, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4447, 5} true;
  $p26 := $p25;
  assume {:sourceloc "parport_true.i.cil.c", 4447, 5} true;
  $p27 := $and($p26, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4447, 5} true;
  $b28 := ($p27 == 24);
  assume {:sourceloc "parport_true.i.cil.c", 4447, 5} true;
  goto $bb8, $bb9;
$bb2:
  $p23 := 0;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4441, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4441, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 4517, 3} true;
  call WRITE_PORT_UCHAR($p5, $p6);
  assume {:sourceloc "parport_true.i.cil.c", 4519, 3} true;
  $r := $p23;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 4449, 7} true;
  $p30 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 5, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4449, 7} true;
  call WRITE_PORT_UCHAR($p3, $p30);
  assume {:sourceloc "parport_true.i.cil.c", 4450, 7} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4451, 16} true;
  call $p31 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4451, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4453, 7} true;
  $p32 := $p31;
  assume {:sourceloc "parport_true.i.cil.c", 4453, 7} true;
  $p33 := $and($p32, 48);
  assume {:sourceloc "parport_true.i.cil.c", 4453, 7} true;
  $b34 := ($p33 == 48);
  assume {:sourceloc "parport_true.i.cil.c", 4453, 7} true;
  goto $bb13, $bb14;
$bb7:
  $p29 := 0;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 4447, 5} true;
  assume $b28;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 4447, 5} true;
  assume !($b28);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 4513, 3} true;
  $p23 := $p29;
  goto $bb5;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 4455, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4456, 9} true;
  $p36 := $or(136, ulDaisyIndex);
  assume {:sourceloc "parport_true.i.cil.c", 4456, 9} true;
  $p37 := $trunc($p36, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4456, 9} true;
  call WRITE_PORT_UCHAR($p3, $p37);
  assume {:sourceloc "parport_true.i.cil.c", 4457, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4459, 9} true;
  $b38 := (ulDaisyIndex != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4459, 9} true;
  goto $bb18, $bb19;
$bb12:
  $p35 := 0;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4453, 7} true;
  assume $b34;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 4453, 7} true;
  assume !($b34);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4510, 5} true;
  $p29 := $p35;
  goto $bb10;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 4460, 11} true;
  $p63 := bNoStrobe;
  assume {:sourceloc "parport_true.i.cil.c", 4460, 11} true;
  $b64 := ($p63 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 4460, 11} true;
  goto $bb36, $bb37;
$bb17:
  goto $bb20;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 4459, 9} true;
  assume $b38;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 4459, 9} true;
  assume !($b38);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 4474, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4475, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4477, 9} true;
  $p39 := 240;
  goto $bb21;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 4477, 19} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 4479, 11} true;
  $b40 := ($p39 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4479, 11} true;
  goto $bb25, $bb26;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 4481, 11} true;
  goto $bb28;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 4482, 13} true;
  $p41 := 1;
  goto $bb27;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 4479, 11} true;
  assume $b40;
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 4479, 11} true;
  assume !($b40);
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 4505, 9} true;
  $p42 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 6, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4505, 9} true;
  call WRITE_PORT_UCHAR($p3, $p42);
  assume {:sourceloc "parport_true.i.cil.c", 4507, 7} true;
  $p35 := $p41;
  goto $bb15;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 4485, 11} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4486, 11} true;
  $p43 := $or(128, ulDaisyIndex);
  assume {:sourceloc "parport_true.i.cil.c", 4486, 11} true;
  $p44 := $trunc($p43, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4486, 11} true;
  call WRITE_PORT_UCHAR($p3, $p44);
  assume {:sourceloc "parport_true.i.cil.c", 4487, 11} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4488, 11} true;
  $p45 := $or(136, ulDaisyIndex);
  assume {:sourceloc "parport_true.i.cil.c", 4488, 11} true;
  $p46 := $trunc($p45, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4488, 11} true;
  call WRITE_PORT_UCHAR($p3, $p46);
  assume {:sourceloc "parport_true.i.cil.c", 4489, 11} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4490, 25} true;
  call $p47 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4490, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4491, 11} true;
  $p48 := $p47;
  assume {:sourceloc "parport_true.i.cil.c", 4491, 11} true;
  $p49 := $shl($p48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4491, 11} true;
  $p50 := $and($p49, 112);
  assume {:sourceloc "parport_true.i.cil.c", 4491, 11} true;
  $p51 := $trunc($p50, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4491, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4492, 11} true;
  $p52 := $p51;
  assume {:sourceloc "parport_true.i.cil.c", 4492, 11} true;
  $p53 := $p47;
  assume {:sourceloc "parport_true.i.cil.c", 4492, 11} true;
  $p54 := $and($p53, 128);
  assume {:sourceloc "parport_true.i.cil.c", 4492, 11} true;
  $p55 := $or($p52, $p54);
  assume {:sourceloc "parport_true.i.cil.c", 4492, 11} true;
  $p56 := $trunc($p55, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4492, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4494, 11} true;
  $p57 := $p56;
  assume {:sourceloc "parport_true.i.cil.c", 4494, 11} true;
  $p58 := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 4494, 11} true;
  $b59 := ($p57 != $p58);
  assume {:sourceloc "parport_true.i.cil.c", 4494, 11} true;
  goto $bb31, $bb32;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 4495, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4496, 13} true;
  $p41 := 0;
  goto $bb27;
$bb30:
  goto $bb33;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 4494, 11} true;
  assume $b59;
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 4494, 11} true;
  assume !($b59);
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 4500, 11} true;
  $p60 := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 4500, 11} true;
  $p61 := $sub($p60, 16);
  assume {:sourceloc "parport_true.i.cil.c", 4500, 11} true;
  $p62 := $trunc($p61, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4500, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4501, 9} true;
  $p39 := $p62;
  goto $bb21;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 4462, 13} true;
  $p65 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4462, 13} true;
  $p66 := $and($p65, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4462, 13} true;
  $p67 := $trunc($p66, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4462, 13} true;
  call WRITE_PORT_UCHAR($p5, $p67);
  assume {:sourceloc "parport_true.i.cil.c", 4463, 13} true;
  $p68 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4463, 13} true;
  $p69 := $or($p68, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4463, 13} true;
  $p70 := $trunc($p69, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4463, 13} true;
  call WRITE_PORT_UCHAR($p5, $p70);
  assume {:sourceloc "parport_true.i.cil.c", 4464, 13} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4465, 13} true;
  $p71 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4465, 13} true;
  $p72 := $and($p71, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4465, 13} true;
  $p73 := $trunc($p72, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4465, 13} true;
  call WRITE_PORT_UCHAR($p5, $p73);
  assume {:sourceloc "parport_true.i.cil.c", 4466, 13} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4468, 11} true;
  goto $bb38;
$bb35:
  goto $bb38;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 4460, 11} true;
  assume $b64;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 4460, 11} true;
  assume !($b64);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 4471, 9} true;
  goto $bb20;
}
procedure PptCheckIfStlProductId(DeviceExtension: int, ulDaisyIndex: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b104: bool;
  var $b106: bool;
  var $b28: bool;
  var $b34: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p100: int;
  var $p101: int;
  var $p102: int;
  var $p103: int;
  var $p105: int;
  var $p107: int;
  var $p108: int;
  var $p109: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p83: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p88: int;
  var $p89: int;
  var $p9: int;
  var $p90: int;
  var $p91: int;
  var $p92: int;
  var $p93: int;
  var $p94: int;
  var $p95: int;
  var $p96: int;
  var $p97: int;
  var $p98: int;
  var $p99: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 4522, 50} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4522, 74} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4524, 13} true;
  call $p := __VERIFIER_nondet_char();
  assume {:sourceloc "parport_true.i.cil.c", 4524, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4542, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4543, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4544, 3} true;
  $p1 := $pa($pa(DeviceExtension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4544, 3} true;
  $p2 := $pa($pa($p1, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4544, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 4544, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4545, 3} true;
  $p4 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4545, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4546, 3} true;
  $p5 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4546, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4547, 11} true;
  call $p6 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 4547, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4548, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 4548, 3} true;
  $p8 := $and($p7, -9);
  assume {:sourceloc "parport_true.i.cil.c", 4548, 3} true;
  $p9 := $or($p8, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4548, 3} true;
  $p10 := $trunc($p9, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4548, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4549, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 4549, 3} true;
  $p12 := $and($p11, -33);
  assume {:sourceloc "parport_true.i.cil.c", 4549, 3} true;
  $p13 := $trunc($p12, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4549, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4550, 3} true;
  call WRITE_PORT_UCHAR($p5, $p13);
  assume {:sourceloc "parport_true.i.cil.c", 4551, 3} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4551, 3} true;
  $p15 := $and($p14, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4551, 3} true;
  $p16 := $trunc($p15, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4551, 3} true;
  call WRITE_PORT_UCHAR($p5, $p16);
  assume {:sourceloc "parport_true.i.cil.c", 4552, 3} true;
  $p17 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4552, 3} true;
  $p18 := $pa($pa(ModeQualifier___6, 0, 7), $p17, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4552, 3} true;
  $p19 := $M.29[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 4552, 3} true;
  call WRITE_PORT_UCHAR($p3, $p19);
  assume {:sourceloc "parport_true.i.cil.c", 4553, 3} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4554, 12} true;
  call $p20 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4554, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4556, 3} true;
  $p21 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 4556, 3} true;
  $p22 := $and($p21, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4556, 3} true;
  $b := ($p22 == 184);
  assume {:sourceloc "parport_true.i.cil.c", 4556, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4558, 5} true;
  $p24 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 4, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4558, 5} true;
  call WRITE_PORT_UCHAR($p3, $p24);
  assume {:sourceloc "parport_true.i.cil.c", 4559, 5} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4560, 14} true;
  call $p25 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4560, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4562, 5} true;
  $p26 := $p25;
  assume {:sourceloc "parport_true.i.cil.c", 4562, 5} true;
  $p27 := $and($p26, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4562, 5} true;
  $b28 := ($p27 == 24);
  assume {:sourceloc "parport_true.i.cil.c", 4562, 5} true;
  goto $bb8, $bb9;
$bb2:
  $p23 := 0;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4556, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4556, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 4631, 3} true;
  call WRITE_PORT_UCHAR($p5, $p6);
  assume {:sourceloc "parport_true.i.cil.c", 4633, 3} true;
  $r := $p23;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 4564, 7} true;
  $p30 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 5, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4564, 7} true;
  call WRITE_PORT_UCHAR($p3, $p30);
  assume {:sourceloc "parport_true.i.cil.c", 4565, 7} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4566, 16} true;
  call $p31 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4566, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4568, 7} true;
  $p32 := $p31;
  assume {:sourceloc "parport_true.i.cil.c", 4568, 7} true;
  $p33 := $and($p32, 48);
  assume {:sourceloc "parport_true.i.cil.c", 4568, 7} true;
  $b34 := ($p33 == 48);
  assume {:sourceloc "parport_true.i.cil.c", 4568, 7} true;
  goto $bb13, $bb14;
$bb7:
  $p29 := 0;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 4562, 5} true;
  assume $b28;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 4562, 5} true;
  assume !($b28);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 4627, 3} true;
  $p23 := $p29;
  goto $bb5;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 4570, 9} true;
  $p36 := $or(16, ulDaisyIndex);
  assume {:sourceloc "parport_true.i.cil.c", 4570, 9} true;
  $p37 := $trunc($p36, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4570, 9} true;
  call WRITE_PORT_UCHAR($p3, $p37);
  assume {:sourceloc "parport_true.i.cil.c", 4571, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4572, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4573, 34} true;
  call $p38 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4573, 34} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4574, 9} true;
  $p39 := $p38;
  assume {:sourceloc "parport_true.i.cil.c", 4574, 9} true;
  $p40 := $and($p39, 240);
  assume {:sourceloc "parport_true.i.cil.c", 4574, 9} true;
  $p41 := $trunc($p40, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4574, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4575, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4576, 9} true;
  $p42 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4576, 9} true;
  $p43 := $and($p42, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4576, 9} true;
  $p44 := $trunc($p43, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4576, 9} true;
  call WRITE_PORT_UCHAR($p5, $p44);
  assume {:sourceloc "parport_true.i.cil.c", 4577, 9} true;
  $p45 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4577, 9} true;
  $p46 := $or($p45, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4577, 9} true;
  $p47 := $trunc($p46, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4577, 9} true;
  call WRITE_PORT_UCHAR($p5, $p47);
  assume {:sourceloc "parport_true.i.cil.c", 4578, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4579, 9} true;
  $p48 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4579, 9} true;
  $p49 := $and($p48, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4579, 9} true;
  $p50 := $trunc($p49, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4579, 9} true;
  call WRITE_PORT_UCHAR($p5, $p50);
  assume {:sourceloc "parport_true.i.cil.c", 4580, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4581, 34} true;
  call $p51 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4581, 34} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4582, 9} true;
  $p52 := $p51;
  assume {:sourceloc "parport_true.i.cil.c", 4582, 9} true;
  $p53 := $ashr($p52, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4582, 9} true;
  $p54 := $trunc($p53, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4582, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4583, 9} true;
  $p55 := $p41;
  assume {:sourceloc "parport_true.i.cil.c", 4583, 9} true;
  $p56 := $p54;
  assume {:sourceloc "parport_true.i.cil.c", 4583, 9} true;
  $p57 := $or($p55, $p56);
  assume {:sourceloc "parport_true.i.cil.c", 4583, 9} true;
  $p58 := $trunc($p57, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4583, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4584, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4585, 9} true;
  $p59 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4585, 9} true;
  $p60 := $and($p59, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4585, 9} true;
  $p61 := $trunc($p60, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4585, 9} true;
  call WRITE_PORT_UCHAR($p5, $p61);
  assume {:sourceloc "parport_true.i.cil.c", 4586, 9} true;
  $p62 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4586, 9} true;
  $p63 := $or($p62, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4586, 9} true;
  $p64 := $trunc($p63, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4586, 9} true;
  call WRITE_PORT_UCHAR($p5, $p64);
  assume {:sourceloc "parport_true.i.cil.c", 4587, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4588, 9} true;
  $p65 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4588, 9} true;
  $p66 := $and($p65, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4588, 9} true;
  $p67 := $trunc($p66, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4588, 9} true;
  call WRITE_PORT_UCHAR($p5, $p67);
  assume {:sourceloc "parport_true.i.cil.c", 4589, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4590, 34} true;
  call $p68 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4590, 34} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4591, 9} true;
  $p69 := $p68;
  assume {:sourceloc "parport_true.i.cil.c", 4591, 9} true;
  $p70 := $and($p69, 240);
  assume {:sourceloc "parport_true.i.cil.c", 4591, 9} true;
  $p71 := $trunc($p70, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4591, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4592, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4593, 9} true;
  $p72 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4593, 9} true;
  $p73 := $and($p72, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4593, 9} true;
  $p74 := $trunc($p73, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4593, 9} true;
  call WRITE_PORT_UCHAR($p5, $p74);
  assume {:sourceloc "parport_true.i.cil.c", 4594, 9} true;
  $p75 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4594, 9} true;
  $p76 := $or($p75, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4594, 9} true;
  $p77 := $trunc($p76, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4594, 9} true;
  call WRITE_PORT_UCHAR($p5, $p77);
  assume {:sourceloc "parport_true.i.cil.c", 4595, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4596, 9} true;
  $p78 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4596, 9} true;
  $p79 := $and($p78, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4596, 9} true;
  $p80 := $trunc($p79, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4596, 9} true;
  call WRITE_PORT_UCHAR($p5, $p80);
  assume {:sourceloc "parport_true.i.cil.c", 4597, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4598, 34} true;
  call $p81 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4598, 34} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4599, 9} true;
  $p82 := $p81;
  assume {:sourceloc "parport_true.i.cil.c", 4599, 9} true;
  $p83 := $ashr($p82, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4599, 9} true;
  $p84 := $trunc($p83, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4599, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4600, 9} true;
  $p85 := $p71;
  assume {:sourceloc "parport_true.i.cil.c", 4600, 9} true;
  $p86 := $p84;
  assume {:sourceloc "parport_true.i.cil.c", 4600, 9} true;
  $p87 := $or($p85, $p86);
  assume {:sourceloc "parport_true.i.cil.c", 4600, 9} true;
  $p88 := $trunc($p87, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4600, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4601, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4602, 9} true;
  $p89 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4602, 9} true;
  $p90 := $and($p89, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4602, 9} true;
  $p91 := $trunc($p90, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4602, 9} true;
  call WRITE_PORT_UCHAR($p5, $p91);
  assume {:sourceloc "parport_true.i.cil.c", 4603, 9} true;
  $p92 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4603, 9} true;
  $p93 := $or($p92, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4603, 9} true;
  $p94 := $trunc($p93, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4603, 9} true;
  call WRITE_PORT_UCHAR($p5, $p94);
  assume {:sourceloc "parport_true.i.cil.c", 4604, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4605, 9} true;
  $p95 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4605, 9} true;
  $p96 := $and($p95, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4605, 9} true;
  $p97 := $trunc($p96, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4605, 9} true;
  call WRITE_PORT_UCHAR($p5, $p97);
  assume {:sourceloc "parport_true.i.cil.c", 4606, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4607, 9} true;
  $p98 := $p88;
  assume {:sourceloc "parport_true.i.cil.c", 4607, 9} true;
  $p99 := $shl($p98, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4607, 9} true;
  $p100 := $p58;
  assume {:sourceloc "parport_true.i.cil.c", 4607, 9} true;
  $p101 := $or($p99, $p100);
  assume {:sourceloc "parport_true.i.cil.c", 4607, 9} true;
  $p102 := $trunc($p101, 16);
  assume {:sourceloc "parport_true.i.cil.c", 4607, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4609, 9} true;
  $p103 := $p102;
  assume {:sourceloc "parport_true.i.cil.c", 4609, 9} true;
  $b104 := (43775 == $p103);
  assume {:sourceloc "parport_true.i.cil.c", 4609, 9} true;
  goto $bb18, $bb19;
$bb12:
  $p35 := 0;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4568, 7} true;
  assume $b34;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 4568, 7} true;
  assume !($b34);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4624, 5} true;
  $p29 := $p35;
  goto $bb10;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 4610, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4611, 9} true;
  $p108 := 1;
  goto $bb25;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 4612, 11} true;
  $p105 := $p102;
  assume {:sourceloc "parport_true.i.cil.c", 4612, 11} true;
  $b106 := (43263 == $p105);
  assume {:sourceloc "parport_true.i.cil.c", 4612, 11} true;
  goto $bb22, $bb23;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 4609, 9} true;
  assume $b104;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 4609, 9} true;
  assume !($b104);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 4613, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4614, 11} true;
  $p107 := 1;
  goto $bb24;
$bb21:
  $p107 := 0;
  goto $bb24;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 4612, 11} true;
  assume $b106;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 4612, 11} true;
  assume !($b106);
  goto $bb21;
$bb24:
  $p108 := $p107;
  goto $bb25;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 4619, 9} true;
  $p109 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 6, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4619, 9} true;
  call WRITE_PORT_UCHAR($p3, $p109);
  assume {:sourceloc "parport_true.i.cil.c", 4621, 7} true;
  $p35 := $p108;
  goto $bb15;
}
procedure PptCleanRemovalRelationsList(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2805, 53} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2814, 3} true;
  $p := $pa($pa(Extension, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2814, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2815, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2816, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2820, 3} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2820, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 2822, 5} true;
  $p1 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2822, 5} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 2822, 5} true;
  $p3 := $p2i($p2);
  assume {:sourceloc "parport_true.i.cil.c", 2822, 5} true;
  $p4 := $p2i($p);
  assume {:sourceloc "parport_true.i.cil.c", 2822, 5} true;
  $b := ($p3 == $p4);
  assume {:sourceloc "parport_true.i.cil.c", 2822, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2825, 7} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2824, 5} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2822, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2822, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 2827, 5} true;
  $p5 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2827, 5} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 2827, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2828, 5} true;
  $p7 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2828, 5} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 2828, 5} true;
  $p9 := $pa($pa($p8, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2828, 5} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 2828, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2829, 5} true;
  $p11 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2829, 5} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 2829, 5} true;
  $p13 := $pa($pa($p12, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2829, 5} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 2829, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2830, 5} true;
  $p15 := $pa($pa($p14, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2830, 5} true;
  $M.0[$p15] := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 2831, 5} true;
  $p16 := $pa($pa($p10, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2831, 5} true;
  $M.0[$p16] := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 2832, 5} true;
  $p17 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 2832, 5} true;
  $p18 := $pa($p17, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2839, 3} true;
  goto $bb1;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 2847, 1} true;
  return;
}
procedure PptClearByteMode(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5622, 45} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5626, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5627, 3} true;
  $p := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5627, 3} true;
  $p1 := $pa($pa($p, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5627, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 5627, 3} true;
  $p3 := $and($p2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5627, 3} true;
  $b := ($p3 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5627, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5629, 14} true;
  call $p5 := PptEcrClearMode(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5629, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5631, 3} true;
  $p4 := $p5;
  goto $bb5;
$bb2:
  $p4 := 0;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5627, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5627, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5634, 3} true;
  $r := $p4;
  return;
}
procedure PptClearChipMode(Extension: int, ChipMode: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b12: bool;
  var $b6: bool;
  var $b7: bool;
  var $b8: bool;
  var $b9: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5515, 45} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5515, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5520, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5521, 3} true;
  $p := ChipMode;
  assume {:sourceloc "parport_true.i.cil.c", 5521, 3} true;
  $p1 := $and($p, -32);
  assume {:sourceloc "parport_true.i.cil.c", 5521, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5524, 3} true;
  $p2 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5524, 3} true;
  $p3 := $pa($pa($p2, 0, 80), 68, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5524, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 5524, 3} true;
  $b := ($p1 != $p4);
  assume {:sourceloc "parport_true.i.cil.c", 5524, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5527, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5528, 5} true;
  $p13 := -1073741436;
  goto $bb32;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5524, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5524, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5532, 3} true;
  $p5 := $M.30[Extension_FilterMode];
  assume {:sourceloc "parport_true.i.cil.c", 5532, 3} true;
  $b6 := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5532, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5536, 14} true;
  $p19 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5536, 14} true;
  $p20 := $pa($pa($p19, 0, 28), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5536, 14} true;
  $p21 := $M.0[$p20];
  assume {:sourceloc "parport_true.i.cil.c", 5536, 14} true;
  $p22 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5536, 14} true;
  $p23 := $pa($pa($p22, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5536, 14} true;
  $p24 := $M.0[$p23];
  assume {:sourceloc "parport_true.i.cil.c", 5536, 14} true;
  // WARNING: unsoundly ignoring indeterminate call: %"$p25" = call i32 %"$p21"(i8* %"$p24", i8 zeroext %ChipMode), !dbg !2107
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5536, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5539, 3} true;
  $p10 := $p25;
  goto $bb25;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 5542, 5} true;
  $b7 := ($p1 == 96);
  assume {:sourceloc "parport_true.i.cil.c", 5542, 5} true;
  goto $bb12, $bb13;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 5532, 3} true;
  assume $b6;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5532, 3} true;
  assume !($b6);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5544, 16} true;
  call $p18 := PptEcrClearMode(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5544, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5546, 7} true;
  $p11 := $p18;
  goto $bb26;
$bb11:
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 5542, 5} true;
  assume $b7;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 5542, 5} true;
  assume !($b7);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 5550, 5} true;
  $b8 := ($p1 == 128);
  assume {:sourceloc "parport_true.i.cil.c", 5550, 5} true;
  goto $bb17, $bb18;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 5552, 16} true;
  call $p17 := PptEcrClearMode(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5552, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5554, 7} true;
  $p11 := $p17;
  goto $bb26;
$bb16:
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 5550, 5} true;
  assume $b8;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 5550, 5} true;
  assume !($b8);
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 5558, 5} true;
  $b9 := ($p1 == 32);
  assume {:sourceloc "parport_true.i.cil.c", 5558, 5} true;
  goto $bb22, $bb23;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 5560, 16} true;
  call $p16 := PptClearByteMode(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5560, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5562, 7} true;
  $p11 := $p16;
  goto $bb26;
$bb21:
  goto $bb24;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 5558, 5} true;
  assume $b9;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 5558, 5} true;
  assume !($b9);
  goto $bb21;
$bb24:
  $p10 := -1073741823;
  goto $bb25;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 5566, 3} true;
  $p11 := $p10;
  goto $bb26;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 5568, 3} true;
  $b12 := $sge($p11, 0);
  assume {:sourceloc "parport_true.i.cil.c", 5568, 3} true;
  goto $bb29, $bb30;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 5571, 5} true;
  $p14 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5571, 5} true;
  $p15 := $pa($pa($p14, 0, 80), 68, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5571, 5} true;
  $M.0[$p15] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5572, 3} true;
  goto $bb31;
$bb28:
  goto $bb31;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 5568, 3} true;
  assume $b12;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 5568, 3} true;
  assume !($b12);
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 5574, 3} true;
  $p13 := $p11;
  goto $bb32;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 5578, 3} true;
  $r := $p13;
  return;
}
procedure PptCompleteRequest(Irp: int, PriorityBoost: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6439, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6439, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6444, 3} true;
  call IofCompleteRequest(Irp, PriorityBoost);
  assume {:sourceloc "parport_true.i.cil.c", 6448, 1} true;
  return;
}
procedure PptConnectInterrupt(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b16: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8605, 48} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8609, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8610, 3} true;
  $p := $pa($pa(Extension, 0, 448), 176, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8610, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8610, 3} true;
  $b := ($p1 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8610, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8611, 5} true;
  $p2 := -1073741637;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8610, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8610, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8634, 1} true;
  $r := $p2;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p3 := $pa($pa(Extension, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p4 := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p5 := $pa($pa(Extension, 0, 448), 180, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p7 := $pa($pa(Extension, 0, 448), 177, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p9 := $pa($pa(Extension, 0, 448), 177, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p11 := $pa($pa(Extension, 0, 448), 188, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p13 := $pa($pa(Extension, 0, 448), 184, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  call $p15 := IoConnectInterrupt($p3, PptInterruptService, $p4, 0, $p6, $p8, $p10, $p12, 1, $p14, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8616, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8621, 3} true;
  $b16 := $sge($p15, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8621, 3} true;
  goto $bb9, $bb10;
$bb7:
  goto $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  $p17 := $pa($pa(Extension, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  $p19 := $pa($pa($p18, 0, 184), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  $p20 := $M.0[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  $p21 := $pa($pa(Extension, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  $p22 := $M.0[$p21];
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  $p23 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  $p24 := $pa($pa($p23, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8623, 5} true;
  call PptLogError($p20, $p22, $p24, PhysicalZero, 0, 0, 0, 14, $p15, 20);
  assume {:sourceloc "parport_true.i.cil.c", 8629, 3} true;
  goto $bb11;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8621, 3} true;
  assume $b16;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8621, 3} true;
  assume !($b16);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 8632, 3} true;
  $p2 := $p15;
  goto $bb5;
}
procedure PptDebugDumpPnpIrpInfo(DeviceObject: int, Irp: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2389, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2389, 64} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2395, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2395, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 2396, 3} true;
  $p2 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2396, 3} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 2396, 3} true;
  $p4 := $pa($pa($p3, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2396, 3} true;
  $p5 := $pa($pa($p4, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2396, 3} true;
  $p6 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 2396, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 2396, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2397, 3} true;
  $p8 := $pa($pa($p7, 0, 36), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2397, 3} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 2397, 3} true;
  $p10 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 2397, 3} true;
  $b := $sle($p10, 24);
  assume {:sourceloc "parport_true.i.cil.c", 2397, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2398, 5} true;
  $p11 := $pa($pa($p7, 0, 36), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2398, 5} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 2398, 5} true;
  $p13 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 2398, 5} true;
  $p14 := $pa($pa(PnpIrpName, 0, 100), $p13, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2399, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 2402, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2397, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2397, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2408, 1} true;
  return;
}
procedure PptDebugDumpResourceList(ResourceList: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b13: bool;
  var $b17: bool;
  var $b21: bool;
  var $b9: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p22: int;
  var $p23: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2439, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2445, 3} true;
  $p := $pa($pa(ResourceList, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2445, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 2445, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2448, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2449, 3} true;
  $p2 := $pa($pa(ResourceList, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2449, 3} true;
  $p3 := $pa($pa($p2, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 2449, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2451, 3} true;
  $p4 := 0;
  $p5 := $p3;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2451, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 2453, 5} true;
  $b := $ult($p4, $p1);
  assume {:sourceloc "parport_true.i.cil.c", 2453, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2455, 5} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2456, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2453, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2453, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 2507, 1} true;
  return;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 2458, 5} true;
  $p6 := $pa($pa($p5, 0, 32), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2458, 5} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 2458, 5} true;
  $p8 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 2458, 5} true;
  $b9 := ($p8 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 2458, 5} true;
  goto $bb11, $bb12;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 2459, 7} true;
  goto $bb35;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 2461, 7} true;
  $p10 := $pa($pa($p5, 0, 32), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2461, 7} true;
  $p11 := $M.0[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 2461, 7} true;
  $p12 := $p11;
  assume {:sourceloc "parport_true.i.cil.c", 2461, 7} true;
  $b13 := ($p12 == 4);
  assume {:sourceloc "parport_true.i.cil.c", 2461, 7} true;
  goto $bb15, $bb16;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 2458, 5} true;
  assume $b9;
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 2458, 5} true;
  assume !($b9);
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 2462, 9} true;
  goto $bb34;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 2464, 9} true;
  $p14 := $pa($pa($p5, 0, 32), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2464, 9} true;
  $p15 := $M.0[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 2464, 9} true;
  $p16 := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 2464, 9} true;
  $b17 := ($p16 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 2464, 9} true;
  goto $bb19, $bb20;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 2461, 7} true;
  assume $b13;
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 2461, 7} true;
  assume !($b13);
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 2465, 11} true;
  goto $bb33;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 2467, 11} true;
  $p18 := $pa($pa($p5, 0, 32), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2467, 11} true;
  $p19 := $M.0[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 2467, 11} true;
  $p20 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 2467, 11} true;
  $b21 := ($p20 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 2467, 11} true;
  goto $bb23, $bb24;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 2464, 9} true;
  assume $b17;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 2464, 9} true;
  assume !($b17);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 2468, 13} true;
  goto $bb31;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 2471, 13} true;
  goto $bb25;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 2467, 11} true;
  assume $b21;
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 2467, 11} true;
  assume !($b21);
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 2492, 13} true;
  goto $bb26;
$bb26:
  goto $bb27;
$bb27:
  goto $bb28;
$bb28:
  goto $bb29;
$bb29:
  goto $bb30;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 2500, 5} true;
  $p22 := $add($p4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2500, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2501, 5} true;
  $p23 := $pa($p5, 1, 32);
  assume {:sourceloc "parport_true.i.cil.c", 2501, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2502, 3} true;
  $p4 := $p22;
  $p5 := $p23;
  goto $bb1;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 2488, 15} true;
  goto $bb32;
$bb32:
  goto $bb26;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 2484, 15} true;
  goto $bb32;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 2480, 15} true;
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 2476, 15} true;
  goto $bb32;
}
procedure PptDebugDumpResourceRequirementsList(ResourceRequirementsList: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2508, 74} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2514, 3} true;
  $p := $pa($pa(ResourceRequirementsList, 0, 72), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2514, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 2514, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2517, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2518, 3} true;
  $p2 := $pa($pa(ResourceRequirementsList, 0, 72), 32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2518, 3} true;
  $p3 := $pa($pa($p2, 0, 40), 0, 40);
  assume {:sourceloc "parport_true.i.cil.c", 2518, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2520, 3} true;
  $p4 := $p3;
  $p5 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2520, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 2522, 5} true;
  $b := $ult($p5, $p1);
  assume {:sourceloc "parport_true.i.cil.c", 2522, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2524, 5} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2525, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2522, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2522, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 2539, 1} true;
  return;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 2530, 5} true;
  call PptDebugDumpResourceList($p4);
  assume {:sourceloc "parport_true.i.cil.c", 2531, 5} true;
  $p6 := $pa($pa($p4, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2531, 5} true;
  $p7 := $pa($pa($p6, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 2531, 5} true;
  $p8 := $pa($pa($p4, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2531, 5} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 2531, 5} true;
  $p10 := $pa($p7, $p9, 32);
  assume {:sourceloc "parport_true.i.cil.c", 2531, 5} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 2531, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2532, 5} true;
  $p12 := $add($p5, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2532, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2534, 3} true;
  $p4 := $p11;
  $p5 := $p12;
  goto $bb1;
}
procedure PptDeselectDevice(Context: int, DeselectCommand: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b14: bool;
  var $b19: bool;
  var $b23: bool;
  var $b28: bool;
  var $b32: bool;
  var $b42: bool;
  var $b43: bool;
  var $b48: bool;
  var $b50: bool;
  var $b8: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p49: int;
  var $p5: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p6: int;
  var $p7: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 4092, 34} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4092, 50} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4102, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4103, 3} true;
  $p := Context;
  assume {:sourceloc "parport_true.i.cil.c", 4103, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4104, 3} true;
  $p1 := DeselectCommand;
  assume {:sourceloc "parport_true.i.cil.c", 4104, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4105, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4108, 3} true;
  $p2 := $pa($pa($p1, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4108, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 4108, 3} true;
  $p4 := $and($p3, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4108, 3} true;
  $b := ($p4 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4108, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4110, 11} true;
  call $p56 := PptDeselectLegacyZip(Context, DeselectCommand);
  assume {:sourceloc "parport_true.i.cil.c", 4110, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4112, 5} true;
  $p36 := $p56;
  goto $bb36;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 4114, 5} true;
  $p5 := $pa($pa($p1, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4114, 5} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 4114, 5} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 4114, 5} true;
  $b8 := ($p7 == 5);
  assume {:sourceloc "parport_true.i.cil.c", 4114, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4108, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4108, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 4116, 13} true;
  call $p55 := PptDeselectLegacyZip(Context, DeselectCommand);
  assume {:sourceloc "parport_true.i.cil.c", 4116, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4118, 7} true;
  $p36 := $p55;
  goto $bb36;
$bb6:
  goto $bb9;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 4114, 5} true;
  assume $b8;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 4114, 5} true;
  assume !($b8);
  goto $bb6;
$bb9:
  goto $bb10;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 4123, 3} true;
  $p9 := $pa($pa($p1, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4123, 3} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 4123, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4124, 3} true;
  $p11 := $pa($pa($p1, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4124, 3} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 4124, 3} true;
  $p13 := $and($p12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4124, 3} true;
  $b14 := ($p13 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4124, 3} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 4132, 10} true;
  goto $bb19;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 4125, 5} true;
  $p15 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 4125, 5} true;
  $p16 := $pa($pa($p, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4125, 5} true;
  $p17 := $pa($pa($p16, 0, 80), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4125, 5} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 4125, 5} true;
  $b19 := $ugt($p15, $p18);
  assume {:sourceloc "parport_true.i.cil.c", 4125, 5} true;
  goto $bb17, $bb18;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4124, 3} true;
  assume $b14;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 4124, 3} true;
  assume !($b14);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4128, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4129, 5} true;
  goto $bb61;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 4130, 7} true;
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 4125, 5} true;
  assume $b19;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 4125, 5} true;
  assume !($b19);
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 4134, 5} true;
  $p20 := $pa($pa($p1, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4134, 5} true;
  $p21 := $M.0[$p20];
  assume {:sourceloc "parport_true.i.cil.c", 4134, 5} true;
  $p22 := $and($p21, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4134, 5} true;
  $b23 := ($p22 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4134, 5} true;
  goto $bb22, $bb23;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 4176, 12} true;
  goto $bb28;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 4135, 7} true;
  $p24 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 4135, 7} true;
  $p25 := $pa($pa($p, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4135, 7} true;
  $p26 := $pa($pa($p25, 0, 80), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4135, 7} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 4135, 7} true;
  $b28 := $ult($p24, $p27);
  assume {:sourceloc "parport_true.i.cil.c", 4135, 7} true;
  goto $bb26, $bb27;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 4134, 5} true;
  assume $b23;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 4134, 5} true;
  assume !($b23);
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 4136, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4138, 9} true;
  $p37 := 0;
  $p38 := 0;
  goto $bb37;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 4174, 9} true;
  goto $bb28;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 4135, 7} true;
  assume $b28;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 4135, 7} true;
  assume !($b28);
  goto $bb25;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 4180, 7} true;
  $p29 := $pa($pa($p1, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4180, 7} true;
  $p30 := $M.0[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 4180, 7} true;
  $p31 := $and($p30, 2);
  assume {:sourceloc "parport_true.i.cil.c", 4180, 7} true;
  $b32 := ($p31 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4180, 7} true;
  goto $bb31, $bb32;
$bb29:
  goto $bb33;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 4182, 9} true;
  $p33 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4182, 9} true;
  call PptFreePort($p33);
  assume {:sourceloc "parport_true.i.cil.c", 4184, 7} true;
  goto $bb33;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 4180, 7} true;
  assume $b32;
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 4180, 7} true;
  assume !($b32);
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 4187, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p34 := 0;
  goto $bb34;
$bb34:
  $p35 := $p34;
  goto $bb35;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 4190, 3} true;
  $p36 := $p35;
  goto $bb36;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 4192, 1} true;
  $r := $p36;
  return;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 4138, 19} true;
  goto $bb38;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 4140, 11} true;
  $p39 := $p38;
  assume {:sourceloc "parport_true.i.cil.c", 4140, 11} true;
  $p40 := $M.28[PptDot3Retries];
  assume {:sourceloc "parport_true.i.cil.c", 4140, 11} true;
  $p41 := $p40;
  assume {:sourceloc "parport_true.i.cil.c", 4140, 11} true;
  $b42 := $slt($p39, $p41);
  assume {:sourceloc "parport_true.i.cil.c", 4140, 11} true;
  goto $bb41, $bb42;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 4141, 13} true;
  $b50 := ($p37 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4141, 13} true;
  goto $bb57, $bb58;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 4147, 13} true;
  goto $bb43;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 4140, 11} true;
  assume $b42;
  goto $bb39;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 4140, 11} true;
  assume !($b42);
  goto $bb40;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 4157, 9} true;
  $b43 := ($p37 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4157, 9} true;
  goto $bb46, $bb47;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 4160, 11} true;
  $p45 := $pa($pa($p1, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4160, 11} true;
  $p46 := $M.0[$p45];
  assume {:sourceloc "parport_true.i.cil.c", 4160, 11} true;
  $p47 := $and($p46, 2);
  assume {:sourceloc "parport_true.i.cil.c", 4160, 11} true;
  $b48 := ($p47 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4160, 11} true;
  goto $bb52, $bb53;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 4171, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p44 := -1073741823;
  goto $bb48;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 4157, 9} true;
  assume $b43;
  goto $bb44;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 4157, 9} true;
  assume !($b43);
  goto $bb45;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 4173, 7} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 4176, 5} true;
  $p34 := $p44;
  goto $bb34;
$bb50:
  goto $bb54;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 4162, 13} true;
  $p49 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4162, 13} true;
  call PptFreePort($p49);
  assume {:sourceloc "parport_true.i.cil.c", 4164, 11} true;
  goto $bb54;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 4160, 11} true;
  assume $b48;
  goto $bb50;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 4160, 11} true;
  assume !($b48);
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 4167, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4168, 9} true;
  $p44 := 0;
  goto $bb48;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 4144, 15} true;
  goto $bb43;
$bb56:
  assume {:sourceloc "parport_true.i.cil.c", 4143, 13} true;
  goto $bb59;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 4141, 13} true;
  assume $b50;
  goto $bb55;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 4141, 13} true;
  assume !($b50);
  goto $bb56;
$bb59:
  assume {:sourceloc "parport_true.i.cil.c", 4146, 11} true;
  goto $bb60;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 4150, 21} true;
  call $p51 := PptSend1284_3Command($p, 48);
  assume {:sourceloc "parport_true.i.cil.c", 4150, 21} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4151, 11} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4152, 11} true;
  $p52 := $p38;
  assume {:sourceloc "parport_true.i.cil.c", 4152, 11} true;
  $p53 := $add($p52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4152, 11} true;
  $p54 := $trunc($p53, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4152, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4154, 9} true;
  $p37 := $p51;
  $p38 := $p54;
  goto $bb37;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 4132, 3} true;
  $p35 := -1073741811;
  goto $bb35;
}
procedure PptDeselectLegacyZip(Context: int, DeselectCommand: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8198, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8198, 53} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8199, 13} true;
  call $p := __VERIFIER_nondet_long();
  assume {:sourceloc "parport_true.i.cil.c", 8199, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8205, 3} true;
  $p1 := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8205, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8206, 3} true;
  $p2 := $pa($pa($p1, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8206, 3} true;
  $p3 := $pa($pa($p2, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8206, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 8206, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8207, 3} true;
  $p5 := DeselectCommand;
  assume {:sourceloc "parport_true.i.cil.c", 8207, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8211, 3} true;
  $p6 := $pa($pa(LegacyZipModeQualifier___11, 0, 3), $p, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8211, 3} true;
  $p7 := $M.41[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 8211, 3} true;
  call PptLegacyZipClockPrtModeByte($p4, $p7);
  assume {:sourceloc "parport_true.i.cil.c", 8212, 3} true;
  call PptLegacyZipClockPrtModeByte($p4, 15);
  assume {:sourceloc "parport_true.i.cil.c", 8214, 3} true;
  $p8 := $pa($pa($p5, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8214, 3} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 8214, 3} true;
  $p10 := $and($p9, 2);
  assume {:sourceloc "parport_true.i.cil.c", 8214, 3} true;
  $b := ($p10 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8214, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8216, 5} true;
  $p11 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8216, 5} true;
  call PptFreePort($p11);
  assume {:sourceloc "parport_true.i.cil.c", 8218, 3} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8214, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8214, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8221, 3} true;
  $r := 0;
  return;
}
procedure PptDetectBytePort(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5270, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5274, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5278, 12} true;
  call $p := PptSetByteMode(Extension, 52);
  assume {:sourceloc "parport_true.i.cil.c", 5278, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5280, 3} true;
  $b := $sge($p, 0);
  assume {:sourceloc "parport_true.i.cil.c", 5280, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5283, 5} true;
  $p2 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5283, 5} true;
  $p3 := $pa($pa($p2, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5283, 5} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 5283, 5} true;
  $p5 := $or($p4, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5283, 5} true;
  $M.0[$p3] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 5284, 3} true;
  goto $bb5;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5280, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5280, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5289, 3} true;
  call $p1 := PptClearByteMode(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5293, 1} true;
  return;
}
procedure PptDetectChipFilter(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b18: bool;
  var $b27: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 4848, 48} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4857, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4858, 3} true;
  $p := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4858, 3} true;
  $p1 := $pa($pa($p, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4858, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 4858, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4859, 3} true;
  $p3 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4859, 3} true;
  $p4 := $pa($pa($p3, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4859, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 4859, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4863, 3} true;
  $p6 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4863, 3} true;
  $p7 := $pa($pa($p6, 0, 28), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4863, 3} true;
  $M.0[$p7] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 4864, 3} true;
  $p8 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4864, 3} true;
  $p9 := $pa($pa($p8, 0, 28), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4864, 3} true;
  $M.0[$p9] := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 4865, 3} true;
  $p10 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4865, 3} true;
  $p11 := $pa($pa($p10, 0, 28), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4865, 3} true;
  $M.0[$p11] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 4868, 3} true;
  $p12 := $M.30[Extension_FilterMode];
  assume {:sourceloc "parport_true.i.cil.c", 4868, 3} true;
  $b := ($p12 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4868, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4869, 5} true;
  $p14 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4869, 5} true;
  $p15 := $pa($pa($p14, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4869, 5} true;
  $p16 := $M.0[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 4869, 5} true;
  $p17 := $and($p16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4869, 5} true;
  $b18 := ($p17 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4869, 5} true;
  goto $bb8, $bb9;
$bb2:
  $p13 := -1073741810;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4868, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4868, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 4899, 3} true;
  $r := $p13;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 4873, 16} true;
  $p20 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4873, 16} true;
  $p21 := $pa($pa($p20, 0, 28), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4873, 16} true;
  $p22 := $M.0[$p21];
  assume {:sourceloc "parport_true.i.cil.c", 4873, 16} true;
  $p23 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4873, 16} true;
  $p24 := $pa($pa($p23, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4873, 16} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 4873, 16} true;
  // WARNING: unsoundly ignoring indeterminate call: %"$p26" = call i32 %"$p22"(i8* %"$p25", i8 zeroext 96), !dbg !2108
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4873, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4876, 7} true;
  $b27 := $sge($p26, 0);
  assume {:sourceloc "parport_true.i.cil.c", 4876, 7} true;
  goto $bb13, $bb14;
$bb7:
  $p19 := -1073741810;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 4869, 5} true;
  assume $b18;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 4869, 5} true;
  assume !($b18);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 4894, 3} true;
  $p13 := $p19;
  goto $bb5;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 4880, 9} true;
  $p29 := $pa($p5, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4880, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4881, 19} true;
  call $p30 := READ_PORT_UCHAR($p29);
  assume {:sourceloc "parport_true.i.cil.c", 4881, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4882, 9} true;
  call PptDetermineFifoWidth(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 4883, 9} true;
  call PptDetermineFifoDepth(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 4884, 9} true;
  call WRITE_PORT_UCHAR($p29, $p30);
  assume {:sourceloc "parport_true.i.cil.c", 4885, 18} true;
  $p31 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4885, 18} true;
  $p32 := $pa($pa($p31, 0, 28), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4885, 18} true;
  $p33 := $M.0[$p32];
  assume {:sourceloc "parport_true.i.cil.c", 4885, 18} true;
  $p34 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4885, 18} true;
  $p35 := $pa($pa($p34, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4885, 18} true;
  $p36 := $M.0[$p35];
  assume {:sourceloc "parport_true.i.cil.c", 4885, 18} true;
  // WARNING: unsoundly ignoring indeterminate call: %"$p37" = call i32 %"$p33"(i8* %"$p36", i8 zeroext 96), !dbg !2122
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4885, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4888, 7} true;
  $p28 := $p37;
  goto $bb15;
$bb12:
  $p28 := $p26;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4876, 7} true;
  assume $b27;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 4876, 7} true;
  assume !($b27);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4891, 5} true;
  $p19 := $p28;
  goto $bb10;
}
procedure PptDetectEcpPort(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b16: bool;
  var $b18: bool;
  var $b21: bool;
  var $b25: bool;
  var $b36: bool;
  var $b44: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p17: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5041, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5050, 3} true;
  $p := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5050, 3} true;
  $p1 := $pa($pa($p, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5050, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 5050, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5051, 3} true;
  $p3 := $pa($p2, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5051, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5052, 3} true;
  $p4 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5052, 3} true;
  $p5 := $pa($pa($p4, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5052, 3} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 5052, 3} true;
  $p7 := $p2i($p6);
  assume {:sourceloc "parport_true.i.cil.c", 5052, 3} true;
  $b := (0 == $p7);
  assume {:sourceloc "parport_true.i.cil.c", 5052, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5055, 5} true;
  goto $bb25;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5052, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5052, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5059, 3} true;
  $p8 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5059, 3} true;
  $p9 := $pa($pa($p8, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5059, 3} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 5059, 3} true;
  $p11 := $pa($p10, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5059, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5065, 9} true;
  call $p12 := READ_PORT_UCHAR($p11);
  assume {:sourceloc "parport_true.i.cil.c", 5065, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5066, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5071, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5072, 3} true;
  call WRITE_PORT_UCHAR($p3, 14);
  assume {:sourceloc "parport_true.i.cil.c", 5073, 9} true;
  call $p13 := READ_PORT_UCHAR($p11);
  assume {:sourceloc "parport_true.i.cil.c", 5073, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5074, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5078, 3} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 5078, 3} true;
  $p15 := $and($p14, 3);
  assume {:sourceloc "parport_true.i.cil.c", 5078, 3} true;
  $b16 := ($p15 == 3);
  assume {:sourceloc "parport_true.i.cil.c", 5078, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5079, 5} true;
  goto $bb37;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 5081, 5} true;
  $p17 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 5081, 5} true;
  $b18 := ($p17 == 255);
  assume {:sourceloc "parport_true.i.cil.c", 5081, 5} true;
  goto $bb12, $bb13;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 5078, 3} true;
  assume $b16;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5078, 3} true;
  assume !($b16);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5081, 31} true;
  goto $bb37;
$bb11:
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 5081, 5} true;
  assume $b18;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 5081, 5} true;
  assume !($b18);
  goto $bb11;
$bb14:
  goto $bb15;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 5094, 3} true;
  $p19 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 5094, 3} true;
  $p20 := $and($p19, 3);
  assume {:sourceloc "parport_true.i.cil.c", 5094, 3} true;
  $b21 := ($p20 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 5094, 3} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 5096, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5097, 5} true;
  call WRITE_PORT_UCHAR($p3, 12);
  assume {:sourceloc "parport_true.i.cil.c", 5098, 11} true;
  call $p41 := READ_PORT_UCHAR($p11);
  assume {:sourceloc "parport_true.i.cil.c", 5098, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5100, 5} true;
  $p42 := $p41;
  assume {:sourceloc "parport_true.i.cil.c", 5100, 5} true;
  $p43 := $and($p42, 3);
  assume {:sourceloc "parport_true.i.cil.c", 5100, 5} true;
  $b44 := ($p43 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 5100, 5} true;
  goto $bb34, $bb35;
$bb17:
  goto $bb20;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 5094, 3} true;
  assume $b21;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 5094, 3} true;
  assume !($b21);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 5115, 3} true;
  call WRITE_PORT_UCHAR($p11, 20);
  assume {:sourceloc "parport_true.i.cil.c", 5116, 9} true;
  call $p22 := READ_PORT_UCHAR($p11);
  assume {:sourceloc "parport_true.i.cil.c", 5116, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5118, 3} true;
  $p23 := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 5118, 3} true;
  $p24 := $and($p23, 3);
  assume {:sourceloc "parport_true.i.cil.c", 5118, 3} true;
  $b25 := ($p24 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 5118, 3} true;
  goto $bb23, $bb24;
$bb21:
  goto $bb26;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 5122, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5123, 5} true;
  call WRITE_PORT_UCHAR($p3, 12);
  assume {:sourceloc "parport_true.i.cil.c", 5125, 5} true;
  goto $bb25;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 5118, 3} true;
  assume $b25;
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 5118, 3} true;
  assume !($b25);
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 5151, 1} true;
  return;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 5130, 3} true;
  call WRITE_PORT_UCHAR($p11, $p13);
  assume {:sourceloc "parport_true.i.cil.c", 5131, 13} true;
  call $p26 := READ_PORT_UCHAR($p11);
  assume {:sourceloc "parport_true.i.cil.c", 5131, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5132, 3} true;
  $p27 := $p26;
  assume {:sourceloc "parport_true.i.cil.c", 5132, 3} true;
  $p28 := $and($p27, 31);
  assume {:sourceloc "parport_true.i.cil.c", 5132, 3} true;
  $p29 := $trunc($p28, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5132, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5133, 3} true;
  $p30 := $p29;
  assume {:sourceloc "parport_true.i.cil.c", 5133, 3} true;
  $p31 := $or($p30, 192);
  assume {:sourceloc "parport_true.i.cil.c", 5133, 3} true;
  $p32 := $trunc($p31, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5133, 3} true;
  call WRITE_PORT_UCHAR($p11, $p32);
  assume {:sourceloc "parport_true.i.cil.c", 5134, 3} true;
  call PptDetermineFifoWidth(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5136, 3} true;
  $p33 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5136, 3} true;
  $p34 := $pa($pa($p33, 0, 80), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5136, 3} true;
  $p35 := $M.0[$p34];
  assume {:sourceloc "parport_true.i.cil.c", 5136, 3} true;
  $b36 := (0 != $p35);
  assume {:sourceloc "parport_true.i.cil.c", 5136, 3} true;
  goto $bb29, $bb30;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 5138, 5} true;
  $p37 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5138, 5} true;
  $p38 := $pa($pa($p37, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5138, 5} true;
  $p39 := $M.0[$p38];
  assume {:sourceloc "parport_true.i.cil.c", 5138, 5} true;
  $p40 := $or($p39, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5138, 5} true;
  $M.0[$p38] := $p40;
  assume {:sourceloc "parport_true.i.cil.c", 5139, 5} true;
  call PptDetermineFifoDepth(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5143, 3} true;
  goto $bb31;
$bb28:
  goto $bb31;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 5136, 3} true;
  assume $b36;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 5136, 3} true;
  assume !($b36);
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 5147, 3} true;
  call WRITE_PORT_UCHAR($p11, $p26);
  assume {:sourceloc "parport_true.i.cil.c", 5149, 3} true;
  goto $bb25;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 5104, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5105, 7} true;
  call WRITE_PORT_UCHAR($p3, 12);
  assume {:sourceloc "parport_true.i.cil.c", 5107, 7} true;
  goto $bb25;
$bb33:
  goto $bb36;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 5100, 5} true;
  assume $b44;
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 5100, 5} true;
  assume !($b44);
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 5111, 3} true;
  goto $bb20;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 5086, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5087, 7} true;
  call WRITE_PORT_UCHAR($p3, 12);
  assume {:sourceloc "parport_true.i.cil.c", 5089, 7} true;
  goto $bb25;
}
procedure PptDetectEppPort(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b24: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5217, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5220, 13} true;
  call $p := __VERIFIER_nondet_char();
  assume {:sourceloc "parport_true.i.cil.c", 5220, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5228, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5229, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5230, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5231, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5235, 3} true;
  $p1 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5235, 3} true;
  $p2 := $pa($pa($p1, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5235, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 5235, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5236, 9} true;
  $p4 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5236, 9} true;
  call $p5 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 5236, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5237, 3} true;
  $p6 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5237, 3} true;
  $p7 := $pa($pa($p6, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5237, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 5237, 3} true;
  $p9 := $or($p8, 2);
  assume {:sourceloc "parport_true.i.cil.c", 5237, 3} true;
  $M.0[$p7] := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 5242, 3} true;
  call $p10 := PptEcrSetMode(Extension, 148);
  assume {:sourceloc "parport_true.i.cil.c", 5243, 3} true;
  $p11 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5243, 3} true;
  call WRITE_PORT_UCHAR($p11, 38);
  assume {:sourceloc "parport_true.i.cil.c", 5244, 3} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 5245, 3} true;
  $p12 := $pa($p3, 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5245, 3} true;
  call WRITE_PORT_UCHAR($p12, $p);
  assume {:sourceloc "parport_true.i.cil.c", 5246, 3} true;
  $p13 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5246, 3} true;
  call WRITE_PORT_UCHAR($p13, 6);
  assume {:sourceloc "parport_true.i.cil.c", 5247, 3} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 5248, 9} true;
  call $p14 := READ_PORT_UCHAR($p3);
  assume {:sourceloc "parport_true.i.cil.c", 5248, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5250, 3} true;
  $p15 := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 5250, 3} true;
  $p16 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 5250, 3} true;
  $b := ($p15 != $p16);
  assume {:sourceloc "parport_true.i.cil.c", 5250, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5251, 5} true;
  $p25 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5251, 5} true;
  $p26 := $pa($pa($p25, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5251, 5} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 5251, 5} true;
  $p28 := $and($p27, -3);
  assume {:sourceloc "parport_true.i.cil.c", 5251, 5} true;
  $M.0[$p26] := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 5252, 3} true;
  goto $bb5;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5250, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5250, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5256, 3} true;
  call $p17 := PptEcrClearMode(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5257, 3} true;
  $p18 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5257, 3} true;
  call WRITE_PORT_UCHAR($p18, $p5);
  assume {:sourceloc "parport_true.i.cil.c", 5258, 3} true;
  $p19 := $pa($pa(Extension, 0, 448), 440, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5258, 3} true;
  $M.0[$p19] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 5260, 3} true;
  $p20 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5260, 3} true;
  $p21 := $pa($pa($p20, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5260, 3} true;
  $p22 := $M.0[$p21];
  assume {:sourceloc "parport_true.i.cil.c", 5260, 3} true;
  $p23 := $and($p22, 2);
  assume {:sourceloc "parport_true.i.cil.c", 5260, 3} true;
  $b24 := ($p23 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5260, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5263, 3} true;
  goto $bb10;
$bb7:
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 5260, 3} true;
  assume $b24;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5260, 3} true;
  assume !($b24);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5269, 1} true;
  return;
}
procedure PptDetectEppPortIfDot3DevicePresent(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b12: bool;
  var $b19: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 5152, 60} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5158, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5161, 3} true;
  $p1 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5161, 3} true;
  $p2 := $pa($pa($p1, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5162, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5163, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5164, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5165, 3} true;
  $p3 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5165, 3} true;
  $p4 := $pa($pa($p3, 0, 80), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5165, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 5165, 3} true;
  $b := (0 == $p5);
  assume {:sourceloc "parport_true.i.cil.c", 5165, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5168, 5} true;
  goto $bb10;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5165, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5165, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5173, 3} true;
  $p6 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5173, 3} true;
  $M.12[$p6] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5174, 3} true;
  $p7 := $pa($pa($p, 0, 8), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5174, 3} true;
  $M.12[$p7] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5175, 3} true;
  $p8 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5175, 3} true;
  $M.12[$p8] := 2;
  assume {:sourceloc "parport_true.i.cil.c", 5176, 12} true;
  $p9 := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 5176, 12} true;
  $p10 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 5176, 12} true;
  call $p11 := PptTrySelectDevice($p9, $p10);
  assume {:sourceloc "parport_true.i.cil.c", 5176, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5178, 3} true;
  $b12 := $sge($p11, 0);
  assume {:sourceloc "parport_true.i.cil.c", 5178, 3} true;
  goto $bb8, $bb9;
$bb6:
  goto $bb11;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 5181, 5} true;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 5178, 3} true;
  assume $b12;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5178, 3} true;
  assume !($b12);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5201, 1} true;
  return;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 5186, 3} true;
  call PptDetectEppPort(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5187, 3} true;
  $p13 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5187, 3} true;
  $M.12[$p13] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5188, 3} true;
  $p14 := $pa($pa($p, 0, 8), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5188, 3} true;
  $M.12[$p14] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5189, 3} true;
  $p15 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5189, 3} true;
  $M.12[$p15] := 2;
  assume {:sourceloc "parport_true.i.cil.c", 5190, 12} true;
  $p16 := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 5190, 12} true;
  $p17 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 5190, 12} true;
  call $p18 := PptDeselectDevice($p16, $p17);
  assume {:sourceloc "parport_true.i.cil.c", 5190, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5192, 3} true;
  $b19 := $sge($p18, 0);
  assume {:sourceloc "parport_true.i.cil.c", 5192, 3} true;
  goto $bb14, $bb15;
$bb12:
  goto $bb16;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 5195, 3} true;
  goto $bb16;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 5192, 3} true;
  assume $b19;
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 5192, 3} true;
  assume !($b19);
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 5199, 3} true;
  goto $bb10;
}
procedure PptDetectEppPortIfUserRequested(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5202, 56} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5206, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5207, 3} true;
  $b := (0 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5207, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5209, 5} true;
  call PptDetectEppPort(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5211, 3} true;
  goto $bb5;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5207, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5207, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5216, 1} true;
  return;
}
procedure PptDetectPortCapabilities(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b16: bool;
  var $b18: bool;
  var $b21: bool;
  var $b24: bool;
  var $b9: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p17: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p22: int;
  var $p23: int;
  var $p25: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 4973, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4982, 3} true;
  call PptDetectEcpPort(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 4984, 3} true;
  $p := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4984, 3} true;
  $p1 := $pa($pa($p, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4984, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 4984, 3} true;
  $p3 := $and($p2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4984, 3} true;
  $b := ($p3 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4984, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  $p11 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  $p12 := $pa($pa($p11, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  $p13 := $M.0[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  $p14 := $p2i($p13);
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  $p15 := $and($p14, 15);
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  $b16 := ($p15 != 12);
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  goto $bb15, $bb16;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 5018, 10} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4984, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4984, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5022, 5} true;
  $p4 := $pa($pa(Extension, 0, 448), 440, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5022, 5} true;
  $M.0[$p4] := 1;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5027, 3} true;
  call PptDetectBytePort(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5029, 3} true;
  $p5 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5029, 3} true;
  $p6 := $pa($pa($p5, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5029, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 5029, 3} true;
  $p8 := $and($p7, 11);
  assume {:sourceloc "parport_true.i.cil.c", 5029, 3} true;
  $b9 := ($p8 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5029, 3} true;
  goto $bb9, $bb10;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 5032, 5} true;
  $p10 := 0;
  goto $bb12;
$bb8:
  goto $bb11;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5029, 3} true;
  assume $b9;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5029, 3} true;
  assume !($b9);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 5038, 3} true;
  $p10 := -1073741810;
  goto $bb12;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 5040, 1} true;
  $r := $p10;
  return;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4989, 16} true;
  call $p17 := PptFindNatChip(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 4989, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4991, 7} true;
  $b18 := $sge($p17, 0);
  assume {:sourceloc "parport_true.i.cil.c", 4991, 7} true;
  goto $bb19, $bb20;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 5016, 7} true;
  goto $bb5;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  assume $b16;
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 4985, 5} true;
  assume !($b16);
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 4992, 9} true;
  $p19 := $pa($pa(Extension, 0, 448), 254, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4992, 9} true;
  $p20 := $M.0[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 4992, 9} true;
  $b21 := ($p20 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4992, 9} true;
  goto $bb25, $bb26;
$bb18:
  goto $bb21;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 4991, 7} true;
  assume $b18;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 4991, 7} true;
  assume !($b18);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 5015, 5} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 5018, 3} true;
  goto $bb6;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 5010, 11} true;
  $p25 := $pa($pa(Extension, 0, 448), 440, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5010, 11} true;
  $M.0[$p25] := 1;
  goto $bb32;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 4998, 11} true;
  call PptDetectEppPortIfDot3DevicePresent(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5000, 11} true;
  $p22 := $pa($pa(Extension, 0, 448), 440, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5000, 11} true;
  $p23 := $M.0[$p22];
  assume {:sourceloc "parport_true.i.cil.c", 5000, 11} true;
  $b24 := ($p23 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5000, 11} true;
  goto $bb29, $bb30;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 4992, 9} true;
  assume $b21;
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 4992, 9} true;
  assume !($b21);
  goto $bb24;
$bb27:
  goto $bb31;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 5002, 13} true;
  call PptDetectEppPortIfUserRequested(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5004, 11} true;
  goto $bb31;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 5000, 11} true;
  assume $b24;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 5000, 11} true;
  assume !($b24);
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 5007, 9} true;
  goto $bb32;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 5012, 7} true;
  goto $bb21;
}
procedure PptDetectPortType(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b22: bool;
  var $b23: bool;
  var $b30: bool;
  var $b32: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p31: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(56, 1));
  call $p2 := $alloca($mul(4, 1));
  call $p3 := $alloca($mul(4, 1));
  assume {:sourceloc "parport_true.i.cil.c", 4902, 46} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4903, 24} true;
  call $p4 := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 4903, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4905, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4906, 28} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4907, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4908, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4911, 3} true;
  $M.10[$p2] := 12169;
  assume {:sourceloc "parport_true.i.cil.c", 4912, 3} true;
  $M.3[$p3] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 4916, 3} true;
  $p5 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 4916, 3} true;
  call $memset.2($p5, 0, 56, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 4917, 3} true;
  $p6 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 4917, 3} true;
  $p7 := $pa($pa($p6, 0, 28), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4917, 3} true;
  $M.2[$p7] := 36;
  assume {:sourceloc "parport_true.i.cil.c", 4918, 3} true;
  $p8 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 4918, 3} true;
  $p9 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 4918, 3} true;
  $p10 := $pa($pa($p9, 0, 28), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4918, 3} true;
  $M.2[$p10] := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 4919, 3} true;
  $p11 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 4919, 3} true;
  $p12 := $pa($pa($p11, 0, 28), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4919, 3} true;
  $M.2[$p12] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 4920, 3} true;
  $p13 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 4920, 3} true;
  $p14 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 4920, 3} true;
  $p15 := $pa($pa($p14, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4920, 3} true;
  $M.2[$p15] := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4921, 3} true;
  $p16 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 4921, 3} true;
  $p17 := $pa($pa($p16, 0, 28), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4921, 3} true;
  $M.2[$p17] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 4922, 12} true;
  $p18 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4922, 12} true;
  $p19 := $M.9[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 4922, 12} true;
  $p20 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 4922, 12} true;
  call $p21 := RtlQueryRegistryValues(1, $p19, $p20, 0, 0);
  assume {:sourceloc "parport_true.i.cil.c", 4922, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4928, 3} true;
  $b := $sge($p21, 0);
  assume {:sourceloc "parport_true.i.cil.c", 4928, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4929, 5} true;
  $p31 := $M.10[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 4929, 5} true;
  $b32 := ($p31 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 4929, 5} true;
  goto $bb24, $bb25;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 4934, 10} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4928, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4928, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 4936, 5} true;
  $b22 := ($p21 != -1073741772);
  assume {:sourceloc "parport_true.i.cil.c", 4936, 5} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 4942, 7} true;
  call PptDetectEcpPort(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 4943, 7} true;
  call PptDetectBytePort(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 4945, 7} true;
  $p26 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4945, 7} true;
  $p27 := $pa($pa($p26, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4945, 7} true;
  $p28 := $M.0[$p27];
  assume {:sourceloc "parport_true.i.cil.c", 4945, 7} true;
  $p29 := $and($p28, 9);
  assume {:sourceloc "parport_true.i.cil.c", 4945, 7} true;
  $b30 := ($p29 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4945, 7} true;
  goto $bb20, $bb21;
$bb7:
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 4936, 5} true;
  assume $b22;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 4936, 5} true;
  assume !($b22);
  goto $bb7;
$bb10:
  goto $bb11;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 4954, 3} true;
  $M.10[$p2] := 12169;
  assume {:sourceloc "parport_true.i.cil.c", 4955, 3} true;
  $b23 := ($p4 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4955, 3} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 4956, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4957, 3} true;
  goto $bb16;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4958, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  goto $bb16;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 4955, 3} true;
  assume $b23;
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4955, 3} true;
  assume !($b23);
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 4963, 12} true;
  call $p24 := PptDetectPortCapabilities(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 4963, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4967, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4970, 3} true;
  $p25 := 0;
  goto $bb17;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 4972, 1} true;
  $r := $p25;
  return;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 4946, 9} true;
  $p25 := 0;
  goto $bb17;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 4948, 9} true;
  $p25 := -1073741810;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 4945, 7} true;
  assume $b30;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 4945, 7} true;
  assume !($b30);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 4931, 5} true;
  goto $bb26;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 4932, 7} true;
  goto $bb5;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 4929, 5} true;
  assume $b32;
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 4929, 5} true;
  assume !($b32);
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 4934, 3} true;
  goto $bb11;
}
procedure PptDetermineFifoDepth(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b18: bool;
  var $b24: bool;
  var $b27: bool;
  var $b31: bool;
  var $b36: bool;
  var $b41: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p25: int;
  var $p26: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5294, 46} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5310, 3} true;
  $p := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5310, 3} true;
  $p1 := $pa($pa($p, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5311, 3} true;
  $p2 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5311, 3} true;
  $p3 := $pa($pa($p2, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5311, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 5311, 3} true;
  $p5 := $pa($p4, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5311, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5312, 3} true;
  $p6 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5312, 3} true;
  $p7 := $pa($pa($p6, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5312, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 5312, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5313, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5314, 13} true;
  call $p9 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 5314, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5315, 3} true;
  call WRITE_PORT_UCHAR($p5, 212);
  assume {:sourceloc "parport_true.i.cil.c", 5316, 9} true;
  call $p10 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 5316, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5318, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 5318, 3} true;
  $p12 := $and($p11, 3);
  assume {:sourceloc "parport_true.i.cil.c", 5318, 3} true;
  $b := ($p12 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 5318, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5319, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5320, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5322, 5} true;
  $p13 := 0;
  $p14 := 0;
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 5397, 5} true;
  call WRITE_PORT_UCHAR($p5, $p9);
  assume {:sourceloc "parport_true.i.cil.c", 5399, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5318, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5318, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5407, 1} true;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5322, 15} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 5325, 13} true;
  call $p15 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 5325, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5327, 7} true;
  $p16 := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 5327, 7} true;
  $p17 := $and($p16, 3);
  assume {:sourceloc "parport_true.i.cil.c", 5327, 7} true;
  $b18 := ($p17 != 2);
  assume {:sourceloc "parport_true.i.cil.c", 5327, 7} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 5328, 9} true;
  $b41 := $ule($p14, 4098);
  assume {:sourceloc "parport_true.i.cil.c", 5328, 9} true;
  goto $bb39, $bb40;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5334, 9} true;
  goto $bb12;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5327, 7} true;
  assume $b18;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 5327, 7} true;
  assume !($b18);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 5346, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5347, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5349, 5} true;
  $p19 := 0;
  $p20 := 0;
  goto $bb13;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 5349, 15} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 5352, 17} true;
  call $p21 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 5352, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5354, 7} true;
  $p22 := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 5354, 7} true;
  $p23 := $and($p22, 3);
  assume {:sourceloc "parport_true.i.cil.c", 5354, 7} true;
  $b24 := ($p23 != 1);
  assume {:sourceloc "parport_true.i.cil.c", 5354, 7} true;
  goto $bb17, $bb18;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 5355, 9} true;
  $b31 := $ule($p20, 4098);
  assume {:sourceloc "parport_true.i.cil.c", 5355, 9} true;
  goto $bb28, $bb29;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 5361, 9} true;
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 5354, 7} true;
  assume $b24;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 5354, 7} true;
  assume !($b24);
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 5383, 5} true;
  $p25 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 5383, 5} true;
  $p26 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 5383, 5} true;
  $b27 := ($p25 == $p26);
  assume {:sourceloc "parport_true.i.cil.c", 5383, 5} true;
  goto $bb22, $bb23;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 5384, 7} true;
  $p28 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 5384, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5385, 5} true;
  goto $bb24;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 5387, 7} true;
  call WRITE_PORT_UCHAR($p5, $p9);
  assume {:sourceloc "parport_true.i.cil.c", 5391, 7} true;
  goto $bb5;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 5383, 5} true;
  assume $b27;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 5383, 5} true;
  assume !($b27);
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 5393, 3} true;
  goto $bb25;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 5402, 3} true;
  call WRITE_PORT_UCHAR($p5, $p9);
  assume {:sourceloc "parport_true.i.cil.c", 5403, 3} true;
  $p29 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5403, 3} true;
  $p30 := $pa($pa($p29, 0, 80), 32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5403, 3} true;
  $M.0[$p30] := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 5405, 3} true;
  goto $bb5;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 5357, 9} true;
  goto $bb30;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 5358, 11} true;
  goto $bb19;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 5355, 9} true;
  assume $b31;
  goto $bb26;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 5355, 9} true;
  assume !($b31);
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 5360, 7} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 5364, 18} true;
  call $p32 := READ_PORT_UCHAR($p8);
  assume {:sourceloc "parport_true.i.cil.c", 5364, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5366, 7} true;
  $p33 := $p32;
  assume {:sourceloc "parport_true.i.cil.c", 5366, 7} true;
  $p34 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 5366, 7} true;
  $p35 := $and($p34, 255);
  assume {:sourceloc "parport_true.i.cil.c", 5366, 7} true;
  $b36 := ($p33 != $p35);
  assume {:sourceloc "parport_true.i.cil.c", 5366, 7} true;
  goto $bb34, $bb35;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 5368, 9} true;
  call WRITE_PORT_UCHAR($p5, $p9);
  assume {:sourceloc "parport_true.i.cil.c", 5372, 9} true;
  goto $bb5;
$bb33:
  goto $bb36;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 5366, 7} true;
  assume $b36;
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 5366, 7} true;
  assume !($b36);
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 5376, 7} true;
  $p37 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 5376, 7} true;
  $p38 := $add($p37, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5376, 7} true;
  $p39 := $trunc($p38, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5376, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5377, 7} true;
  $p40 := $add($p20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5377, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5378, 5} true;
  $p19 := $p39;
  $p20 := $p40;
  goto $bb13;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 5330, 9} true;
  goto $bb41;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 5331, 11} true;
  goto $bb12;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 5328, 9} true;
  assume $b41;
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 5328, 9} true;
  assume !($b41);
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 5333, 7} true;
  goto $bb42;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 5337, 7} true;
  $p42 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 5337, 7} true;
  $p43 := $and($p42, 255);
  assume {:sourceloc "parport_true.i.cil.c", 5337, 7} true;
  $p44 := $trunc($p43, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5337, 7} true;
  call WRITE_PORT_UCHAR($p8, $p44);
  assume {:sourceloc "parport_true.i.cil.c", 5338, 7} true;
  $p45 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 5338, 7} true;
  $p46 := $add($p45, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5338, 7} true;
  $p47 := $trunc($p46, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5338, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5339, 7} true;
  $p48 := $add($p14, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5339, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5341, 5} true;
  $p13 := $p47;
  $p14 := $p48;
  goto $bb6;
}
procedure PptDetermineFifoWidth(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5408, 46} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5417, 3} true;
  $p := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5417, 3} true;
  $p1 := $pa($pa($p, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5418, 3} true;
  $p2 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5418, 3} true;
  $p3 := $pa($pa($p2, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5418, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 5418, 3} true;
  $p5 := $pa($p4, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5418, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5419, 3} true;
  call WRITE_PORT_UCHAR($p5, 244);
  assume {:sourceloc "parport_true.i.cil.c", 5420, 14} true;
  $p6 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5420, 14} true;
  $p7 := $pa($pa($p6, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5420, 14} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 5420, 14} true;
  call $p9 := READ_PORT_UCHAR($p8);
  assume {:sourceloc "parport_true.i.cil.c", 5420, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5421, 3} true;
  $p10 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 5421, 3} true;
  $p11 := $and($p10, 112);
  assume {:sourceloc "parport_true.i.cil.c", 5421, 3} true;
  $p12 := $ashr($p11, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5421, 3} true;
  $p13 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5421, 3} true;
  $p14 := $pa($pa($p13, 0, 80), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5421, 3} true;
  $M.0[$p14] := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 5422, 3} true;
  call WRITE_PORT_UCHAR($p5, 20);
  assume {:sourceloc "parport_true.i.cil.c", 5426, 1} true;
  return;
}
procedure PptDisconnectInterrupt(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8635, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8640, 3} true;
  $p := $pa($pa(Extension, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8640, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8640, 3} true;
  call IoDisconnectInterrupt($p1);
  assume {:sourceloc "parport_true.i.cil.c", 8644, 1} true;
  return;
}
procedure PptDispatchCleanup(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(1, 1));
  assume {:sourceloc "parport_true.i.cil.c", 2326, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2326, 64} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2328, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2331, 3} true;
  $p1 := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2331, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 2331, 3} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 2331, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2334, 3} true;
  $p4 := $pa($pa($p3, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2334, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 2334, 3} true;
  $p6 := $and($p5, 4096);
  assume {:sourceloc "parport_true.i.cil.c", 2334, 3} true;
  $b := ($p6 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2334, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2335, 5} true;
  goto $bb6;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2334, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2334, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2340, 3} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 2342, 3} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2345, 3} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 2346, 3} true;
  $p7 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2346, 3} true;
  $p8 := $pa($pa($p7, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2346, 3} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 2346, 3} true;
  $M.0[$p9] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 2347, 3} true;
  $p10 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2347, 3} true;
  $p11 := $pa($pa($p10, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2347, 3} true;
  $M.0[$p11] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 2348, 3} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 2350, 3} true;
  $r := 0;
  return;
}
procedure PptDispatchClose(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b17: bool;
  var $b27: bool;
  var $b9: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 3792, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3792, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3798, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3798, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 3798, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 3798, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3799, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3799, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 3799, 3} true;
  $p5 := $and($p4, 4096);
  assume {:sourceloc "parport_true.i.cil.c", 3799, 3} true;
  $b := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3799, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 3801, 5} true;
  $p30 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3801, 5} true;
  $p31 := $pa($pa($p30, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3801, 5} true;
  $p32 := $p31;
  assume {:sourceloc "parport_true.i.cil.c", 3801, 5} true;
  $M.0[$p32] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3802, 5} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3803, 5} true;
  $p33 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3803, 5} true;
  $p34 := $pa($pa($p33, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3803, 5} true;
  $M.0[$p34] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3804, 5} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3806, 5} true;
  goto $bb10;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 3799, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 3799, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 3811, 12} true;
  $p6 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3811, 12} true;
  $p7 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 3811, 12} true;
  call $p8 := PptAcquireRemoveLock($p6, $p7);
  assume {:sourceloc "parport_true.i.cil.c", 3811, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3813, 3} true;
  $b9 := $sge($p8, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3813, 3} true;
  goto $bb8, $bb9;
$bb6:
  goto $bb11;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 3815, 5} true;
  $p10 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3815, 5} true;
  $p11 := $pa($pa($p10, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3815, 5} true;
  $p12 := $p11;
  assume {:sourceloc "parport_true.i.cil.c", 3815, 5} true;
  $M.0[$p12] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3816, 5} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3817, 5} true;
  $p13 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3817, 5} true;
  $p14 := $pa($pa($p13, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3817, 5} true;
  $M.0[$p14] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3818, 5} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3820, 5} true;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 3813, 3} true;
  assume $b9;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 3813, 3} true;
  assume !($b9);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 3859, 1} true;
  $r := 0;
  return;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 3827, 3} true;
  $p15 := $pa($pa($p2, 0, 448), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3827, 3} true;
  $p16 := $M.0[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 3827, 3} true;
  $b17 := $sgt($p16, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3827, 3} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 3829, 11} true;
  $p25 := $pa($pa($p2, 0, 448), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3829, 11} true;
  call $p26 := InterlockedDecrement($p25);
  assume {:sourceloc "parport_true.i.cil.c", 3829, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3831, 5} true;
  $b27 := $slt($p26, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3831, 5} true;
  goto $bb19, $bb20;
$bb13:
  goto $bb16;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 3827, 3} true;
  assume $b17;
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 3827, 3} true;
  assume !($b17);
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 3851, 3} true;
  $p18 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3851, 3} true;
  $p19 := $pa($pa($p18, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3851, 3} true;
  $p20 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 3851, 3} true;
  $M.0[$p20] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3852, 3} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3853, 3} true;
  $p21 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3853, 3} true;
  $p22 := $pa($pa($p21, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3853, 3} true;
  $M.0[$p22] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3854, 3} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3855, 3} true;
  $p23 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3855, 3} true;
  $p24 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 3855, 3} true;
  call PptReleaseRemoveLock($p23, $p24);
  assume {:sourceloc "parport_true.i.cil.c", 3857, 3} true;
  goto $bb10;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 3833, 7} true;
  $p28 := $pa($pa($p2, 0, 448), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3833, 7} true;
  call $p29 := InterlockedIncrement($p28);
  assume {:sourceloc "parport_true.i.cil.c", 3835, 5} true;
  goto $bb21;
$bb18:
  goto $bb21;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 3831, 5} true;
  assume $b27;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 3831, 5} true;
  assume !($b27);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 3843, 3} true;
  goto $bb16;
}
procedure PptDispatchCreate(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b7: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 3747, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3747, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3753, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3753, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 3753, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 3753, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3754, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3755, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3755, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 3755, 3} true;
  $p5 := $and($p4, 4096);
  assume {:sourceloc "parport_true.i.cil.c", 3755, 3} true;
  $b := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3755, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 3759, 11} true;
  call $p18 := PptFailRequest(Irp, -1073741738);
  assume {:sourceloc "parport_true.i.cil.c", 3759, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3761, 5} true;
  $p8 := $p18;
  goto $bb10;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 3755, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 3755, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 3766, 12} true;
  call $p6 := PptAcquireRemoveLockOrFailIrp(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 3766, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3768, 3} true;
  $b7 := $sge($p6, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3768, 3} true;
  goto $bb8, $bb9;
$bb6:
  goto $bb11;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 3771, 5} true;
  $p8 := $p6;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 3768, 3} true;
  assume $b7;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 3768, 3} true;
  assume !($b7);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 3791, 1} true;
  $r := $p8;
  return;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 3777, 3} true;
  $p9 := $pa($pa($p2, 0, 448), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3777, 3} true;
  call $p10 := InterlockedIncrement($p9);
  assume {:sourceloc "parport_true.i.cil.c", 3783, 3} true;
  $p11 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3783, 3} true;
  $p12 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 3783, 3} true;
  call PptReleaseRemoveLock($p11, $p12);
  assume {:sourceloc "parport_true.i.cil.c", 3784, 3} true;
  $p13 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3784, 3} true;
  $p14 := $pa($pa($p13, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3784, 3} true;
  $p15 := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 3784, 3} true;
  $M.0[$p15] := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 3785, 3} true;
  $M.24[myStatus] := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 3786, 3} true;
  $p16 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3786, 3} true;
  $p17 := $pa($pa($p16, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3786, 3} true;
  $M.0[$p17] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3787, 3} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3789, 3} true;
  $p8 := $p6;
  goto $bb10;
}
procedure PptDispatchInternalDeviceControl(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b101: bool;
  var $b111: bool;
  var $b12: bool;
  var $b122: bool;
  var $b125: bool;
  var $b131: bool;
  var $b136: bool;
  var $b14: bool;
  var $b186: bool;
  var $b199: bool;
  var $b212: bool;
  var $b219: bool;
  var $b222: bool;
  var $b230: bool;
  var $b238: bool;
  var $b240: bool;
  var $b245: bool;
  var $b250: bool;
  var $b261: bool;
  var $b263: bool;
  var $b265: bool;
  var $b271: bool;
  var $b28: bool;
  var $b312: bool;
  var $b33: bool;
  var $b343: bool;
  var $b358: bool;
  var $b371: bool;
  var $b376: bool;
  var $b38: bool;
  var $b381: bool;
  var $b390: bool;
  var $b43: bool;
  var $b446: bool;
  var $b462: bool;
  var $b48: bool;
  var $b53: bool;
  var $b58: bool;
  var $b63: bool;
  var $b68: bool;
  var $b73: bool;
  var $b78: bool;
  var $b83: bool;
  var $b88: bool;
  var $b93: bool;
  var $b98: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p100: int;
  var $p102: int;
  var $p103: int;
  var $p104: int;
  var $p105: int;
  var $p106: int;
  var $p107: int;
  var $p108: int;
  var $p109: int;
  var $p11: int;
  var $p110: int;
  var $p112: int;
  var $p113: int;
  var $p114: int;
  var $p115: int;
  var $p116: int;
  var $p117: int;
  var $p118: int;
  var $p119: int;
  var $p120: int;
  var $p121: int;
  var $p123: int;
  var $p124: int;
  var $p126: int;
  var $p127: int;
  var $p128: int;
  var $p129: int;
  var $p13: int;
  var $p130: int;
  var $p132: int;
  var $p133: int;
  var $p134: int;
  var $p135: int;
  var $p137: int;
  var $p138: int;
  var $p139: int;
  var $p140: int;
  var $p141: int;
  var $p142: int;
  var $p143: int;
  var $p144: int;
  var $p145: int;
  var $p146: int;
  var $p147: int;
  var $p148: int;
  var $p149: int;
  var $p15: int;
  var $p150: int;
  var $p151: int;
  var $p152: int;
  var $p153: int;
  var $p154: int;
  var $p155: int;
  var $p156: int;
  var $p157: int;
  var $p158: int;
  var $p159: int;
  var $p16: int;
  var $p160: int;
  var $p161: int;
  var $p162: int;
  var $p163: int;
  var $p164: int;
  var $p165: int;
  var $p166: int;
  var $p167: int;
  var $p168: int;
  var $p169: int;
  var $p17: int;
  var $p170: int;
  var $p171: int;
  var $p172: int;
  var $p173: int;
  var $p174: int;
  var $p175: int;
  var $p176: int;
  var $p177: int;
  var $p178: int;
  var $p179: int;
  var $p18: int;
  var $p180: int;
  var $p181: int;
  var $p182: int;
  var $p183: int;
  var $p184: int;
  var $p185: int;
  var $p187: int;
  var $p188: int;
  var $p189: int;
  var $p19: int;
  var $p190: int;
  var $p191: int;
  var $p192: int;
  var $p193: int;
  var $p194: int;
  var $p195: int;
  var $p196: int;
  var $p197: int;
  var $p198: int;
  var $p2: int;
  var $p20: int;
  var $p200: int;
  var $p201: int;
  var $p202: int;
  var $p203: int;
  var $p204: int;
  var $p205: int;
  var $p206: int;
  var $p207: int;
  var $p208: int;
  var $p209: int;
  var $p21: int;
  var $p210: int;
  var $p211: int;
  var $p213: int;
  var $p214: int;
  var $p215: int;
  var $p216: int;
  var $p217: int;
  var $p218: int;
  var $p22: int;
  var $p220: int;
  var $p221: int;
  var $p223: int;
  var $p224: int;
  var $p225: int;
  var $p226: int;
  var $p227: int;
  var $p228: int;
  var $p229: int;
  var $p23: int;
  var $p231: int;
  var $p232: int;
  var $p233: int;
  var $p234: int;
  var $p235: int;
  var $p236: int;
  var $p237: int;
  var $p239: int;
  var $p24: int;
  var $p241: int;
  var $p242: int;
  var $p243: int;
  var $p244: int;
  var $p246: int;
  var $p247: int;
  var $p248: int;
  var $p249: int;
  var $p25: int;
  var $p251: int;
  var $p252: int;
  var $p253: int;
  var $p254: int;
  var $p255: int;
  var $p256: int;
  var $p257: int;
  var $p258: int;
  var $p259: int;
  var $p26: int;
  var $p260: int;
  var $p262: int;
  var $p264: int;
  var $p266: int;
  var $p267: int;
  var $p268: int;
  var $p269: int;
  var $p27: int;
  var $p270: int;
  var $p272: int;
  var $p273: int;
  var $p274: int;
  var $p275: int;
  var $p276: int;
  var $p277: int;
  var $p278: int;
  var $p279: int;
  var $p280: int;
  var $p281: int;
  var $p282: int;
  var $p283: int;
  var $p284: int;
  var $p285: int;
  var $p286: int;
  var $p287: int;
  var $p288: int;
  var $p289: int;
  var $p29: int;
  var $p290: int;
  var $p291: int;
  var $p292: int;
  var $p293: int;
  var $p294: int;
  var $p295: int;
  var $p296: int;
  var $p297: int;
  var $p298: int;
  var $p299: int;
  var $p3: int;
  var $p30: int;
  var $p300: int;
  var $p301: int;
  var $p302: int;
  var $p303: int;
  var $p304: int;
  var $p305: int;
  var $p306: int;
  var $p307: int;
  var $p308: int;
  var $p309: int;
  var $p31: int;
  var $p310: int;
  var $p311: int;
  var $p313: int;
  var $p314: int;
  var $p315: int;
  var $p316: int;
  var $p317: int;
  var $p318: int;
  var $p319: int;
  var $p32: int;
  var $p320: int;
  var $p321: int;
  var $p322: int;
  var $p323: int;
  var $p324: int;
  var $p325: int;
  var $p326: int;
  var $p327: int;
  var $p328: int;
  var $p329: int;
  var $p330: int;
  var $p331: int;
  var $p332: int;
  var $p333: int;
  var $p334: int;
  var $p335: int;
  var $p336: int;
  var $p337: int;
  var $p338: int;
  var $p339: int;
  var $p34: int;
  var $p340: int;
  var $p341: int;
  var $p342: int;
  var $p344: int;
  var $p345: int;
  var $p346: int;
  var $p347: int;
  var $p348: int;
  var $p349: int;
  var $p35: int;
  var $p350: int;
  var $p351: int;
  var $p352: int;
  var $p353: int;
  var $p354: int;
  var $p355: int;
  var $p356: int;
  var $p357: int;
  var $p359: int;
  var $p36: int;
  var $p360: int;
  var $p361: int;
  var $p362: int;
  var $p363: int;
  var $p364: int;
  var $p365: int;
  var $p366: int;
  var $p367: int;
  var $p368: int;
  var $p369: int;
  var $p37: int;
  var $p370: int;
  var $p372: int;
  var $p373: int;
  var $p374: int;
  var $p375: int;
  var $p377: int;
  var $p378: int;
  var $p379: int;
  var $p380: int;
  var $p382: int;
  var $p383: int;
  var $p384: int;
  var $p385: int;
  var $p386: int;
  var $p387: int;
  var $p388: int;
  var $p389: int;
  var $p39: int;
  var $p391: int;
  var $p392: int;
  var $p393: int;
  var $p394: int;
  var $p395: int;
  var $p396: int;
  var $p397: int;
  var $p398: int;
  var $p399: int;
  var $p4: int;
  var $p40: int;
  var $p400: int;
  var $p401: int;
  var $p402: int;
  var $p403: int;
  var $p404: int;
  var $p405: int;
  var $p406: int;
  var $p407: int;
  var $p408: int;
  var $p409: int;
  var $p41: int;
  var $p410: int;
  var $p411: int;
  var $p412: int;
  var $p413: int;
  var $p414: int;
  var $p415: int;
  var $p416: int;
  var $p417: int;
  var $p418: int;
  var $p419: int;
  var $p42: int;
  var $p420: int;
  var $p421: int;
  var $p422: int;
  var $p423: int;
  var $p424: int;
  var $p425: int;
  var $p426: int;
  var $p427: int;
  var $p428: int;
  var $p429: int;
  var $p430: int;
  var $p431: int;
  var $p432: int;
  var $p433: int;
  var $p434: int;
  var $p435: int;
  var $p436: int;
  var $p437: int;
  var $p438: int;
  var $p439: int;
  var $p44: int;
  var $p440: int;
  var $p441: int;
  var $p442: int;
  var $p443: int;
  var $p444: int;
  var $p445: int;
  var $p447: int;
  var $p448: int;
  var $p449: int;
  var $p45: int;
  var $p450: int;
  var $p451: int;
  var $p452: int;
  var $p453: int;
  var $p454: int;
  var $p455: int;
  var $p456: int;
  var $p457: int;
  var $p458: int;
  var $p459: int;
  var $p46: int;
  var $p460: int;
  var $p461: int;
  var $p463: int;
  var $p464: int;
  var $p465: int;
  var $p466: int;
  var $p467: int;
  var $p468: int;
  var $p469: int;
  var $p47: int;
  var $p470: int;
  var $p471: int;
  var $p472: int;
  var $p473: int;
  var $p474: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p89: int;
  var $p9: int;
  var $p90: int;
  var $p91: int;
  var $p92: int;
  var $p94: int;
  var $p95: int;
  var $p96: int;
  var $p97: int;
  var $p99: int;
$bb0:
  call $p := $alloca($mul(1, 1));
  call $p1 := $alloca($mul(8, 1));
  call $p2 := $alloca($mul(8, 1));
  call $p3 := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 3100, 58} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3100, 78} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3107, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3108, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3112, 29} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3113, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3127, 3} true;
  $p4 := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3127, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 3127, 3} true;
  $p6 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 3127, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3130, 3} true;
  $p7 := $pa($pa(Irp, 0, 112), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3130, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 3130, 3} true;
  $b := ($p8 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3130, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 3132, 3} true;
  goto $bb5;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 3130, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 3130, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 3135, 3} true;
  $p9 := $pa($pa($p6, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3135, 3} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 3135, 3} true;
  $p11 := $and($p10, 4096);
  assume {:sourceloc "parport_true.i.cil.c", 3135, 3} true;
  $b12 := ($p11 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3135, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 3139, 11} true;
  call $p474 := PptFailRequest(Irp, -1073741738);
  assume {:sourceloc "parport_true.i.cil.c", 3139, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3141, 5} true;
  $p15 := $p474;
  goto $bb15;
$bb7:
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 3135, 3} true;
  assume $b12;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 3135, 3} true;
  assume !($b12);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 3146, 12} true;
  call $p13 := PptAcquireRemoveLockOrFailIrp(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 3146, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3148, 3} true;
  $b14 := $sge($p13, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3148, 3} true;
  goto $bb13, $bb14;
$bb11:
  goto $bb16;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 3151, 5} true;
  $p15 := $p13;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 3148, 3} true;
  assume $b14;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 3148, 3} true;
  assume !($b14);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 3620, 1} true;
  $r := $p15;
  return;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 3155, 3} true;
  $p16 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3155, 3} true;
  $p17 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 3155, 3} true;
  $p18 := $pa($pa($p17, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3155, 3} true;
  $p19 := $pa($pa($p18, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3155, 3} true;
  $p20 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 3155, 3} true;
  $p21 := $M.0[$p20];
  assume {:sourceloc "parport_true.i.cil.c", 3155, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3156, 3} true;
  $p22 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3156, 3} true;
  $p23 := $pa($pa($p22, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3156, 3} true;
  $M.0[$p23] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3157, 3} true;
  $p24 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3157, 3} true;
  $p25 := $p24;
  assume {:sourceloc "parport_true.i.cil.c", 3157, 3} true;
  $p26 := $pa($pa($p25, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3157, 3} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 3157, 3} true;
  $b28 := ($p27 == 1441992);
  assume {:sourceloc "parport_true.i.cil.c", 3157, 3} true;
  goto $bb19, $bb20;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 3158, 5} true;
  goto $bb250;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 3160, 5} true;
  $p29 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3160, 5} true;
  $p30 := $p29;
  assume {:sourceloc "parport_true.i.cil.c", 3160, 5} true;
  $p31 := $pa($pa($p30, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3160, 5} true;
  $p32 := $M.0[$p31];
  assume {:sourceloc "parport_true.i.cil.c", 3160, 5} true;
  $b33 := ($p32 == 1441996);
  assume {:sourceloc "parport_true.i.cil.c", 3160, 5} true;
  goto $bb23, $bb24;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 3157, 3} true;
  assume $b28;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 3157, 3} true;
  assume !($b28);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 3161, 7} true;
  goto $bb244;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 3163, 7} true;
  $p34 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3163, 7} true;
  $p35 := $p34;
  assume {:sourceloc "parport_true.i.cil.c", 3163, 7} true;
  $p36 := $pa($pa($p35, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3163, 7} true;
  $p37 := $M.0[$p36];
  assume {:sourceloc "parport_true.i.cil.c", 3163, 7} true;
  $b38 := ($p37 == 1441952);
  assume {:sourceloc "parport_true.i.cil.c", 3163, 7} true;
  goto $bb27, $bb28;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 3160, 5} true;
  assume $b33;
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 3160, 5} true;
  assume !($b33);
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 3164, 9} true;
  goto $bb243;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 3166, 9} true;
  $p39 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3166, 9} true;
  $p40 := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 3166, 9} true;
  $p41 := $pa($pa($p40, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3166, 9} true;
  $p42 := $M.0[$p41];
  assume {:sourceloc "parport_true.i.cil.c", 3166, 9} true;
  $b43 := ($p42 == 1441836);
  assume {:sourceloc "parport_true.i.cil.c", 3166, 9} true;
  goto $bb31, $bb32;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 3163, 7} true;
  assume $b38;
  goto $bb25;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 3163, 7} true;
  assume !($b38);
  goto $bb26;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 3167, 11} true;
  goto $bb222;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 3169, 11} true;
  $p44 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3169, 11} true;
  $p45 := $p44;
  assume {:sourceloc "parport_true.i.cil.c", 3169, 11} true;
  $p46 := $pa($pa($p45, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3169, 11} true;
  $p47 := $M.0[$p46];
  assume {:sourceloc "parport_true.i.cil.c", 3169, 11} true;
  $b48 := ($p47 == 1441840);
  assume {:sourceloc "parport_true.i.cil.c", 3169, 11} true;
  goto $bb35, $bb36;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 3166, 9} true;
  assume $b43;
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 3166, 9} true;
  assume !($b43);
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 3170, 13} true;
  goto $bb216;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 3172, 13} true;
  $p49 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3172, 13} true;
  $p50 := $p49;
  assume {:sourceloc "parport_true.i.cil.c", 3172, 13} true;
  $p51 := $pa($pa($p50, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3172, 13} true;
  $p52 := $M.0[$p51];
  assume {:sourceloc "parport_true.i.cil.c", 3172, 13} true;
  $b53 := ($p52 == 1441852);
  assume {:sourceloc "parport_true.i.cil.c", 3172, 13} true;
  goto $bb39, $bb40;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 3169, 11} true;
  assume $b48;
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 3169, 11} true;
  assume !($b48);
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 3173, 15} true;
  goto $bb215;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 3175, 15} true;
  $p54 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3175, 15} true;
  $p55 := $p54;
  assume {:sourceloc "parport_true.i.cil.c", 3175, 15} true;
  $p56 := $pa($pa($p55, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3175, 15} true;
  $p57 := $M.0[$p56];
  assume {:sourceloc "parport_true.i.cil.c", 3175, 15} true;
  $b58 := ($p57 == 1441876);
  assume {:sourceloc "parport_true.i.cil.c", 3175, 15} true;
  goto $bb43, $bb44;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 3172, 13} true;
  assume $b53;
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 3172, 13} true;
  assume !($b53);
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 3176, 17} true;
  goto $bb209;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 3178, 17} true;
  $p59 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3178, 17} true;
  $p60 := $p59;
  assume {:sourceloc "parport_true.i.cil.c", 3178, 17} true;
  $p61 := $pa($pa($p60, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3178, 17} true;
  $p62 := $M.0[$p61];
  assume {:sourceloc "parport_true.i.cil.c", 3178, 17} true;
  $b63 := ($p62 == 1441860);
  assume {:sourceloc "parport_true.i.cil.c", 3178, 17} true;
  goto $bb47, $bb48;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 3175, 15} true;
  assume $b58;
  goto $bb41;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 3175, 15} true;
  assume !($b58);
  goto $bb42;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 3179, 19} true;
  goto $bb203;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 3181, 19} true;
  $p64 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3181, 19} true;
  $p65 := $p64;
  assume {:sourceloc "parport_true.i.cil.c", 3181, 19} true;
  $p66 := $pa($pa($p65, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3181, 19} true;
  $p67 := $M.0[$p66];
  assume {:sourceloc "parport_true.i.cil.c", 3181, 19} true;
  $b68 := ($p67 == 1441844);
  assume {:sourceloc "parport_true.i.cil.c", 3181, 19} true;
  goto $bb51, $bb52;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 3178, 17} true;
  assume $b63;
  goto $bb45;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 3178, 17} true;
  assume !($b63);
  goto $bb46;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 3182, 21} true;
  goto $bb167;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 3184, 21} true;
  $p69 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3184, 21} true;
  $p70 := $p69;
  assume {:sourceloc "parport_true.i.cil.c", 3184, 21} true;
  $p71 := $pa($pa($p70, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3184, 21} true;
  $p72 := $M.0[$p71];
  assume {:sourceloc "parport_true.i.cil.c", 3184, 21} true;
  $b73 := ($p72 == 1441848);
  assume {:sourceloc "parport_true.i.cil.c", 3184, 21} true;
  goto $bb55, $bb56;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 3181, 19} true;
  assume $b68;
  goto $bb49;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 3181, 19} true;
  assume !($b68);
  goto $bb50;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 3185, 23} true;
  goto $bb141;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 3187, 23} true;
  $p74 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3187, 23} true;
  $p75 := $p74;
  assume {:sourceloc "parport_true.i.cil.c", 3187, 23} true;
  $p76 := $pa($pa($p75, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3187, 23} true;
  $p77 := $M.0[$p76];
  assume {:sourceloc "parport_true.i.cil.c", 3187, 23} true;
  $b78 := ($p77 == 1441868);
  assume {:sourceloc "parport_true.i.cil.c", 3187, 23} true;
  goto $bb59, $bb60;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 3184, 21} true;
  assume $b73;
  goto $bb53;
$bb56:
  assume {:sourceloc "parport_true.i.cil.c", 3184, 21} true;
  assume !($b73);
  goto $bb54;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 3188, 25} true;
  goto $bb135;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 3190, 25} true;
  $p79 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3190, 25} true;
  $p80 := $p79;
  assume {:sourceloc "parport_true.i.cil.c", 3190, 25} true;
  $p81 := $pa($pa($p80, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3190, 25} true;
  $p82 := $M.0[$p81];
  assume {:sourceloc "parport_true.i.cil.c", 3190, 25} true;
  $b83 := ($p82 == 1441872);
  assume {:sourceloc "parport_true.i.cil.c", 3190, 25} true;
  goto $bb63, $bb64;
$bb59:
  assume {:sourceloc "parport_true.i.cil.c", 3187, 23} true;
  assume $b78;
  goto $bb57;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 3187, 23} true;
  assume !($b78);
  goto $bb58;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 3191, 27} true;
  goto $bb129;
$bb62:
  assume {:sourceloc "parport_true.i.cil.c", 3193, 27} true;
  $p84 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3193, 27} true;
  $p85 := $p84;
  assume {:sourceloc "parport_true.i.cil.c", 3193, 27} true;
  $p86 := $pa($pa($p85, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3193, 27} true;
  $p87 := $M.0[$p86];
  assume {:sourceloc "parport_true.i.cil.c", 3193, 27} true;
  $b88 := ($p87 == 1441880);
  assume {:sourceloc "parport_true.i.cil.c", 3193, 27} true;
  goto $bb67, $bb68;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 3190, 25} true;
  assume $b83;
  goto $bb61;
$bb64:
  assume {:sourceloc "parport_true.i.cil.c", 3190, 25} true;
  assume !($b83);
  goto $bb62;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 3194, 29} true;
  goto $bb128;
$bb66:
  assume {:sourceloc "parport_true.i.cil.c", 3196, 29} true;
  $p89 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3196, 29} true;
  $p90 := $p89;
  assume {:sourceloc "parport_true.i.cil.c", 3196, 29} true;
  $p91 := $pa($pa($p90, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3196, 29} true;
  $p92 := $M.0[$p91];
  assume {:sourceloc "parport_true.i.cil.c", 3196, 29} true;
  $b93 := ($p92 == 1441884);
  assume {:sourceloc "parport_true.i.cil.c", 3196, 29} true;
  goto $bb71, $bb72;
$bb67:
  assume {:sourceloc "parport_true.i.cil.c", 3193, 27} true;
  assume $b88;
  goto $bb65;
$bb68:
  assume {:sourceloc "parport_true.i.cil.c", 3193, 27} true;
  assume !($b88);
  goto $bb66;
$bb69:
  assume {:sourceloc "parport_true.i.cil.c", 3197, 31} true;
  goto $bb107;
$bb70:
  assume {:sourceloc "parport_true.i.cil.c", 3199, 31} true;
  $p94 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3199, 31} true;
  $p95 := $p94;
  assume {:sourceloc "parport_true.i.cil.c", 3199, 31} true;
  $p96 := $pa($pa($p95, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3199, 31} true;
  $p97 := $M.0[$p96];
  assume {:sourceloc "parport_true.i.cil.c", 3199, 31} true;
  $b98 := ($p97 == 1441888);
  assume {:sourceloc "parport_true.i.cil.c", 3199, 31} true;
  goto $bb75, $bb76;
$bb71:
  assume {:sourceloc "parport_true.i.cil.c", 3196, 29} true;
  assume $b93;
  goto $bb69;
$bb72:
  assume {:sourceloc "parport_true.i.cil.c", 3196, 29} true;
  assume !($b93);
  goto $bb70;
$bb73:
  assume {:sourceloc "parport_true.i.cil.c", 3200, 33} true;
  goto $bb101;
$bb74:
  assume {:sourceloc "parport_true.i.cil.c", 3203, 33} true;
  goto $bb77;
$bb75:
  assume {:sourceloc "parport_true.i.cil.c", 3199, 31} true;
  assume $b98;
  goto $bb73;
$bb76:
  assume {:sourceloc "parport_true.i.cil.c", 3199, 31} true;
  assume !($b98);
  goto $bb74;
$bb77:
  assume {:sourceloc "parport_true.i.cil.c", 3586, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3587, 35} true;
  $p99 := -1073741811;
  goto $bb78;
$bb78:
  goto $bb79;
$bb79:
  goto $bb80;
$bb80:
  goto $bb81;
$bb81:
  goto $bb82;
$bb82:
  goto $bb83;
$bb83:
  goto $bb84;
$bb84:
  goto $bb85;
$bb85:
  goto $bb86;
$bb86:
  goto $bb87;
$bb87:
  goto $bb88;
$bb88:
  goto $bb89;
$bb89:
  goto $bb90;
$bb90:
  goto $bb91;
$bb91:
  goto $bb92;
$bb92:
  goto $bb93;
$bb93:
  goto $bb94;
$bb94:
  assume {:sourceloc "parport_true.i.cil.c", 3606, 3} true;
  $p100 := $p99;
  goto $bb95;
$bb95:
  assume {:sourceloc "parport_true.i.cil.c", 3608, 3} true;
  $b101 := ($p100 != 259);
  assume {:sourceloc "parport_true.i.cil.c", 3608, 3} true;
  goto $bb98, $bb99;
$bb96:
  assume {:sourceloc "parport_true.i.cil.c", 3610, 5} true;
  $p102 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3610, 5} true;
  $p103 := $pa($pa($p102, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3610, 5} true;
  $p104 := $p103;
  assume {:sourceloc "parport_true.i.cil.c", 3610, 5} true;
  $M.0[$p104] := $p100;
  assume {:sourceloc "parport_true.i.cil.c", 3611, 5} true;
  $M.24[myStatus] := $p100;
  assume {:sourceloc "parport_true.i.cil.c", 3612, 5} true;
  $p105 := $pa($pa($p6, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3612, 5} true;
  $p106 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 3612, 5} true;
  call PptReleaseRemoveLock($p105, $p106);
  assume {:sourceloc "parport_true.i.cil.c", 3613, 5} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3615, 3} true;
  goto $bb100;
$bb97:
  goto $bb100;
$bb98:
  assume {:sourceloc "parport_true.i.cil.c", 3608, 3} true;
  assume $b101;
  goto $bb96;
$bb99:
  assume {:sourceloc "parport_true.i.cil.c", 3608, 3} true;
  assume !($b101);
  goto $bb97;
$bb100:
  assume {:sourceloc "parport_true.i.cil.c", 3618, 3} true;
  $p15 := $p100;
  goto $bb15;
$bb101:
  assume {:sourceloc "parport_true.i.cil.c", 3573, 35} true;
  $p107 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3573, 35} true;
  $p108 := $p107;
  assume {:sourceloc "parport_true.i.cil.c", 3573, 35} true;
  $p109 := $pa($pa($p108, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3573, 35} true;
  $p110 := $M.0[$p109];
  assume {:sourceloc "parport_true.i.cil.c", 3573, 35} true;
  $b111 := $ult($p110, 8);
  assume {:sourceloc "parport_true.i.cil.c", 3573, 35} true;
  goto $bb104, $bb105;
$bb102:
  assume {:sourceloc "parport_true.i.cil.c", 3576, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3577, 35} true;
  $p117 := -1073741789;
  goto $bb106;
$bb103:
  assume {:sourceloc "parport_true.i.cil.c", 3579, 46} true;
  $p112 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 3579, 46} true;
  $p113 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3579, 46} true;
  $p114 := $p113;
  assume {:sourceloc "parport_true.i.cil.c", 3579, 46} true;
  $p115 := $M.0[$p114];
  assume {:sourceloc "parport_true.i.cil.c", 3579, 46} true;
  call $p116 := PptDeselectDevice($p112, $p115);
  assume {:sourceloc "parport_true.i.cil.c", 3579, 46} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p117 := $p116;
  goto $bb106;
$bb104:
  assume {:sourceloc "parport_true.i.cil.c", 3573, 35} true;
  assume $b111;
  goto $bb102;
$bb105:
  assume {:sourceloc "parport_true.i.cil.c", 3573, 35} true;
  assume !($b111);
  goto $bb103;
$bb106:
  assume {:sourceloc "parport_true.i.cil.c", 3582, 35} true;
  $p99 := $p117;
  goto $bb78;
$bb107:
  assume {:sourceloc "parport_true.i.cil.c", 3529, 35} true;
  $p118 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3529, 35} true;
  $p119 := $p118;
  assume {:sourceloc "parport_true.i.cil.c", 3529, 35} true;
  $p120 := $pa($pa($p119, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3529, 35} true;
  $p121 := $M.0[$p120];
  assume {:sourceloc "parport_true.i.cil.c", 3529, 35} true;
  $b122 := $ult($p121, 8);
  assume {:sourceloc "parport_true.i.cil.c", 3529, 35} true;
  goto $bb110, $bb111;
$bb108:
  assume {:sourceloc "parport_true.i.cil.c", 3532, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3533, 35} true;
  $p133 := -1073741789;
  goto $bb122;
$bb109:
  assume {:sourceloc "parport_true.i.cil.c", 3534, 37} true;
  $p123 := $pa($pa(Irp, 0, 112), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3534, 37} true;
  $p124 := $M.0[$p123];
  assume {:sourceloc "parport_true.i.cil.c", 3534, 37} true;
  $b125 := ($p124 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3534, 37} true;
  goto $bb114, $bb115;
$bb110:
  assume {:sourceloc "parport_true.i.cil.c", 3529, 35} true;
  assume $b122;
  goto $bb108;
$bb111:
  assume {:sourceloc "parport_true.i.cil.c", 3529, 35} true;
  assume !($b122);
  goto $bb109;
$bb112:
  assume {:sourceloc "parport_true.i.cil.c", 3535, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3536, 37} true;
  $p132 := -1073741536;
  goto $bb121;
$bb113:
  assume {:sourceloc "parport_true.i.cil.c", 3538, 48} true;
  $p126 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 3538, 48} true;
  $p127 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3538, 48} true;
  $p128 := $p127;
  assume {:sourceloc "parport_true.i.cil.c", 3538, 48} true;
  $p129 := $M.0[$p128];
  assume {:sourceloc "parport_true.i.cil.c", 3538, 48} true;
  call $p130 := PptTrySelectDevice($p126, $p129);
  assume {:sourceloc "parport_true.i.cil.c", 3538, 48} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3539, 39} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 3541, 39} true;
  $b131 := ($p130 == 259);
  assume {:sourceloc "parport_true.i.cil.c", 3541, 39} true;
  goto $bb118, $bb119;
$bb114:
  assume {:sourceloc "parport_true.i.cil.c", 3534, 37} true;
  assume $b125;
  goto $bb112;
$bb115:
  assume {:sourceloc "parport_true.i.cil.c", 3534, 37} true;
  assume !($b125);
  goto $bb113;
$bb116:
  assume {:sourceloc "parport_true.i.cil.c", 3543, 41} true;
  call $p134 := PptSetCancelRoutine(Irp, PptCancelRoutine);
  assume {:sourceloc "parport_true.i.cil.c", 3545, 41} true;
  $p135 := $M.27[pended];
  assume {:sourceloc "parport_true.i.cil.c", 3545, 41} true;
  $b136 := ($p135 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 3545, 41} true;
  goto $bb125, $bb126;
$bb117:
  goto $bb120;
$bb118:
  assume {:sourceloc "parport_true.i.cil.c", 3541, 39} true;
  assume $b131;
  goto $bb116;
$bb119:
  assume {:sourceloc "parport_true.i.cil.c", 3541, 39} true;
  assume !($b131);
  goto $bb117;
$bb120:
  $p132 := $p130;
  goto $bb121;
$bb121:
  $p133 := $p132;
  goto $bb122;
$bb122:
  assume {:sourceloc "parport_true.i.cil.c", 3569, 35} true;
  $p99 := $p133;
  goto $bb78;
$bb123:
  assume {:sourceloc "parport_true.i.cil.c", 3546, 43} true;
  $M.27[pended] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 3547, 41} true;
  goto $bb127;
$bb124:
  assume {:sourceloc "parport_true.i.cil.c", 3549, 43} true;
  call errorFn();
  goto $bb127;
$bb125:
  assume {:sourceloc "parport_true.i.cil.c", 3545, 41} true;
  assume $b136;
  goto $bb123;
$bb126:
  assume {:sourceloc "parport_true.i.cil.c", 3545, 41} true;
  assume !($b136);
  goto $bb124;
$bb127:
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p137 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p138 := $p137;
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p139 := $pa($pa($p138, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p140 := $pa($pa($p139, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p141 := $p140;
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p142 := $M.0[$p141];
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p143 := $pa($pa($p142, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p144 := $M.0[$p143];
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p145 := $p144;
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p146 := $or($p145, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p147 := $trunc($p146, 8);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p148 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p149 := $p148;
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p150 := $pa($pa($p149, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p151 := $pa($pa($p150, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p152 := $p151;
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p153 := $M.0[$p152];
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $p154 := $pa($pa($p153, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3552, 41} true;
  $M.0[$p154] := $p147;
  assume {:sourceloc "parport_true.i.cil.c", 3553, 41} true;
  $p155 := $pa($pa($p6, 0, 448), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3553, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3554, 41} true;
  $p156 := $pa($pa($p155, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3554, 41} true;
  $p157 := $M.0[$p156];
  assume {:sourceloc "parport_true.i.cil.c", 3554, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3555, 41} true;
  $p158 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3555, 41} true;
  $p159 := $p158;
  assume {:sourceloc "parport_true.i.cil.c", 3555, 41} true;
  $p160 := $pa($pa($p159, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3555, 41} true;
  $p161 := $pa($pa($p160, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3555, 41} true;
  $p162 := $pa($pa($p161, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3555, 41} true;
  $M.0[$p162] := $p155;
  assume {:sourceloc "parport_true.i.cil.c", 3556, 41} true;
  $p163 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3556, 41} true;
  $p164 := $p163;
  assume {:sourceloc "parport_true.i.cil.c", 3556, 41} true;
  $p165 := $pa($pa($p164, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3556, 41} true;
  $p166 := $pa($pa($p165, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3556, 41} true;
  $p167 := $pa($pa($p166, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3556, 41} true;
  $M.0[$p167] := $p157;
  assume {:sourceloc "parport_true.i.cil.c", 3557, 41} true;
  $p168 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3557, 41} true;
  $p169 := $p168;
  assume {:sourceloc "parport_true.i.cil.c", 3557, 41} true;
  $p170 := $pa($pa($p169, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3557, 41} true;
  $p171 := $pa($pa($p170, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3557, 41} true;
  $p172 := $pa($pa($p157, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3557, 41} true;
  $M.0[$p172] := $p171;
  assume {:sourceloc "parport_true.i.cil.c", 3558, 41} true;
  $p173 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3558, 41} true;
  $p174 := $p173;
  assume {:sourceloc "parport_true.i.cil.c", 3558, 41} true;
  $p175 := $pa($pa($p174, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3558, 41} true;
  $p176 := $pa($pa($p175, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3558, 41} true;
  $p177 := $pa($pa($p155, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3558, 41} true;
  $M.0[$p177] := $p176;
  assume {:sourceloc "parport_true.i.cil.c", 3561, 39} true;
  goto $bb120;
$bb128:
  assume {:sourceloc "parport_true.i.cil.c", 3522, 78} true;
  $p178 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 3522, 78} true;
  call $p179 := PptInitiate1284_3($p178);
  assume {:sourceloc "parport_true.i.cil.c", 3522, 78} true;
  $p180 := $pa($pa($p6, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3522, 78} true;
  $p181 := $pa($pa($p180, 0, 80), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3522, 78} true;
  $M.0[$p181] := $p179;
  assume {:sourceloc "parport_true.i.cil.c", 3523, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3525, 35} true;
  $p99 := 0;
  goto $bb78;
$bb129:
  assume {:sourceloc "parport_true.i.cil.c", 3508, 35} true;
  $p182 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3508, 35} true;
  $p183 := $p182;
  assume {:sourceloc "parport_true.i.cil.c", 3508, 35} true;
  $p184 := $pa($pa($p183, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3508, 35} true;
  $p185 := $M.0[$p184];
  assume {:sourceloc "parport_true.i.cil.c", 3508, 35} true;
  $b186 := $ult($p185, 2);
  assume {:sourceloc "parport_true.i.cil.c", 3508, 35} true;
  goto $bb132, $bb133;
$bb130:
  assume {:sourceloc "parport_true.i.cil.c", 3509, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3510, 35} true;
  $p194 := -1073741789;
  goto $bb134;
$bb131:
  assume {:sourceloc "parport_true.i.cil.c", 3514, 46} true;
  $p187 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3514, 46} true;
  $p188 := $p187;
  assume {:sourceloc "parport_true.i.cil.c", 3514, 46} true;
  $p189 := $M.0[$p188];
  assume {:sourceloc "parport_true.i.cil.c", 3514, 46} true;
  $p190 := $p189;
  assume {:sourceloc "parport_true.i.cil.c", 3514, 46} true;
  $p191 := $pa($pa($p190, 0, 2), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3514, 46} true;
  $p192 := $M.0[$p191];
  assume {:sourceloc "parport_true.i.cil.c", 3514, 46} true;
  call $p193 := PptClearChipMode($p6, $p192);
  assume {:sourceloc "parport_true.i.cil.c", 3514, 46} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p194 := $p193;
  goto $bb134;
$bb132:
  assume {:sourceloc "parport_true.i.cil.c", 3508, 35} true;
  assume $b186;
  goto $bb130;
$bb133:
  assume {:sourceloc "parport_true.i.cil.c", 3508, 35} true;
  assume !($b186);
  goto $bb131;
$bb134:
  assume {:sourceloc "parport_true.i.cil.c", 3517, 35} true;
  $p99 := $p194;
  goto $bb78;
$bb135:
  assume {:sourceloc "parport_true.i.cil.c", 3495, 35} true;
  $p195 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3495, 35} true;
  $p196 := $p195;
  assume {:sourceloc "parport_true.i.cil.c", 3495, 35} true;
  $p197 := $pa($pa($p196, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3495, 35} true;
  $p198 := $M.0[$p197];
  assume {:sourceloc "parport_true.i.cil.c", 3495, 35} true;
  $b199 := $ult($p198, 2);
  assume {:sourceloc "parport_true.i.cil.c", 3495, 35} true;
  goto $bb138, $bb139;
$bb136:
  assume {:sourceloc "parport_true.i.cil.c", 3496, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3497, 35} true;
  $p207 := -1073741789;
  goto $bb140;
$bb137:
  assume {:sourceloc "parport_true.i.cil.c", 3501, 46} true;
  $p200 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3501, 46} true;
  $p201 := $p200;
  assume {:sourceloc "parport_true.i.cil.c", 3501, 46} true;
  $p202 := $M.0[$p201];
  assume {:sourceloc "parport_true.i.cil.c", 3501, 46} true;
  $p203 := $p202;
  assume {:sourceloc "parport_true.i.cil.c", 3501, 46} true;
  $p204 := $pa($pa($p203, 0, 2), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3501, 46} true;
  $p205 := $M.0[$p204];
  assume {:sourceloc "parport_true.i.cil.c", 3501, 46} true;
  call $p206 := PptSetChipMode($p6, $p205);
  assume {:sourceloc "parport_true.i.cil.c", 3501, 46} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p207 := $p206;
  goto $bb140;
$bb138:
  assume {:sourceloc "parport_true.i.cil.c", 3495, 35} true;
  assume $b199;
  goto $bb136;
$bb139:
  assume {:sourceloc "parport_true.i.cil.c", 3495, 35} true;
  assume !($b199);
  goto $bb137;
$bb140:
  assume {:sourceloc "parport_true.i.cil.c", 3504, 35} true;
  $p99 := $p207;
  goto $bb78;
$bb141:
  assume {:sourceloc "parport_true.i.cil.c", 3442, 35} true;
  $p208 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3442, 35} true;
  $p209 := $p208;
  assume {:sourceloc "parport_true.i.cil.c", 3442, 35} true;
  $p210 := $pa($pa($p209, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3442, 35} true;
  $p211 := $M.0[$p210];
  assume {:sourceloc "parport_true.i.cil.c", 3442, 35} true;
  $b212 := $ult($p211, 16);
  assume {:sourceloc "parport_true.i.cil.c", 3442, 35} true;
  goto $bb144, $bb145;
$bb142:
  assume {:sourceloc "parport_true.i.cil.c", 3443, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3444, 35} true;
  $p223 := -1073741789;
  goto $bb156;
$bb143:
  assume {:sourceloc "parport_true.i.cil.c", 3446, 37} true;
  $p213 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3446, 37} true;
  $p214 := $p213;
  assume {:sourceloc "parport_true.i.cil.c", 3446, 37} true;
  $p215 := $M.0[$p214];
  assume {:sourceloc "parport_true.i.cil.c", 3446, 37} true;
  $p216 := $p215;
  assume {:sourceloc "parport_true.i.cil.c", 3446, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3447, 37} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 3449, 37} true;
  $p217 := $pa($pa($p6, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3449, 37} true;
  $p218 := $M.0[$p217];
  assume {:sourceloc "parport_true.i.cil.c", 3449, 37} true;
  $b219 := ($p218 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3449, 37} true;
  goto $bb148, $bb149;
$bb144:
  assume {:sourceloc "parport_true.i.cil.c", 3442, 35} true;
  assume $b212;
  goto $bb142;
$bb145:
  assume {:sourceloc "parport_true.i.cil.c", 3442, 35} true;
  assume !($b212);
  goto $bb143;
$bb146:
  assume {:sourceloc "parport_true.i.cil.c", 3452, 39} true;
  $p224 := $pa($pa($p3, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3452, 39} true;
  $M.0[$p224] := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 3453, 39} true;
  $p225 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3453, 39} true;
  $M.0[$p225] := $p216;
  assume {:sourceloc "parport_true.i.cil.c", 3454, 49} true;
  $p226 := $pa($pa($p6, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3454, 49} true;
  $p227 := $M.0[$p226];
  assume {:sourceloc "parport_true.i.cil.c", 3454, 49} true;
  $p228 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 3454, 49} true;
  call $p229 := KeSynchronizeExecution($p227, PptSynchronizedDisconnect, $p228);
  assume {:sourceloc "parport_true.i.cil.c", 3454, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3458, 39} true;
  $b230 := ($p229 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3458, 39} true;
  goto $bb159, $bb160;
$bb147:
  assume {:sourceloc "parport_true.i.cil.c", 3479, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3480, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p220 := -1073741811;
  $p221 := 0;
  goto $bb150;
$bb148:
  assume {:sourceloc "parport_true.i.cil.c", 3449, 37} true;
  assume $b219;
  goto $bb146;
$bb149:
  assume {:sourceloc "parport_true.i.cil.c", 3449, 37} true;
  assume !($b219);
  goto $bb147;
$bb150:
  assume {:sourceloc "parport_true.i.cil.c", 3483, 37} true;
  $b222 := ($p221 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3483, 37} true;
  goto $bb153, $bb154;
$bb151:
  assume {:sourceloc "parport_true.i.cil.c", 3485, 39} true;
  call PptDisconnectInterrupt($p6);
  assume {:sourceloc "parport_true.i.cil.c", 3487, 37} true;
  goto $bb155;
$bb152:
  goto $bb155;
$bb153:
  assume {:sourceloc "parport_true.i.cil.c", 3483, 37} true;
  assume $b222;
  goto $bb151;
$bb154:
  assume {:sourceloc "parport_true.i.cil.c", 3483, 37} true;
  assume !($b222);
  goto $bb152;
$bb155:
  $p223 := $p220;
  goto $bb156;
$bb156:
  assume {:sourceloc "parport_true.i.cil.c", 3491, 35} true;
  $p99 := $p223;
  goto $bb78;
$bb157:
  assume {:sourceloc "parport_true.i.cil.c", 3460, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3461, 41} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 3462, 41} true;
  $p233 := $pa($pa($p6, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3462, 41} true;
  $p234 := $M.0[$p233];
  assume {:sourceloc "parport_true.i.cil.c", 3462, 41} true;
  $p235 := $sub($p234, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3462, 41} true;
  $M.0[$p233] := $p235;
  assume {:sourceloc "parport_true.i.cil.c", 3464, 41} true;
  $p236 := $pa($pa($p6, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3464, 41} true;
  $p237 := $M.0[$p236];
  assume {:sourceloc "parport_true.i.cil.c", 3464, 41} true;
  $b238 := ($p237 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 3464, 41} true;
  goto $bb164, $bb165;
$bb158:
  assume {:sourceloc "parport_true.i.cil.c", 3473, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3474, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p231 := -1073741811;
  $p232 := 0;
  goto $bb161;
$bb159:
  assume {:sourceloc "parport_true.i.cil.c", 3458, 39} true;
  assume $b230;
  goto $bb157;
$bb160:
  assume {:sourceloc "parport_true.i.cil.c", 3458, 39} true;
  assume !($b230);
  goto $bb158;
$bb161:
  assume {:sourceloc "parport_true.i.cil.c", 3476, 37} true;
  $p220 := $p231;
  $p221 := $p232;
  goto $bb150;
$bb162:
  assume {:sourceloc "parport_true.i.cil.c", 3465, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3466, 41} true;
  $p239 := 1;
  goto $bb166;
$bb163:
  assume {:sourceloc "parport_true.i.cil.c", 3467, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p239 := 0;
  goto $bb166;
$bb164:
  assume {:sourceloc "parport_true.i.cil.c", 3464, 41} true;
  assume $b238;
  goto $bb162;
$bb165:
  assume {:sourceloc "parport_true.i.cil.c", 3464, 41} true;
  assume !($b238);
  goto $bb163;
$bb166:
  assume {:sourceloc "parport_true.i.cil.c", 3472, 39} true;
  $p231 := 0;
  $p232 := $p239;
  goto $bb161;
$bb167:
  assume {:sourceloc "parport_true.i.cil.c", 3362, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3365, 35} true;
  $b240 := (0 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 3365, 35} true;
  goto $bb170, $bb171;
$bb168:
  assume {:sourceloc "parport_true.i.cil.c", 3368, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3369, 37} true;
  $p100 := -1073741823;
  goto $bb95;
$bb169:
  goto $bb172;
$bb170:
  assume {:sourceloc "parport_true.i.cil.c", 3365, 35} true;
  assume $b240;
  goto $bb168;
$bb171:
  assume {:sourceloc "parport_true.i.cil.c", 3365, 35} true;
  assume !($b240);
  goto $bb169;
$bb172:
  assume {:sourceloc "parport_true.i.cil.c", 3374, 35} true;
  $p241 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3374, 35} true;
  $p242 := $p241;
  assume {:sourceloc "parport_true.i.cil.c", 3374, 35} true;
  $p243 := $pa($pa($p242, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3374, 35} true;
  $p244 := $M.0[$p243];
  assume {:sourceloc "parport_true.i.cil.c", 3374, 35} true;
  $b245 := $ult($p244, 16);
  assume {:sourceloc "parport_true.i.cil.c", 3374, 35} true;
  goto $bb175, $bb176;
$bb173:
  assume {:sourceloc "parport_true.i.cil.c", 3375, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3376, 35} true;
  $p268 := -1073741789;
  goto $bb197;
$bb174:
  assume {:sourceloc "parport_true.i.cil.c", 3377, 37} true;
  $p246 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3377, 37} true;
  $p247 := $p246;
  assume {:sourceloc "parport_true.i.cil.c", 3377, 37} true;
  $p248 := $pa($pa($p247, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3377, 37} true;
  $p249 := $M.0[$p248];
  assume {:sourceloc "parport_true.i.cil.c", 3377, 37} true;
  $b250 := $ult($p249, 16);
  assume {:sourceloc "parport_true.i.cil.c", 3377, 37} true;
  goto $bb179, $bb180;
$bb175:
  assume {:sourceloc "parport_true.i.cil.c", 3374, 35} true;
  assume $b245;
  goto $bb173;
$bb176:
  assume {:sourceloc "parport_true.i.cil.c", 3374, 35} true;
  assume !($b245);
  goto $bb174;
$bb177:
  assume {:sourceloc "parport_true.i.cil.c", 3378, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3379, 37} true;
  $p267 := -1073741789;
  goto $bb196;
$bb178:
  assume {:sourceloc "parport_true.i.cil.c", 3381, 39} true;
  $p251 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3381, 39} true;
  $p252 := $p251;
  assume {:sourceloc "parport_true.i.cil.c", 3381, 39} true;
  $p253 := $M.0[$p252];
  assume {:sourceloc "parport_true.i.cil.c", 3381, 39} true;
  $p254 := $p253;
  assume {:sourceloc "parport_true.i.cil.c", 3381, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3382, 39} true;
  $p255 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3382, 39} true;
  $p256 := $p255;
  assume {:sourceloc "parport_true.i.cil.c", 3382, 39} true;
  $p257 := $M.0[$p256];
  assume {:sourceloc "parport_true.i.cil.c", 3382, 39} true;
  $p258 := $p257;
  assume {:sourceloc "parport_true.i.cil.c", 3382, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3383, 39} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 3385, 39} true;
  $p259 := $pa($pa($p6, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3385, 39} true;
  $p260 := $M.0[$p259];
  assume {:sourceloc "parport_true.i.cil.c", 3385, 39} true;
  $b261 := ($p260 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3385, 39} true;
  goto $bb183, $bb184;
$bb179:
  assume {:sourceloc "parport_true.i.cil.c", 3377, 37} true;
  assume $b250;
  goto $bb177;
$bb180:
  assume {:sourceloc "parport_true.i.cil.c", 3377, 37} true;
  assume !($b250);
  goto $bb178;
$bb181:
  assume {:sourceloc "parport_true.i.cil.c", 3387, 41} true;
  $p305 := $pa($pa($p6, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3387, 41} true;
  $p306 := $M.0[$p305];
  assume {:sourceloc "parport_true.i.cil.c", 3387, 41} true;
  $p307 := $add($p306, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3387, 41} true;
  $M.0[$p305] := $p307;
  assume {:sourceloc "parport_true.i.cil.c", 3389, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3391, 39} true;
  $p264 := 0;
  goto $bb190;
$bb182:
  assume {:sourceloc "parport_true.i.cil.c", 3394, 50} true;
  call $p262 := PptConnectInterrupt($p6);
  assume {:sourceloc "parport_true.i.cil.c", 3394, 50} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3396, 41} true;
  $b263 := $sge($p262, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3396, 41} true;
  goto $bb187, $bb188;
$bb183:
  assume {:sourceloc "parport_true.i.cil.c", 3385, 39} true;
  assume $b261;
  goto $bb181;
$bb184:
  assume {:sourceloc "parport_true.i.cil.c", 3385, 39} true;
  assume !($b261);
  goto $bb182;
$bb185:
  assume {:sourceloc "parport_true.i.cil.c", 3398, 43} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 3399, 43} true;
  $p302 := $pa($pa($p6, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3399, 43} true;
  $p303 := $M.0[$p302];
  assume {:sourceloc "parport_true.i.cil.c", 3399, 43} true;
  $p304 := $add($p303, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3399, 43} true;
  $M.0[$p302] := $p304;
  assume {:sourceloc "parport_true.i.cil.c", 3402, 41} true;
  goto $bb189;
$bb186:
  goto $bb189;
$bb187:
  assume {:sourceloc "parport_true.i.cil.c", 3396, 41} true;
  assume $b263;
  goto $bb185;
$bb188:
  assume {:sourceloc "parport_true.i.cil.c", 3396, 41} true;
  assume !($b263);
  goto $bb186;
$bb189:
  $p264 := $p262;
  goto $bb190;
$bb190:
  assume {:sourceloc "parport_true.i.cil.c", 3406, 39} true;
  $b265 := $sge($p264, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3406, 39} true;
  goto $bb193, $bb194;
$bb191:
  assume {:sourceloc "parport_true.i.cil.c", 3408, 51} true;
  call $p269 := ExAllocatePoolWithTag(0, 24, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 3408, 51} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3410, 41} true;
  $p270 := $p269;
  assume {:sourceloc "parport_true.i.cil.c", 3410, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3412, 41} true;
  $b271 := ($p270 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3412, 41} true;
  goto $bb200, $bb201;
$bb192:
  $p266 := $p264;
  goto $bb195;
$bb193:
  assume {:sourceloc "parport_true.i.cil.c", 3406, 39} true;
  assume $b265;
  goto $bb191;
$bb194:
  assume {:sourceloc "parport_true.i.cil.c", 3406, 39} true;
  assume !($b265);
  goto $bb192;
$bb195:
  $p267 := $p266;
  goto $bb196;
$bb196:
  $p268 := $p267;
  goto $bb197;
$bb197:
  assume {:sourceloc "parport_true.i.cil.c", 3438, 35} true;
  $p99 := $p268;
  goto $bb78;
$bb198:
  assume {:sourceloc "parport_true.i.cil.c", 3414, 43} true;
  $p273 := $pa($pa($p254, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3414, 43} true;
  $p274 := $M.0[$p273];
  assume {:sourceloc "parport_true.i.cil.c", 3414, 43} true;
  $p275 := $pa($pa($p270, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3414, 43} true;
  $M.0[$p275] := $p274;
  assume {:sourceloc "parport_true.i.cil.c", 3415, 43} true;
  $p276 := $pa($pa($p254, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3415, 43} true;
  $p277 := $M.0[$p276];
  assume {:sourceloc "parport_true.i.cil.c", 3415, 43} true;
  $p278 := $pa($pa($p270, 0, 24), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3415, 43} true;
  $M.0[$p278] := $p277;
  assume {:sourceloc "parport_true.i.cil.c", 3416, 43} true;
  $p279 := $pa($pa($p254, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3416, 43} true;
  $p280 := $M.0[$p279];
  assume {:sourceloc "parport_true.i.cil.c", 3416, 43} true;
  $p281 := $pa($pa($p270, 0, 24), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3416, 43} true;
  $M.0[$p281] := $p280;
  assume {:sourceloc "parport_true.i.cil.c", 3417, 43} true;
  $p282 := $pa($pa($p254, 0, 16), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3417, 43} true;
  $p283 := $M.0[$p282];
  assume {:sourceloc "parport_true.i.cil.c", 3417, 43} true;
  $p284 := $pa($pa($p270, 0, 24), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3417, 43} true;
  $M.0[$p284] := $p283;
  assume {:sourceloc "parport_true.i.cil.c", 3418, 43} true;
  $p285 := $pa($pa($p6, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3418, 43} true;
  $p286 := $pa($pa($p2, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3418, 43} true;
  $M.0[$p286] := $p285;
  assume {:sourceloc "parport_true.i.cil.c", 3419, 43} true;
  $p287 := $pa($pa($p270, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3419, 43} true;
  $p288 := $pa($pa($p2, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3419, 43} true;
  $M.0[$p288] := $p287;
  assume {:sourceloc "parport_true.i.cil.c", 3420, 43} true;
  $p289 := $pa($pa($p6, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3420, 43} true;
  $p290 := $M.0[$p289];
  assume {:sourceloc "parport_true.i.cil.c", 3420, 43} true;
  $p291 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 3420, 43} true;
  call $p292 := KeSynchronizeExecution($p290, PptSynchronizedQueue, $p291);
  assume {:sourceloc "parport_true.i.cil.c", 3423, 43} true;
  $p293 := $pa($pa($p6, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3423, 43} true;
  $p294 := $M.0[$p293];
  assume {:sourceloc "parport_true.i.cil.c", 3423, 43} true;
  $p295 := $pa($pa($p258, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3423, 43} true;
  $M.0[$p295] := $p294;
  assume {:sourceloc "parport_true.i.cil.c", 3424, 43} true;
  $p296 := $pa($pa($p258, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3424, 43} true;
  $M.0[$p296] := PptTryAllocatePortAtInterruptLevel;
  assume {:sourceloc "parport_true.i.cil.c", 3425, 43} true;
  $p297 := $pa($pa($p258, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3425, 43} true;
  $M.0[$p297] := PptFreePortFromInterruptLevel;
  assume {:sourceloc "parport_true.i.cil.c", 3426, 43} true;
  $p298 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 3426, 43} true;
  $p299 := $pa($pa($p258, 0, 16), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3426, 43} true;
  $M.0[$p299] := $p298;
  assume {:sourceloc "parport_true.i.cil.c", 3427, 43} true;
  $p300 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3427, 43} true;
  $p301 := $pa($pa($p300, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3427, 43} true;
  $M.0[$p301] := 16;
  assume {:sourceloc "parport_true.i.cil.c", 3428, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3430, 41} true;
  $p272 := 0;
  goto $bb202;
$bb199:
  assume {:sourceloc "parport_true.i.cil.c", 3431, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p272 := -1073741670;
  goto $bb202;
$bb200:
  assume {:sourceloc "parport_true.i.cil.c", 3412, 41} true;
  assume $b271;
  goto $bb198;
$bb201:
  assume {:sourceloc "parport_true.i.cil.c", 3412, 41} true;
  assume !($b271);
  goto $bb199;
$bb202:
  assume {:sourceloc "parport_true.i.cil.c", 3433, 39} true;
  $p266 := $p272;
  goto $bb195;
$bb203:
  assume {:sourceloc "parport_true.i.cil.c", 3345, 35} true;
  $p308 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3345, 35} true;
  $p309 := $p308;
  assume {:sourceloc "parport_true.i.cil.c", 3345, 35} true;
  $p310 := $pa($pa($p309, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3345, 35} true;
  $p311 := $M.0[$p310];
  assume {:sourceloc "parport_true.i.cil.c", 3345, 35} true;
  $b312 := $ult($p311, 24);
  assume {:sourceloc "parport_true.i.cil.c", 3345, 35} true;
  goto $bb206, $bb207;
$bb204:
  assume {:sourceloc "parport_true.i.cil.c", 3346, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3347, 35} true;
  $p338 := -1073741789;
  goto $bb208;
$bb205:
  assume {:sourceloc "parport_true.i.cil.c", 3348, 37} true;
  $p313 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3348, 37} true;
  $p314 := $pa($pa($p313, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3348, 37} true;
  $M.0[$p314] := 24;
  assume {:sourceloc "parport_true.i.cil.c", 3349, 37} true;
  $p315 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3349, 37} true;
  $p316 := $p315;
  assume {:sourceloc "parport_true.i.cil.c", 3349, 37} true;
  $p317 := $M.0[$p316];
  assume {:sourceloc "parport_true.i.cil.c", 3349, 37} true;
  $p318 := $p317;
  assume {:sourceloc "parport_true.i.cil.c", 3349, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3350, 37} true;
  $p319 := $pa($pa($p6, 0, 448), 168, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3350, 37} true;
  $p320 := $M.0[$p319];
  assume {:sourceloc "parport_true.i.cil.c", 3350, 37} true;
  $p321 := $pa($pa($p318, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3350, 37} true;
  $M.0[$p321] := $p320;
  assume {:sourceloc "parport_true.i.cil.c", 3351, 37} true;
  $p322 := $pa($pa($p6, 0, 448), 172, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3351, 37} true;
  $p323 := $M.0[$p322];
  assume {:sourceloc "parport_true.i.cil.c", 3351, 37} true;
  $p324 := $pa($pa($p318, 0, 24), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3351, 37} true;
  $M.0[$p324] := $p323;
  assume {:sourceloc "parport_true.i.cil.c", 3352, 37} true;
  $p325 := $pa($pa($p6, 0, 448), 177, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3352, 37} true;
  $p326 := $M.0[$p325];
  assume {:sourceloc "parport_true.i.cil.c", 3352, 37} true;
  $p327 := $p326;
  assume {:sourceloc "parport_true.i.cil.c", 3352, 37} true;
  $p328 := $pa($pa($p318, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3352, 37} true;
  $M.0[$p328] := $p327;
  assume {:sourceloc "parport_true.i.cil.c", 3353, 37} true;
  $p329 := $pa($pa($p6, 0, 448), 180, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3353, 37} true;
  $p330 := $M.0[$p329];
  assume {:sourceloc "parport_true.i.cil.c", 3353, 37} true;
  $p331 := $pa($pa($p318, 0, 24), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3353, 37} true;
  $M.0[$p331] := $p330;
  assume {:sourceloc "parport_true.i.cil.c", 3354, 37} true;
  $p332 := $pa($pa($p6, 0, 448), 184, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3354, 37} true;
  $p333 := $M.0[$p332];
  assume {:sourceloc "parport_true.i.cil.c", 3354, 37} true;
  $p334 := $pa($pa($p318, 0, 24), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3354, 37} true;
  $M.0[$p334] := $p333;
  assume {:sourceloc "parport_true.i.cil.c", 3355, 37} true;
  $p335 := $pa($pa($p6, 0, 448), 188, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3355, 37} true;
  $p336 := $M.0[$p335];
  assume {:sourceloc "parport_true.i.cil.c", 3355, 37} true;
  $p337 := $pa($pa($p318, 0, 24), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3355, 37} true;
  $M.0[$p337] := $p336;
  assume {:sourceloc "parport_true.i.cil.c", 3356, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p338 := 0;
  goto $bb208;
$bb206:
  assume {:sourceloc "parport_true.i.cil.c", 3345, 35} true;
  assume $b312;
  goto $bb204;
$bb207:
  assume {:sourceloc "parport_true.i.cil.c", 3345, 35} true;
  assume !($b312);
  goto $bb205;
$bb208:
  assume {:sourceloc "parport_true.i.cil.c", 3358, 35} true;
  $p99 := $p338;
  goto $bb78;
$bb209:
  assume {:sourceloc "parport_true.i.cil.c", 3333, 35} true;
  $p339 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3333, 35} true;
  $p340 := $p339;
  assume {:sourceloc "parport_true.i.cil.c", 3333, 35} true;
  $p341 := $pa($pa($p340, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3333, 35} true;
  $p342 := $M.0[$p341];
  assume {:sourceloc "parport_true.i.cil.c", 3333, 35} true;
  $b343 := $ult($p342, 80);
  assume {:sourceloc "parport_true.i.cil.c", 3333, 35} true;
  goto $bb212, $bb213;
$bb210:
  assume {:sourceloc "parport_true.i.cil.c", 3334, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3335, 35} true;
  $p353 := -1073741789;
  goto $bb214;
$bb211:
  assume {:sourceloc "parport_true.i.cil.c", 3336, 37} true;
  $p344 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3336, 37} true;
  $p345 := $pa($pa($p344, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3336, 37} true;
  $M.0[$p345] := 80;
  assume {:sourceloc "parport_true.i.cil.c", 3337, 37} true;
  $p346 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3337, 37} true;
  $p347 := $p346;
  assume {:sourceloc "parport_true.i.cil.c", 3337, 37} true;
  $p348 := $M.0[$p347];
  assume {:sourceloc "parport_true.i.cil.c", 3337, 37} true;
  $p349 := $p348;
  assume {:sourceloc "parport_true.i.cil.c", 3337, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3338, 37} true;
  $p350 := $pa($pa($p6, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3338, 37} true;
  $p351 := $p349;
  assume {:sourceloc "parport_true.i.cil.c", 3338, 37} true;
  $p352 := $p350;
  assume {:sourceloc "parport_true.i.cil.c", 3338, 37} true;
  call $memcpy.0.0($p351, $p352, 80, 8, false);
  assume {:sourceloc "parport_true.i.cil.c", 3339, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p353 := 0;
  goto $bb214;
$bb212:
  assume {:sourceloc "parport_true.i.cil.c", 3333, 35} true;
  assume $b343;
  goto $bb210;
$bb213:
  assume {:sourceloc "parport_true.i.cil.c", 3333, 35} true;
  assume !($b343);
  goto $bb211;
$bb214:
  assume {:sourceloc "parport_true.i.cil.c", 3341, 35} true;
  $p99 := $p353;
  goto $bb78;
$bb215:
  assume {:sourceloc "parport_true.i.cil.c", 3328, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3329, 35} true;
  $p99 := 0;
  goto $bb78;
$bb216:
  assume {:sourceloc "parport_true.i.cil.c", 3316, 35} true;
  $p354 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3316, 35} true;
  $p355 := $p354;
  assume {:sourceloc "parport_true.i.cil.c", 3316, 35} true;
  $p356 := $pa($pa($p355, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3316, 35} true;
  $p357 := $M.0[$p356];
  assume {:sourceloc "parport_true.i.cil.c", 3316, 35} true;
  $b358 := $ult($p357, 32);
  assume {:sourceloc "parport_true.i.cil.c", 3316, 35} true;
  goto $bb219, $bb220;
$bb217:
  assume {:sourceloc "parport_true.i.cil.c", 3317, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3318, 35} true;
  $p368 := -1073741789;
  goto $bb221;
$bb218:
  assume {:sourceloc "parport_true.i.cil.c", 3319, 37} true;
  $p359 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3319, 37} true;
  $p360 := $pa($pa($p359, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3319, 37} true;
  $M.0[$p360] := 32;
  assume {:sourceloc "parport_true.i.cil.c", 3320, 37} true;
  $p361 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3320, 37} true;
  $p362 := $p361;
  assume {:sourceloc "parport_true.i.cil.c", 3320, 37} true;
  $p363 := $M.0[$p362];
  assume {:sourceloc "parport_true.i.cil.c", 3320, 37} true;
  $p364 := $p363;
  assume {:sourceloc "parport_true.i.cil.c", 3320, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3321, 37} true;
  $p365 := $pa($pa($p6, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3321, 37} true;
  $p366 := $p364;
  assume {:sourceloc "parport_true.i.cil.c", 3321, 37} true;
  $p367 := $p365;
  assume {:sourceloc "parport_true.i.cil.c", 3321, 37} true;
  call $memcpy.0.0($p366, $p367, 32, 8, false);
  assume {:sourceloc "parport_true.i.cil.c", 3322, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p368 := 0;
  goto $bb221;
$bb219:
  assume {:sourceloc "parport_true.i.cil.c", 3316, 35} true;
  assume $b358;
  goto $bb217;
$bb220:
  assume {:sourceloc "parport_true.i.cil.c", 3316, 35} true;
  assume !($b358);
  goto $bb218;
$bb221:
  assume {:sourceloc "parport_true.i.cil.c", 3324, 35} true;
  $p99 := $p368;
  goto $bb78;
$bb222:
  assume {:sourceloc "parport_true.i.cil.c", 3268, 35} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 3270, 35} true;
  $p369 := $pa($pa(Irp, 0, 112), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3270, 35} true;
  $p370 := $M.0[$p369];
  assume {:sourceloc "parport_true.i.cil.c", 3270, 35} true;
  $b371 := ($p370 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3270, 35} true;
  goto $bb225, $bb226;
$bb223:
  assume {:sourceloc "parport_true.i.cil.c", 3271, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3272, 35} true;
  $p387 := -1073741536;
  goto $bb237;
$bb224:
  assume {:sourceloc "parport_true.i.cil.c", 3273, 37} true;
  $p372 := $pa($pa($p6, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3273, 37} true;
  $p373 := $pa($pa($p1, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3273, 37} true;
  $M.0[$p373] := $p372;
  assume {:sourceloc "parport_true.i.cil.c", 3274, 37} true;
  $p374 := $pa($pa($p6, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3274, 37} true;
  $p375 := $M.0[$p374];
  assume {:sourceloc "parport_true.i.cil.c", 3274, 37} true;
  $b376 := ($p375 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3274, 37} true;
  goto $bb229, $bb230;
$bb225:
  assume {:sourceloc "parport_true.i.cil.c", 3270, 35} true;
  assume $b371;
  goto $bb223;
$bb226:
  assume {:sourceloc "parport_true.i.cil.c", 3270, 35} true;
  assume !($b371);
  goto $bb224;
$bb227:
  assume {:sourceloc "parport_true.i.cil.c", 3276, 39} true;
  $p432 := $pa($pa($p6, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3276, 39} true;
  $p433 := $M.0[$p432];
  assume {:sourceloc "parport_true.i.cil.c", 3276, 39} true;
  $p434 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 3276, 39} true;
  call $p435 := KeSynchronizeExecution($p433, PptSynchronizedIncrement, $p434);
  assume {:sourceloc "parport_true.i.cil.c", 3280, 37} true;
  goto $bb231;
$bb228:
  assume {:sourceloc "parport_true.i.cil.c", 3282, 39} true;
  $p377 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 3282, 39} true;
  call $p378 := PptSynchronizedIncrement($p377);
  goto $bb231;
$bb229:
  assume {:sourceloc "parport_true.i.cil.c", 3274, 37} true;
  assume $b376;
  goto $bb227;
$bb230:
  assume {:sourceloc "parport_true.i.cil.c", 3274, 37} true;
  assume !($b376);
  goto $bb228;
$bb231:
  assume {:sourceloc "parport_true.i.cil.c", 3285, 37} true;
  $p379 := $pa($pa($p1, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3285, 37} true;
  $p380 := $M.0[$p379];
  assume {:sourceloc "parport_true.i.cil.c", 3285, 37} true;
  $b381 := ($p380 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3285, 37} true;
  goto $bb234, $bb235;
$bb232:
  assume {:sourceloc "parport_true.i.cil.c", 3287, 39} true;
  call $p388 := PptSetCancelRoutine(Irp, PptCancelRoutine);
  assume {:sourceloc "parport_true.i.cil.c", 3289, 39} true;
  $p389 := $M.27[pended];
  assume {:sourceloc "parport_true.i.cil.c", 3289, 39} true;
  $b390 := ($p389 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 3289, 39} true;
  goto $bb240, $bb241;
$bb233:
  assume {:sourceloc "parport_true.i.cil.c", 3305, 39} true;
  $p382 := $pa($pa($p6, 0, 448), 432, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3305, 39} true;
  $p383 := $pa($pa($p382, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3305, 39} true;
  $p384 := $M.0[$p383];
  assume {:sourceloc "parport_true.i.cil.c", 3305, 39} true;
  $p385 := $add($p384, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3305, 39} true;
  $M.0[$p383] := $p385;
  assume {:sourceloc "parport_true.i.cil.c", 3306, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p386 := 0;
  goto $bb236;
$bb234:
  assume {:sourceloc "parport_true.i.cil.c", 3285, 37} true;
  assume $b381;
  goto $bb232;
$bb235:
  assume {:sourceloc "parport_true.i.cil.c", 3285, 37} true;
  assume !($b381);
  goto $bb233;
$bb236:
  $p387 := $p386;
  goto $bb237;
$bb237:
  assume {:sourceloc "parport_true.i.cil.c", 3312, 35} true;
  $p99 := $p387;
  goto $bb78;
$bb238:
  assume {:sourceloc "parport_true.i.cil.c", 3290, 41} true;
  $M.27[pended] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 3291, 39} true;
  goto $bb242;
$bb239:
  assume {:sourceloc "parport_true.i.cil.c", 3293, 41} true;
  call errorFn();
  goto $bb242;
$bb240:
  assume {:sourceloc "parport_true.i.cil.c", 3289, 39} true;
  assume $b390;
  goto $bb238;
$bb241:
  assume {:sourceloc "parport_true.i.cil.c", 3289, 39} true;
  assume !($b390);
  goto $bb239;
$bb242:
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p391 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p392 := $p391;
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p393 := $pa($pa($p392, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p394 := $pa($pa($p393, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p395 := $p394;
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p396 := $M.0[$p395];
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p397 := $pa($pa($p396, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p398 := $M.0[$p397];
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p399 := $p398;
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p400 := $or($p399, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p401 := $trunc($p400, 8);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p402 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p403 := $p402;
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p404 := $pa($pa($p403, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p405 := $pa($pa($p404, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p406 := $p405;
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p407 := $M.0[$p406];
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $p408 := $pa($pa($p407, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3296, 39} true;
  $M.0[$p408] := $p401;
  assume {:sourceloc "parport_true.i.cil.c", 3297, 39} true;
  $p409 := $pa($pa($p6, 0, 448), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3297, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3298, 39} true;
  $p410 := $pa($pa($p409, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3298, 39} true;
  $p411 := $M.0[$p410];
  assume {:sourceloc "parport_true.i.cil.c", 3298, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3299, 39} true;
  $p412 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3299, 39} true;
  $p413 := $p412;
  assume {:sourceloc "parport_true.i.cil.c", 3299, 39} true;
  $p414 := $pa($pa($p413, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3299, 39} true;
  $p415 := $pa($pa($p414, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3299, 39} true;
  $p416 := $pa($pa($p415, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3299, 39} true;
  $M.0[$p416] := $p409;
  assume {:sourceloc "parport_true.i.cil.c", 3300, 39} true;
  $p417 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3300, 39} true;
  $p418 := $p417;
  assume {:sourceloc "parport_true.i.cil.c", 3300, 39} true;
  $p419 := $pa($pa($p418, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3300, 39} true;
  $p420 := $pa($pa($p419, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3300, 39} true;
  $p421 := $pa($pa($p420, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3300, 39} true;
  $M.0[$p421] := $p411;
  assume {:sourceloc "parport_true.i.cil.c", 3301, 39} true;
  $p422 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3301, 39} true;
  $p423 := $p422;
  assume {:sourceloc "parport_true.i.cil.c", 3301, 39} true;
  $p424 := $pa($pa($p423, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3301, 39} true;
  $p425 := $pa($pa($p424, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3301, 39} true;
  $p426 := $pa($pa($p411, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3301, 39} true;
  $M.0[$p426] := $p425;
  assume {:sourceloc "parport_true.i.cil.c", 3302, 39} true;
  $p427 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3302, 39} true;
  $p428 := $p427;
  assume {:sourceloc "parport_true.i.cil.c", 3302, 39} true;
  $p429 := $pa($pa($p428, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3302, 39} true;
  $p430 := $pa($pa($p429, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3302, 39} true;
  $p431 := $pa($pa($p409, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3302, 39} true;
  $M.0[$p431] := $p430;
  assume {:sourceloc "parport_true.i.cil.c", 3303, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3304, 37} true;
  $p386 := 259;
  goto $bb236;
$bb243:
  assume {:sourceloc "parport_true.i.cil.c", 3259, 35} true;
  $p436 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 3259, 35} true;
  call PptFreePort($p436);
  assume {:sourceloc "parport_true.i.cil.c", 3260, 35} true;
  $p437 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3260, 35} true;
  $p438 := $pa($pa($p437, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3260, 35} true;
  $p439 := $p438;
  assume {:sourceloc "parport_true.i.cil.c", 3260, 35} true;
  $M.0[$p439] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3261, 35} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3262, 35} true;
  $p440 := $pa($pa($p6, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3262, 35} true;
  $p441 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 3262, 35} true;
  call PptReleaseRemoveLock($p440, $p441);
  assume {:sourceloc "parport_true.i.cil.c", 3263, 35} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3265, 35} true;
  $p15 := 0;
  goto $bb15;
$bb244:
  assume {:sourceloc "parport_true.i.cil.c", 3234, 35} true;
  $p442 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3234, 35} true;
  $p443 := $p442;
  assume {:sourceloc "parport_true.i.cil.c", 3234, 35} true;
  $p444 := $pa($pa($p443, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3234, 35} true;
  $p445 := $M.0[$p444];
  assume {:sourceloc "parport_true.i.cil.c", 3234, 35} true;
  $b446 := $ult($p445, 12);
  assume {:sourceloc "parport_true.i.cil.c", 3234, 35} true;
  goto $bb247, $bb248;
$bb245:
  assume {:sourceloc "parport_true.i.cil.c", 3237, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3238, 35} true;
  $p452 := -1073741789;
  goto $bb249;
$bb246:
  assume {:sourceloc "parport_true.i.cil.c", 3240, 37} true;
  $p447 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3240, 37} true;
  $p448 := $p447;
  assume {:sourceloc "parport_true.i.cil.c", 3240, 37} true;
  $p449 := $M.0[$p448];
  assume {:sourceloc "parport_true.i.cil.c", 3240, 37} true;
  $p450 := $p449;
  assume {:sourceloc "parport_true.i.cil.c", 3240, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3242, 37} true;
  call PptDumpRemovalRelationsList($p6);
  assume {:sourceloc "parport_true.i.cil.c", 3243, 37} true;
  call $p451 := PptRemovePptRemovalRelation($p6, $p450);
  assume {:sourceloc "parport_true.i.cil.c", 3244, 37} true;
  call PptDumpRemovalRelationsList($p6);
  assume {:sourceloc "parport_true.i.cil.c", 3248, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p452 := 0;
  goto $bb249;
$bb247:
  assume {:sourceloc "parport_true.i.cil.c", 3234, 35} true;
  assume $b446;
  goto $bb245;
$bb248:
  assume {:sourceloc "parport_true.i.cil.c", 3234, 35} true;
  assume !($b446);
  goto $bb246;
$bb249:
  assume {:sourceloc "parport_true.i.cil.c", 3251, 35} true;
  $p453 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3251, 35} true;
  $p454 := $pa($pa($p453, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3251, 35} true;
  $p455 := $p454;
  assume {:sourceloc "parport_true.i.cil.c", 3251, 35} true;
  $M.0[$p455] := $p452;
  assume {:sourceloc "parport_true.i.cil.c", 3252, 35} true;
  $M.24[myStatus] := $p452;
  assume {:sourceloc "parport_true.i.cil.c", 3253, 35} true;
  $p456 := $pa($pa($p6, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3253, 35} true;
  $p457 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 3253, 35} true;
  call PptReleaseRemoveLock($p456, $p457);
  assume {:sourceloc "parport_true.i.cil.c", 3254, 35} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3256, 35} true;
  $p15 := $p452;
  goto $bb15;
$bb250:
  assume {:sourceloc "parport_true.i.cil.c", 3208, 35} true;
  $p458 := $pa($pa($p21, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3208, 35} true;
  $p459 := $p458;
  assume {:sourceloc "parport_true.i.cil.c", 3208, 35} true;
  $p460 := $pa($pa($p459, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3208, 35} true;
  $p461 := $M.0[$p460];
  assume {:sourceloc "parport_true.i.cil.c", 3208, 35} true;
  $b462 := $ult($p461, 12);
  assume {:sourceloc "parport_true.i.cil.c", 3208, 35} true;
  goto $bb253, $bb254;
$bb251:
  assume {:sourceloc "parport_true.i.cil.c", 3211, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3212, 35} true;
  $p468 := -1073741789;
  goto $bb255;
$bb252:
  assume {:sourceloc "parport_true.i.cil.c", 3214, 37} true;
  $p463 := $pa($pa(Irp, 0, 112), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3214, 37} true;
  $p464 := $p463;
  assume {:sourceloc "parport_true.i.cil.c", 3214, 37} true;
  $p465 := $M.0[$p464];
  assume {:sourceloc "parport_true.i.cil.c", 3214, 37} true;
  $p466 := $p465;
  assume {:sourceloc "parport_true.i.cil.c", 3214, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3216, 37} true;
  call PptDumpRemovalRelationsList($p6);
  assume {:sourceloc "parport_true.i.cil.c", 3217, 37} true;
  call $p467 := PptAddPptRemovalRelation($p6, $p466);
  assume {:sourceloc "parport_true.i.cil.c", 3218, 37} true;
  call PptDumpRemovalRelationsList($p6);
  assume {:sourceloc "parport_true.i.cil.c", 3222, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p468 := 0;
  goto $bb255;
$bb253:
  assume {:sourceloc "parport_true.i.cil.c", 3208, 35} true;
  assume $b462;
  goto $bb251;
$bb254:
  assume {:sourceloc "parport_true.i.cil.c", 3208, 35} true;
  assume !($b462);
  goto $bb252;
$bb255:
  assume {:sourceloc "parport_true.i.cil.c", 3225, 35} true;
  $p469 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3225, 35} true;
  $p470 := $pa($pa($p469, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3225, 35} true;
  $p471 := $p470;
  assume {:sourceloc "parport_true.i.cil.c", 3225, 35} true;
  $M.0[$p471] := $p468;
  assume {:sourceloc "parport_true.i.cil.c", 3226, 35} true;
  $M.24[myStatus] := $p468;
  assume {:sourceloc "parport_true.i.cil.c", 3227, 35} true;
  $p472 := $pa($pa($p6, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3227, 35} true;
  $p473 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 3227, 35} true;
  call PptReleaseRemoveLock($p472, $p473);
  assume {:sourceloc "parport_true.i.cil.c", 3228, 35} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3230, 35} true;
  $p15 := $p468;
  goto $bb15;
}
procedure PptDispatchPnp(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b12: bool;
  var $b13: bool;
  var $b14: bool;
  var $b15: bool;
  var $b16: bool;
  var $b17: bool;
  var $b18: bool;
  var $b19: bool;
  var $b20: bool;
  var $b21: bool;
  var $b22: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p2: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6528, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6528, 60} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6529, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 6529, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6536, 3} true;
  call PptDebugDumpPnpIrpInfo(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6537, 12} true;
  call $p1 := PptAcquireRemoveLockOrFailIrp(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6537, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6539, 3} true;
  $b := $sge($p1, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6539, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 6540, 5} true;
  $p3 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6540, 5} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 6540, 5} true;
  $p5 := $pa($pa($p4, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6540, 5} true;
  $p6 := $pa($pa($p5, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6540, 5} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 6540, 5} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 6540, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6541, 5} true;
  $p9 := $pa($pa($p8, 0, 36), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6541, 5} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 6541, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6542, 5} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 6542, 5} true;
  $b12 := $sgt($p11, 24);
  assume {:sourceloc "parport_true.i.cil.c", 6542, 5} true;
  goto $bb8, $bb9;
$bb2:
  $p2 := $p1;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 6539, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 6539, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 6654, 3} true;
  $r := $p2;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 6544, 16} true;
  call $p36 := PptPnpUnhandledIrp(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6544, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6546, 5} true;
  $p25 := $p36;
  goto $bb63;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 6547, 7} true;
  $b13 := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 6547, 7} true;
  goto $bb12, $bb13;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 6542, 5} true;
  assume $b12;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 6542, 5} true;
  assume !($b12);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 6548, 9} true;
  goto $bb73;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 6550, 9} true;
  $b14 := ($p == 1);
  assume {:sourceloc "parport_true.i.cil.c", 6550, 9} true;
  goto $bb16, $bb17;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 6547, 7} true;
  assume $b13;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 6547, 7} true;
  assume !($b13);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 6551, 11} true;
  goto $bb72;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 6553, 11} true;
  $b15 := ($p == 2);
  assume {:sourceloc "parport_true.i.cil.c", 6553, 11} true;
  goto $bb20, $bb21;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 6550, 9} true;
  assume $b14;
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 6550, 9} true;
  assume !($b14);
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 6554, 13} true;
  goto $bb71;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 6556, 13} true;
  $b16 := ($p == 3);
  assume {:sourceloc "parport_true.i.cil.c", 6556, 13} true;
  goto $bb24, $bb25;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 6553, 11} true;
  assume $b15;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 6553, 11} true;
  assume !($b15);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 6557, 15} true;
  goto $bb70;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 6559, 15} true;
  $b17 := ($p == 4);
  assume {:sourceloc "parport_true.i.cil.c", 6559, 15} true;
  goto $bb28, $bb29;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 6556, 13} true;
  assume $b16;
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 6556, 13} true;
  assume !($b16);
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 6560, 17} true;
  goto $bb69;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 6562, 17} true;
  $b18 := ($p == 5);
  assume {:sourceloc "parport_true.i.cil.c", 6562, 17} true;
  goto $bb32, $bb33;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 6559, 15} true;
  assume $b17;
  goto $bb26;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 6559, 15} true;
  assume !($b17);
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 6563, 19} true;
  goto $bb68;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 6565, 19} true;
  $b19 := ($p == 6);
  assume {:sourceloc "parport_true.i.cil.c", 6565, 19} true;
  goto $bb36, $bb37;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 6562, 17} true;
  assume $b18;
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 6562, 17} true;
  assume !($b18);
  goto $bb31;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 6566, 21} true;
  goto $bb67;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 6568, 21} true;
  $b20 := ($p == 7);
  assume {:sourceloc "parport_true.i.cil.c", 6568, 21} true;
  goto $bb40, $bb41;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 6565, 19} true;
  assume $b19;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 6565, 19} true;
  assume !($b19);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 6569, 23} true;
  goto $bb66;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 6571, 23} true;
  $b21 := ($p == 8);
  assume {:sourceloc "parport_true.i.cil.c", 6571, 23} true;
  goto $bb44, $bb45;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 6568, 21} true;
  assume $b20;
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 6568, 21} true;
  assume !($b20);
  goto $bb39;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 6572, 25} true;
  goto $bb65;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 6574, 25} true;
  $b22 := ($p == 9);
  assume {:sourceloc "parport_true.i.cil.c", 6574, 25} true;
  goto $bb48, $bb49;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 6571, 23} true;
  assume $b21;
  goto $bb42;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 6571, 23} true;
  assume !($b21);
  goto $bb43;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 6575, 27} true;
  goto $bb64;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 6578, 27} true;
  goto $bb50;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 6574, 25} true;
  assume $b22;
  goto $bb46;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 6574, 25} true;
  assume !($b22);
  goto $bb47;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 6633, 38} true;
  call $p23 := PptPnpSurpriseRemoval(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6633, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6635, 29} true;
  $p24 := $p23;
  goto $bb51;
$bb51:
  goto $bb52;
$bb52:
  goto $bb53;
$bb53:
  goto $bb54;
$bb54:
  goto $bb55;
$bb55:
  goto $bb56;
$bb56:
  goto $bb57;
$bb57:
  goto $bb58;
$bb58:
  goto $bb59;
$bb59:
  goto $bb60;
$bb60:
  goto $bb61;
$bb61:
  goto $bb62;
$bb62:
  $p25 := $p24;
  goto $bb63;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 6651, 3} true;
  $p2 := $p25;
  goto $bb5;
$bb64:
  assume {:sourceloc "parport_true.i.cil.c", 6628, 38} true;
  call $p26 := PptPnpRemoveDevice(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6628, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6630, 29} true;
  $p24 := $p26;
  goto $bb51;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 6623, 38} true;
  call $p27 := PptPnpCancelRemoveDevice(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6623, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6625, 29} true;
  $p24 := $p27;
  goto $bb51;
$bb66:
  assume {:sourceloc "parport_true.i.cil.c", 6618, 38} true;
  call $p28 := PptPnpQueryRemoveDevice(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6618, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6620, 29} true;
  $p24 := $p28;
  goto $bb51;
$bb67:
  assume {:sourceloc "parport_true.i.cil.c", 6613, 38} true;
  call $p29 := PptPnpStopDevice(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6613, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6615, 29} true;
  $p24 := $p29;
  goto $bb51;
$bb68:
  assume {:sourceloc "parport_true.i.cil.c", 6608, 38} true;
  call $p30 := PptPnpCancelStopDevice(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6608, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6610, 29} true;
  $p24 := $p30;
  goto $bb51;
$bb69:
  assume {:sourceloc "parport_true.i.cil.c", 6603, 38} true;
  call $p31 := PptPnpQueryStopDevice(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6603, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6605, 29} true;
  $p24 := $p31;
  goto $bb51;
$bb70:
  assume {:sourceloc "parport_true.i.cil.c", 6598, 38} true;
  call $p32 := PptPnpQueryDeviceRelations(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6598, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6600, 29} true;
  $p24 := $p32;
  goto $bb51;
$bb71:
  assume {:sourceloc "parport_true.i.cil.c", 6592, 38} true;
  call $p33 := PptPnpFilterResourceRequirements(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6592, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6595, 29} true;
  $p24 := $p33;
  goto $bb51;
$bb72:
  assume {:sourceloc "parport_true.i.cil.c", 6587, 38} true;
  call $p34 := PptPnpStartDevice(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6587, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6589, 29} true;
  $p24 := $p34;
  goto $bb51;
$bb73:
  assume {:sourceloc "parport_true.i.cil.c", 6582, 38} true;
  call $p35 := PptPnpUnhandledIrp(DeviceObject, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6582, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6584, 29} true;
  $p24 := $p35;
  goto $bb51;
}
procedure PptDispatchPostProcessIrp()
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8468, 3} true;
  $r := 0;
  return;
}
procedure PptDispatchPower(pDeviceObject: int, pIrp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b105: bool;
  var $b110: bool;
  var $b114: bool;
  var $b121: bool;
  var $b129: bool;
  var $b134: bool;
  var $b139: bool;
  var $b30: bool;
  var $b34: bool;
  var $b53: bool;
  var $b60: bool;
  var $b67: bool;
  var $b69: bool;
  var $b97: bool;
  var $b98: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p100: int;
  var $p101: int;
  var $p102: int;
  var $p103: int;
  var $p104: int;
  var $p106: int;
  var $p107: int;
  var $p108: int;
  var $p109: int;
  var $p11: int;
  var $p111: int;
  var $p112: int;
  var $p113: int;
  var $p115: int;
  var $p116: int;
  var $p117: int;
  var $p118: int;
  var $p119: int;
  var $p12: int;
  var $p120: int;
  var $p122: int;
  var $p123: int;
  var $p124: int;
  var $p125: int;
  var $p126: int;
  var $p127: int;
  var $p128: int;
  var $p13: int;
  var $p130: int;
  var $p131: int;
  var $p132: int;
  var $p133: int;
  var $p135: int;
  var $p136: int;
  var $p137: int;
  var $p138: int;
  var $p14: int;
  var $p140: int;
  var $p141: int;
  var $p142: int;
  var $p143: int;
  var $p144: int;
  var $p145: int;
  var $p146: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p68: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p83: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p88: int;
  var $p89: int;
  var $p9: int;
  var $p90: int;
  var $p91: int;
  var $p92: int;
  var $p93: int;
  var $p94: int;
  var $p95: int;
  var $p96: int;
  var $p99: int;
$bb0:
  call $p := $alloca($mul(4, 1));
  call $p1 := $alloca($mul(4, 1));
  assume {:sourceloc "parport_true.i.cil.c", 7841, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7841, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7843, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7856, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7857, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7858, 3} true;
  $p2 := $pa($pa(pDeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7858, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 7858, 3} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 7858, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7859, 3} true;
  $p5 := $pa($pa(pIrp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7859, 3} true;
  $p6 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 7859, 3} true;
  $p7 := $pa($pa($p6, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7859, 3} true;
  $p8 := $pa($pa($p7, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7859, 3} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 7859, 3} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 7859, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7860, 9} true;
  $p11 := $pa($pa($p4, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7860, 9} true;
  $p12 := pIrp;
  assume {:sourceloc "parport_true.i.cil.c", 7860, 9} true;
  call $p13 := PptAcquireRemoveLock($p11, $p12);
  assume {:sourceloc "parport_true.i.cil.c", 7860, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7861, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7863, 3} true;
  $b := $sge($p13, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7863, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7866, 5} true;
  $p14 := $pa($pa(pIrp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7866, 5} true;
  $p15 := $pa($pa($p14, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7866, 5} true;
  $p16 := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 7866, 5} true;
  $M.0[$p16] := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 7867, 5} true;
  call PptCompleteRequest(pIrp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7869, 5} true;
  $p17 := $p13;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7863, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7863, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8009, 1} true;
  $r := $p17;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7873, 3} true;
  $p18 := $pa($pa($p10, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7873, 3} true;
  $p19 := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 7873, 3} true;
  $p20 := $pa($pa($p19, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7873, 3} true;
  $p21 := $M.0[$p20];
  assume {:sourceloc "parport_true.i.cil.c", 7873, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7874, 3} true;
  $p22 := $pa($pa($p10, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7874, 3} true;
  $p23 := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 7874, 3} true;
  $p24 := $pa($pa($p23, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7874, 3} true;
  $p25 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7874, 3} true;
  $p26 := $p24;
  assume {:sourceloc "parport_true.i.cil.c", 7874, 3} true;
  call $memcpy.0.0($p25, $p26, 4, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 7875, 3} true;
  $p27 := $pa($pa($p10, 0, 36), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7875, 3} true;
  $p28 := $M.0[$p27];
  assume {:sourceloc "parport_true.i.cil.c", 7875, 3} true;
  $p29 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 7875, 3} true;
  $b30 := ($p29 == 3);
  assume {:sourceloc "parport_true.i.cil.c", 7875, 3} true;
  goto $bb9, $bb10;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7876, 5} true;
  goto $bb94;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7878, 5} true;
  $p31 := $pa($pa($p10, 0, 36), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7878, 5} true;
  $p32 := $M.0[$p31];
  assume {:sourceloc "parport_true.i.cil.c", 7878, 5} true;
  $p33 := $p32;
  assume {:sourceloc "parport_true.i.cil.c", 7878, 5} true;
  $b34 := ($p33 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 7878, 5} true;
  goto $bb13, $bb14;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7875, 3} true;
  assume $b30;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 7875, 3} true;
  assume !($b30);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 7879, 7} true;
  goto $bb39;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 7882, 7} true;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7878, 5} true;
  assume $b34;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 7878, 5} true;
  assume !($b34);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 7951, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7952, 7} true;
  $p35 := -1073741637;
  $p36 := 0;
  goto $bb16;
$bb16:
  goto $bb17;
$bb17:
  goto $bb18;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 7959, 3} true;
  $p37 := $pa($pa(pIrp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7959, 3} true;
  $p38 := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 7959, 3} true;
  $p39 := $pa($pa($p38, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7959, 3} true;
  $p40 := $pa($pa($p39, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7959, 3} true;
  $p41 := $p40;
  assume {:sourceloc "parport_true.i.cil.c", 7959, 3} true;
  $p42 := $M.0[$p41];
  assume {:sourceloc "parport_true.i.cil.c", 7959, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7960, 3} true;
  $p43 := $pa($pa(pIrp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7960, 3} true;
  $p44 := $p43;
  assume {:sourceloc "parport_true.i.cil.c", 7960, 3} true;
  $p45 := $pa($pa($p44, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7960, 3} true;
  $p46 := $pa($pa($p45, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7960, 3} true;
  $p47 := $p46;
  assume {:sourceloc "parport_true.i.cil.c", 7960, 3} true;
  $p48 := $M.0[$p47];
  assume {:sourceloc "parport_true.i.cil.c", 7960, 3} true;
  $p49 := $pa($p48, -1, 36);
  assume {:sourceloc "parport_true.i.cil.c", 7960, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7961, 3} true;
  $p50 := $p49;
  assume {:sourceloc "parport_true.i.cil.c", 7961, 3} true;
  $p51 := $p42;
  assume {:sourceloc "parport_true.i.cil.c", 7961, 3} true;
  call $memcpy.0.0($p50, $p51, $p2i($pa($pa(0, 0, 36), 28, 1)), 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 7962, 3} true;
  $p52 := $pa($pa($p49, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7962, 3} true;
  $M.0[$p52] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7964, 3} true;
  $b53 := $sge($p35, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7964, 3} true;
  goto $bb21, $bb22;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 7971, 5} true;
  $b60 := ($p36 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7971, 5} true;
  goto $bb26, $bb27;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 7966, 5} true;
  $p54 := $pa($pa(pIrp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7966, 5} true;
  $p55 := $pa($pa($p54, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7966, 5} true;
  $p56 := $p55;
  assume {:sourceloc "parport_true.i.cil.c", 7966, 5} true;
  $M.0[$p56] := $p35;
  assume {:sourceloc "parport_true.i.cil.c", 7968, 5} true;
  call PptCompleteRequest(pIrp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7970, 3} true;
  $p57 := $p35;
  goto $bb23;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 7964, 3} true;
  assume $b53;
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 7964, 3} true;
  assume !($b53);
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 8005, 3} true;
  $p58 := $pa($pa($p4, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8005, 3} true;
  $p59 := pIrp;
  assume {:sourceloc "parport_true.i.cil.c", 8005, 3} true;
  call PptReleaseRemoveLock($p58, $p59);
  assume {:sourceloc "parport_true.i.cil.c", 8007, 3} true;
  $p17 := $p57;
  goto $bb5;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 7972, 7} true;
  $p65 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 7972, 7} true;
  $p66 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 7972, 7} true;
  $b67 := ($p65 != $p66);
  assume {:sourceloc "parport_true.i.cil.c", 7972, 7} true;
  goto $bb31, $bb32;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 8000, 16} true;
  $p61 := $pa($pa($p4, 0, 448), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8000, 16} true;
  $p62 := $M.0[$p61];
  assume {:sourceloc "parport_true.i.cil.c", 8000, 16} true;
  call $p63 := PoCallDriver($p62, pIrp);
  assume {:sourceloc "parport_true.i.cil.c", 8000, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p64 := $p63;
  goto $bb28;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 7971, 5} true;
  assume $b60;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 7971, 5} true;
  assume !($b60);
  goto $bb25;
$bb28:
  $p57 := $p64;
  goto $bb23;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 7974, 9} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 7976, 7} true;
  goto $bb38;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 7977, 9} true;
  $p68 := $M.38[compRegistered];
  assume {:sourceloc "parport_true.i.cil.c", 7977, 9} true;
  $b69 := ($p68 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7977, 9} true;
  goto $bb35, $bb36;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 7972, 7} true;
  assume $b67;
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 7972, 7} true;
  assume !($b67);
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 7979, 11} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 7981, 9} true;
  goto $bb37;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 7982, 11} true;
  $M.38[compRegistered] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 7983, 11} true;
  $M.39[compFptr] := PptPowerComplete;
  assume {:sourceloc "parport_true.i.cil.c", 7984, 11} true;
  $M.40[routine] := 1;
  goto $bb37;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 7977, 9} true;
  assume $b69;
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 7977, 9} true;
  assume !($b69);
  goto $bb34;
$bb37:
  goto $bb38;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 7988, 7} true;
  $p70 := $pa($pa(pIrp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7988, 7} true;
  $p71 := $p70;
  assume {:sourceloc "parport_true.i.cil.c", 7988, 7} true;
  $p72 := $pa($pa($p71, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7988, 7} true;
  $p73 := $pa($pa($p72, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7988, 7} true;
  $p74 := $p73;
  assume {:sourceloc "parport_true.i.cil.c", 7988, 7} true;
  $p75 := $M.0[$p74];
  assume {:sourceloc "parport_true.i.cil.c", 7988, 7} true;
  $p76 := $pa($p75, -1, 36);
  assume {:sourceloc "parport_true.i.cil.c", 7988, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7989, 7} true;
  $p77 := $pa($pa($p76, 0, 36), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7989, 7} true;
  $M.0[$p77] := PptPowerComplete;
  assume {:sourceloc "parport_true.i.cil.c", 7990, 7} true;
  $p78 := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 7990, 7} true;
  $p79 := $pa($pa($p76, 0, 36), 32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7990, 7} true;
  $M.0[$p79] := $p78;
  assume {:sourceloc "parport_true.i.cil.c", 7991, 7} true;
  $p80 := $pa($pa($p76, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7991, 7} true;
  $M.0[$p80] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7992, 7} true;
  $p81 := $pa($pa($p76, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7992, 7} true;
  $M.0[$p81] := 64;
  assume {:sourceloc "parport_true.i.cil.c", 7993, 7} true;
  $p82 := $pa($pa($p76, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7993, 7} true;
  $p83 := $M.0[$p82];
  assume {:sourceloc "parport_true.i.cil.c", 7993, 7} true;
  $p84 := $p83;
  assume {:sourceloc "parport_true.i.cil.c", 7993, 7} true;
  $p85 := $or($p84, 128);
  assume {:sourceloc "parport_true.i.cil.c", 7993, 7} true;
  $p86 := $trunc($p85, 8);
  assume {:sourceloc "parport_true.i.cil.c", 7993, 7} true;
  $p87 := $pa($pa($p76, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7993, 7} true;
  $M.0[$p87] := $p86;
  assume {:sourceloc "parport_true.i.cil.c", 7994, 7} true;
  $p88 := $pa($pa($p76, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7994, 7} true;
  $p89 := $M.0[$p88];
  assume {:sourceloc "parport_true.i.cil.c", 7994, 7} true;
  $p90 := $p89;
  assume {:sourceloc "parport_true.i.cil.c", 7994, 7} true;
  $p91 := $or($p90, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7994, 7} true;
  $p92 := $trunc($p91, 8);
  assume {:sourceloc "parport_true.i.cil.c", 7994, 7} true;
  $p93 := $pa($pa($p76, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7994, 7} true;
  $M.0[$p93] := $p92;
  assume {:sourceloc "parport_true.i.cil.c", 7995, 16} true;
  $p94 := $pa($pa($p4, 0, 448), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7995, 16} true;
  $p95 := $M.0[$p94];
  assume {:sourceloc "parport_true.i.cil.c", 7995, 16} true;
  call $p96 := PoCallDriver($p95, pIrp);
  assume {:sourceloc "parport_true.i.cil.c", 7995, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7997, 5} true;
  $p64 := $p96;
  goto $bb28;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 7890, 9} true;
  $b97 := ($p21 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 7890, 9} true;
  goto $bb42, $bb43;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 7891, 11} true;
  goto $bb57;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 7893, 11} true;
  $b98 := ($p21 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 7893, 11} true;
  goto $bb46, $bb47;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 7890, 9} true;
  assume $b97;
  goto $bb40;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 7890, 9} true;
  assume !($b97);
  goto $bb41;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 7894, 13} true;
  goto $bb78;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 7896, 13} true;
  goto $bb50, $bb51;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 7893, 11} true;
  assume $b98;
  goto $bb44;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 7893, 11} true;
  assume !($b98);
  goto $bb45;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 7896, 20} true;
  goto $bb57;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 7944, 20} true;
  $p99 := 0;
  goto $bb52;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 7896, 13} true;
  assume false;
  goto $bb48;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 7896, 13} true;
  assume !(false);
  goto $bb49;
$bb52:
  goto $bb53;
$bb53:
  goto $bb54;
$bb54:
  goto $bb55;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 7949, 9} true;
  $p100 := $p99;
  goto $bb56;
$bb56:
  $p35 := 0;
  $p36 := $p100;
  goto $bb16;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 7898, 15} true;
  $p101 := $pa($pa($p4, 0, 448), 304, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7898, 15} true;
  $p102 := $M.0[$p101];
  assume {:sourceloc "parport_true.i.cil.c", 7898, 15} true;
  $p103 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7898, 15} true;
  $p104 := $M.0[$p103];
  assume {:sourceloc "parport_true.i.cil.c", 7898, 15} true;
  $b105 := $slt($p102, $p104);
  assume {:sourceloc "parport_true.i.cil.c", 7898, 15} true;
  goto $bb60, $bb61;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 7900, 17} true;
  $p115 := $pa($pa($p4, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7900, 17} true;
  $p116 := $M.0[$p115];
  assume {:sourceloc "parport_true.i.cil.c", 7900, 17} true;
  call $p117 := PoSetPowerState($p116, $p21, $p);
  assume {:sourceloc "parport_true.i.cil.c", 7900, 17} true;
  $p118 := $pa($pa($p1, 0, 4), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7900, 17} true;
  $M.5[$p118] := $p117;
  assume {:sourceloc "parport_true.i.cil.c", 7902, 17} true;
  $p119 := $pa($pa($p4, 0, 448), 304, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7902, 17} true;
  $p120 := $M.0[$p119];
  assume {:sourceloc "parport_true.i.cil.c", 7902, 17} true;
  $b121 := (1 == $p120);
  assume {:sourceloc "parport_true.i.cil.c", 7902, 17} true;
  goto $bb75, $bb76;
$bb59:
  assume {:sourceloc "parport_true.i.cil.c", 7909, 17} true;
  $p106 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7909, 17} true;
  $p107 := $M.0[$p106];
  assume {:sourceloc "parport_true.i.cil.c", 7909, 17} true;
  $p108 := $pa($pa($p4, 0, 448), 304, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7909, 17} true;
  $p109 := $M.0[$p108];
  assume {:sourceloc "parport_true.i.cil.c", 7909, 17} true;
  $b110 := $slt($p107, $p109);
  assume {:sourceloc "parport_true.i.cil.c", 7909, 17} true;
  goto $bb64, $bb65;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 7898, 15} true;
  assume $b105;
  goto $bb58;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 7898, 15} true;
  assume !($b105);
  goto $bb59;
$bb62:
  assume {:sourceloc "parport_true.i.cil.c", 7910, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7911, 19} true;
  $p113 := $M.0[$pa($pa($i2p(-2162688), 0, 728), 704, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 7911, 19} true;
  $b114 := ($p113 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 7911, 19} true;
  goto $bb70, $bb71;
$bb63:
  $p111 := 0;
  goto $bb66;
$bb64:
  assume {:sourceloc "parport_true.i.cil.c", 7909, 17} true;
  assume $b110;
  goto $bb62;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 7909, 17} true;
  assume !($b110);
  goto $bb63;
$bb66:
  $p112 := $p111;
  goto $bb67;
$bb67:
  assume {:sourceloc "parport_true.i.cil.c", 7922, 15} true;
  $p99 := $p112;
  goto $bb52;
$bb68:
  assume {:sourceloc "parport_true.i.cil.c", 7913, 21} true;
  call InitNEC_98($p4);
  assume {:sourceloc "parport_true.i.cil.c", 7915, 19} true;
  goto $bb72;
$bb69:
  goto $bb72;
$bb70:
  assume {:sourceloc "parport_true.i.cil.c", 7911, 19} true;
  assume $b114;
  goto $bb68;
$bb71:
  assume {:sourceloc "parport_true.i.cil.c", 7911, 19} true;
  assume !($b114);
  goto $bb69;
$bb72:
  assume {:sourceloc "parport_true.i.cil.c", 7918, 17} true;
  $p111 := 1;
  goto $bb66;
$bb73:
  assume {:sourceloc "parport_true.i.cil.c", 7904, 17} true;
  goto $bb77;
$bb74:
  goto $bb77;
$bb75:
  assume {:sourceloc "parport_true.i.cil.c", 7902, 17} true;
  assume $b121;
  goto $bb73;
$bb76:
  assume {:sourceloc "parport_true.i.cil.c", 7902, 17} true;
  assume !($b121);
  goto $bb74;
$bb77:
  assume {:sourceloc "parport_true.i.cil.c", 7907, 17} true;
  $p122 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7907, 17} true;
  $p123 := $M.0[$p122];
  assume {:sourceloc "parport_true.i.cil.c", 7907, 17} true;
  $p124 := $pa($pa($p4, 0, 448), 304, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7907, 17} true;
  $M.0[$p124] := $p123;
  assume {:sourceloc "parport_true.i.cil.c", 7908, 15} true;
  $p112 := 0;
  goto $bb67;
$bb78:
  assume {:sourceloc "parport_true.i.cil.c", 7924, 15} true;
  $p125 := $pa($pa($p4, 0, 448), 308, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7924, 15} true;
  $p126 := $M.0[$p125];
  assume {:sourceloc "parport_true.i.cil.c", 7924, 15} true;
  $p127 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7924, 15} true;
  $p128 := $M.0[$p127];
  assume {:sourceloc "parport_true.i.cil.c", 7924, 15} true;
  $b129 := $slt($p126, $p128);
  assume {:sourceloc "parport_true.i.cil.c", 7924, 15} true;
  goto $bb81, $bb82;
$bb79:
  assume {:sourceloc "parport_true.i.cil.c", 7925, 17} true;
  $p137 := $pa($pa($p4, 0, 448), 308, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7925, 17} true;
  $p138 := $M.0[$p137];
  assume {:sourceloc "parport_true.i.cil.c", 7925, 17} true;
  $b139 := (1 == $p138);
  assume {:sourceloc "parport_true.i.cil.c", 7925, 17} true;
  goto $bb91, $bb92;
$bb80:
  assume {:sourceloc "parport_true.i.cil.c", 7937, 17} true;
  $p130 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7937, 17} true;
  $p131 := $M.0[$p130];
  assume {:sourceloc "parport_true.i.cil.c", 7937, 17} true;
  $p132 := $pa($pa($p4, 0, 448), 308, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7937, 17} true;
  $p133 := $M.0[$p132];
  assume {:sourceloc "parport_true.i.cil.c", 7937, 17} true;
  $b134 := $slt($p131, $p133);
  assume {:sourceloc "parport_true.i.cil.c", 7937, 17} true;
  goto $bb85, $bb86;
$bb81:
  assume {:sourceloc "parport_true.i.cil.c", 7924, 15} true;
  assume $b129;
  goto $bb79;
$bb82:
  assume {:sourceloc "parport_true.i.cil.c", 7924, 15} true;
  assume !($b129);
  goto $bb80;
$bb83:
  assume {:sourceloc "parport_true.i.cil.c", 7938, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7939, 17} true;
  $p135 := 1;
  goto $bb87;
$bb84:
  $p135 := 0;
  goto $bb87;
$bb85:
  assume {:sourceloc "parport_true.i.cil.c", 7937, 17} true;
  assume $b134;
  goto $bb83;
$bb86:
  assume {:sourceloc "parport_true.i.cil.c", 7937, 17} true;
  assume !($b134);
  goto $bb84;
$bb87:
  $p136 := $p135;
  goto $bb88;
$bb88:
  assume {:sourceloc "parport_true.i.cil.c", 7943, 15} true;
  $p99 := $p136;
  goto $bb52;
$bb89:
  assume {:sourceloc "parport_true.i.cil.c", 7927, 17} true;
  goto $bb93;
$bb90:
  goto $bb93;
$bb91:
  assume {:sourceloc "parport_true.i.cil.c", 7925, 17} true;
  assume $b139;
  goto $bb89;
$bb92:
  assume {:sourceloc "parport_true.i.cil.c", 7925, 17} true;
  assume !($b139);
  goto $bb90;
$bb93:
  assume {:sourceloc "parport_true.i.cil.c", 7931, 17} true;
  $p140 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7931, 17} true;
  $M.0[$p140] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 7932, 17} true;
  $p141 := $pa($pa($p4, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7932, 17} true;
  $p142 := $M.0[$p141];
  assume {:sourceloc "parport_true.i.cil.c", 7932, 17} true;
  call $p143 := PoRequestPowerIrp($p142, 2, $p, 0, 0, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7934, 17} true;
  $p144 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7934, 17} true;
  $p145 := $M.0[$p144];
  assume {:sourceloc "parport_true.i.cil.c", 7934, 17} true;
  $p146 := $pa($pa($p4, 0, 448), 308, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7934, 17} true;
  $M.0[$p146] := $p145;
  assume {:sourceloc "parport_true.i.cil.c", 7936, 15} true;
  $p136 := 0;
  goto $bb88;
$bb94:
  assume {:sourceloc "parport_true.i.cil.c", 7885, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7886, 9} true;
  $p100 := 0;
  goto $bb56;
}
procedure PptDispatchPreProcessIrp(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8440, 50} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8440, 70} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8447, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8447, 3} true;
  $p1 := $M.57[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8447, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8447, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8448, 9} true;
  $p3 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8448, 9} true;
  $p4 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 8448, 9} true;
  call $p5 := PptAcquireRemoveLock($p3, $p4);
  assume {:sourceloc "parport_true.i.cil.c", 8448, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8449, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8451, 3} true;
  $b := $sge($p5, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8451, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8453, 5} true;
  $p6 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8453, 5} true;
  $p7 := $pa($pa($p6, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8453, 5} true;
  $M.1[$p7] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 8454, 5} true;
  $p8 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8454, 5} true;
  $p9 := $pa($pa($p8, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8454, 5} true;
  $p10 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 8454, 5} true;
  $M.1[$p10] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 8455, 5} true;
  $M.24[myStatus] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 8456, 5} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8458, 3} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8451, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8451, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8461, 3} true;
  $r := $p5;
  return;
}
procedure PptDispatchSystemControl(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b10: bool;
  var $b12: bool;
  var $b15: bool;
  var $b36: bool;
  var $b8: bool;
  var $p: int;
  var $p1: int;
  var $p11: int;
  var $p13: int;
  var $p14: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p6: int;
  var $p7: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(4, 1));
  assume {:sourceloc "parport_true.i.cil.c", 9408, 50} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9408, 70} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9409, 26} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9415, 3} true;
  $p1 := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9415, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 9415, 3} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9415, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9416, 12} true;
  $p4 := $pa($pa($p3, 0, 448), 400, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9416, 12} true;
  call $p5 := WmiSystemControl($p4, DeviceObject, Irp, $p);
  assume {:sourceloc "parport_true.i.cil.c", 9416, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9418, 3} true;
  $p6 := $M.6[$p];
  assume {:sourceloc "parport_true.i.cil.c", 9418, 3} true;
  $b := ($p6 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9418, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9419, 5} true;
  goto $bb37;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 9421, 5} true;
  $p7 := $M.6[$p];
  assume {:sourceloc "parport_true.i.cil.c", 9421, 5} true;
  $b8 := ($p7 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 9421, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9418, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9418, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9422, 7} true;
  goto $bb36;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 9424, 7} true;
  $p9 := $M.6[$p];
  assume {:sourceloc "parport_true.i.cil.c", 9424, 7} true;
  $b10 := ($p9 == 3);
  assume {:sourceloc "parport_true.i.cil.c", 9424, 7} true;
  goto $bb11, $bb12;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9421, 5} true;
  assume $b8;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 9421, 5} true;
  assume !($b8);
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 9425, 9} true;
  goto $bb35;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 9427, 9} true;
  $p11 := $M.6[$p];
  assume {:sourceloc "parport_true.i.cil.c", 9427, 9} true;
  $b12 := ($p11 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 9427, 9} true;
  goto $bb15, $bb16;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 9424, 7} true;
  assume $b10;
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 9424, 7} true;
  assume !($b10);
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 9428, 11} true;
  goto $bb29;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 9431, 11} true;
  goto $bb17;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 9427, 9} true;
  assume $b12;
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 9427, 9} true;
  assume !($b12);
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 9457, 13} true;
  $p13 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9457, 13} true;
  $p14 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 9457, 13} true;
  $b15 := ($p13 == $p14);
  assume {:sourceloc "parport_true.i.cil.c", 9457, 13} true;
  goto $bb20, $bb21;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 9458, 15} true;
  $p33 := $M.37[SKIP1];
  assume {:sourceloc "parport_true.i.cil.c", 9458, 15} true;
  $M.35[s] := $p33;
  assume {:sourceloc "parport_true.i.cil.c", 9459, 13} true;
  goto $bb22;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 9461, 15} true;
  call errorFn();
  goto $bb22;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 9457, 13} true;
  assume $b15;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 9457, 13} true;
  assume !($b15);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 9465, 13} true;
  $p16 := $pa($pa(Irp, 0, 112), 35, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9465, 13} true;
  $p17 := $M.0[$p16];
  assume {:sourceloc "parport_true.i.cil.c", 9465, 13} true;
  $p18 := $p17;
  assume {:sourceloc "parport_true.i.cil.c", 9465, 13} true;
  $p19 := $add($p18, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9465, 13} true;
  $p20 := $trunc($p19, 8);
  assume {:sourceloc "parport_true.i.cil.c", 9465, 13} true;
  $p21 := $pa($pa(Irp, 0, 112), 35, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9465, 13} true;
  $M.0[$p21] := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 9466, 13} true;
  $p22 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9466, 13} true;
  $p23 := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 9466, 13} true;
  $p24 := $pa($pa($p23, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9466, 13} true;
  $p25 := $pa($pa($p24, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9466, 13} true;
  $p26 := $p25;
  assume {:sourceloc "parport_true.i.cil.c", 9466, 13} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 9466, 13} true;
  $p28 := $pa($p27, 1, 36);
  assume {:sourceloc "parport_true.i.cil.c", 9466, 13} true;
  $M.0[$p26] := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 9467, 22} true;
  $p29 := $pa($pa($p3, 0, 448), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9467, 22} true;
  $p30 := $M.0[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 9467, 22} true;
  call $p31 := IofCallDriver($p30, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 9467, 22} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9469, 13} true;
  $p32 := $p31;
  goto $bb23;
$bb23:
  goto $bb24;
$bb24:
  goto $bb25;
$bb25:
  goto $bb26;
$bb26:
  goto $bb27;
$bb27:
  goto $bb28;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 9478, 3} true;
  $r := $p32;
  return;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 9443, 13} true;
  $p34 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9443, 13} true;
  $p35 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 9443, 13} true;
  $b36 := ($p34 == $p35);
  assume {:sourceloc "parport_true.i.cil.c", 9443, 13} true;
  goto $bb32, $bb33;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 9444, 15} true;
  $p53 := $M.37[SKIP1];
  assume {:sourceloc "parport_true.i.cil.c", 9444, 15} true;
  $M.35[s] := $p53;
  assume {:sourceloc "parport_true.i.cil.c", 9445, 13} true;
  goto $bb34;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 9447, 15} true;
  call errorFn();
  goto $bb34;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 9443, 13} true;
  assume $b36;
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 9443, 13} true;
  assume !($b36);
  goto $bb31;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 9451, 13} true;
  $p37 := $pa($pa(Irp, 0, 112), 35, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9451, 13} true;
  $p38 := $M.0[$p37];
  assume {:sourceloc "parport_true.i.cil.c", 9451, 13} true;
  $p39 := $p38;
  assume {:sourceloc "parport_true.i.cil.c", 9451, 13} true;
  $p40 := $add($p39, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9451, 13} true;
  $p41 := $trunc($p40, 8);
  assume {:sourceloc "parport_true.i.cil.c", 9451, 13} true;
  $p42 := $pa($pa(Irp, 0, 112), 35, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9451, 13} true;
  $M.0[$p42] := $p41;
  assume {:sourceloc "parport_true.i.cil.c", 9452, 13} true;
  $p43 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9452, 13} true;
  $p44 := $p43;
  assume {:sourceloc "parport_true.i.cil.c", 9452, 13} true;
  $p45 := $pa($pa($p44, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9452, 13} true;
  $p46 := $pa($pa($p45, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9452, 13} true;
  $p47 := $p46;
  assume {:sourceloc "parport_true.i.cil.c", 9452, 13} true;
  $p48 := $M.0[$p47];
  assume {:sourceloc "parport_true.i.cil.c", 9452, 13} true;
  $p49 := $pa($p48, 1, 36);
  assume {:sourceloc "parport_true.i.cil.c", 9452, 13} true;
  $M.0[$p47] := $p49;
  assume {:sourceloc "parport_true.i.cil.c", 9453, 22} true;
  $p50 := $pa($pa($p3, 0, 448), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9453, 22} true;
  $p51 := $M.0[$p50];
  assume {:sourceloc "parport_true.i.cil.c", 9453, 22} true;
  call $p52 := IofCallDriver($p51, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 9453, 22} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9455, 13} true;
  $p32 := $p52;
  goto $bb23;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 9440, 13} true;
  goto $bb29;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 9438, 13} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9440, 13} true;
  $p32 := $p5;
  goto $bb23;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 9434, 13} true;
  $p54 := $M.42[DC];
  assume {:sourceloc "parport_true.i.cil.c", 9434, 13} true;
  $M.35[s] := $p54;
  assume {:sourceloc "parport_true.i.cil.c", 9435, 13} true;
  $p32 := $p5;
  goto $bb23;
}
procedure PptDumpPptRemovalRelationsStruct(PptRemovalRelations: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 3093, 66} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3099, 1} true;
  return;
}
procedure PptDumpRemovalRelationsList(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b25: bool;
  var $b37: bool;
  var $b7: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p5: int;
  var $p6: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 3010, 52} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3024, 3} true;
  $p := $pa($pa(Extension, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3024, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3025, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3026, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3027, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3028, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3034, 3} true;
  $p1 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3034, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 3034, 3} true;
  $p3 := $p2i($p2);
  assume {:sourceloc "parport_true.i.cil.c", 3034, 3} true;
  $p4 := $p2i($p);
  assume {:sourceloc "parport_true.i.cil.c", 3034, 3} true;
  $b := ($p3 == $p4);
  assume {:sourceloc "parport_true.i.cil.c", 3034, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 3040, 5} true;
  goto $bb24;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 3034, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 3034, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 3046, 3} true;
  $p5 := 0;
  $p6 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 3046, 13} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 3048, 5} true;
  $b7 := ($p6 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3048, 5} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 3051, 7} true;
  goto $bb23;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 3050, 5} true;
  goto $bb12;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 3048, 5} true;
  assume $b7;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 3048, 5} true;
  assume !($b7);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 3053, 5} true;
  $p8 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3053, 5} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 3053, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3054, 5} true;
  $p10 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3054, 5} true;
  $p11 := $M.0[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 3054, 5} true;
  $p12 := $pa($pa($p11, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3054, 5} true;
  $p13 := $M.0[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 3054, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3055, 5} true;
  $p14 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3055, 5} true;
  $p15 := $M.0[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 3055, 5} true;
  $p16 := $pa($pa($p15, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3055, 5} true;
  $p17 := $M.0[$p16];
  assume {:sourceloc "parport_true.i.cil.c", 3055, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3056, 5} true;
  $p18 := $pa($pa($p17, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3056, 5} true;
  $M.0[$p18] := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 3057, 5} true;
  $p19 := $pa($pa($p13, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3057, 5} true;
  $M.0[$p19] := $p17;
  assume {:sourceloc "parport_true.i.cil.c", 3058, 5} true;
  $p20 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 3058, 5} true;
  $p21 := $pa($p20, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3058, 5} true;
  $p22 := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 3058, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3059, 5} true;
  $p23 := $p2i($p5);
  assume {:sourceloc "parport_true.i.cil.c", 3059, 5} true;
  $p24 := $p2i($p9);
  assume {:sourceloc "parport_true.i.cil.c", 3059, 5} true;
  $b25 := ($p23 == $p24);
  assume {:sourceloc "parport_true.i.cil.c", 3059, 5} true;
  goto $bb15, $bb16;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 3060, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3061, 7} true;
  $p39 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3061, 7} true;
  $p40 := $M.0[$p39];
  assume {:sourceloc "parport_true.i.cil.c", 3061, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3062, 7} true;
  $p41 := $pa($pa($p22, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3062, 7} true;
  $p42 := $pa($pa($p41, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3062, 7} true;
  $M.0[$p42] := $p40;
  assume {:sourceloc "parport_true.i.cil.c", 3063, 7} true;
  $p43 := $pa($pa($p22, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3063, 7} true;
  $p44 := $pa($pa($p43, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3063, 7} true;
  $M.0[$p44] := $p;
  assume {:sourceloc "parport_true.i.cil.c", 3064, 7} true;
  $p45 := $pa($pa($p22, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3064, 7} true;
  $p46 := $pa($pa($p40, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3064, 7} true;
  $M.0[$p46] := $p45;
  assume {:sourceloc "parport_true.i.cil.c", 3065, 7} true;
  $p47 := $pa($pa($p22, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3065, 7} true;
  $p48 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3065, 7} true;
  $M.0[$p48] := $p47;
  assume {:sourceloc "parport_true.i.cil.c", 3066, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3069, 5} true;
  $p36 := 1;
  goto $bb17;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 3072, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3073, 7} true;
  $p26 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3073, 7} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 3073, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3074, 7} true;
  $p28 := $pa($pa($p22, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3074, 7} true;
  $p29 := $pa($pa($p28, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3074, 7} true;
  $M.0[$p29] := $p;
  assume {:sourceloc "parport_true.i.cil.c", 3075, 7} true;
  $p30 := $pa($pa($p22, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3075, 7} true;
  $p31 := $pa($pa($p30, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3075, 7} true;
  $M.0[$p31] := $p27;
  assume {:sourceloc "parport_true.i.cil.c", 3076, 7} true;
  $p32 := $pa($pa($p22, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3076, 7} true;
  $p33 := $pa($pa($p27, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3076, 7} true;
  $M.0[$p33] := $p32;
  assume {:sourceloc "parport_true.i.cil.c", 3077, 7} true;
  $p34 := $pa($pa($p22, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3077, 7} true;
  $p35 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3077, 7} true;
  $M.0[$p35] := $p34;
  $p36 := $p6;
  goto $bb17;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 3059, 5} true;
  assume $b25;
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 3059, 5} true;
  assume !($b25);
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 3079, 5} true;
  $b37 := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3079, 5} true;
  goto $bb20, $bb21;
$bb18:
  $p38 := $p5;
  goto $bb22;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 3080, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3081, 5} true;
  $p38 := $p9;
  goto $bb22;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 3079, 5} true;
  assume $b37;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 3079, 5} true;
  assume !($b37);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 3084, 3} true;
  $p5 := $p38;
  $p6 := $p36;
  goto $bb6;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 3090, 3} true;
  goto $bb24;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 3092, 1} true;
  return;
}
procedure PptEcrClearMode(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5670, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5677, 3} true;
  $p := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5677, 3} true;
  $p1 := $pa($pa($p, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5678, 3} true;
  $p2 := $pa($pa(Extension, 0, 448), 256, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5678, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 5678, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5679, 3} true;
  $p4 := $pa($pa(Extension, 0, 448), 256, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5679, 3} true;
  $M.0[$p4] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5680, 3} true;
  $p5 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5680, 3} true;
  $p6 := $pa($pa($p5, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5680, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 5680, 3} true;
  $p8 := $pa($p7, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5680, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5681, 3} true;
  $p9 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 5681, 3} true;
  $p10 := $and($p9, 31);
  assume {:sourceloc "parport_true.i.cil.c", 5681, 3} true;
  $p11 := $trunc($p10, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5681, 3} true;
  call WRITE_PORT_UCHAR($p8, $p11);
  assume {:sourceloc "parport_true.i.cil.c", 5682, 3} true;
  call WRITE_PORT_UCHAR($p8, $p3);
  assume {:sourceloc "parport_true.i.cil.c", 5684, 3} true;
  $r := 0;
  return;
}
procedure PptEcrSetMode(Extension: int, ChipMode: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5581, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5581, 60} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5589, 3} true;
  $p := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5589, 3} true;
  $p1 := $pa($pa($p, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5590, 3} true;
  $p2 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5590, 3} true;
  $p3 := $pa($pa($p2, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5590, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 5590, 3} true;
  $p5 := $pa($p4, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5590, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5594, 9} true;
  call $p6 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 5594, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5595, 3} true;
  $p7 := $pa($pa(Extension, 0, 448), 256, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5595, 3} true;
  $M.0[$p7] := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 5596, 3} true;
  $p8 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 5596, 3} true;
  $p9 := $and($p8, 31);
  assume {:sourceloc "parport_true.i.cil.c", 5596, 3} true;
  $p10 := $trunc($p9, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5596, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5597, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 5597, 3} true;
  $p12 := $or($p11, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5597, 3} true;
  $p13 := $trunc($p12, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5597, 3} true;
  call WRITE_PORT_UCHAR($p5, $p13);
  assume {:sourceloc "parport_true.i.cil.c", 5598, 3} true;
  call WRITE_PORT_UCHAR($p5, ChipMode);
  assume {:sourceloc "parport_true.i.cil.c", 5602, 3} true;
  $r := 0;
  return;
}
procedure PptFailRequest(Irp: int, Status: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8404, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8404, 45} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8409, 3} true;
  $p := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8409, 3} true;
  $p1 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8409, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8409, 3} true;
  $M.0[$p2] := Status;
  assume {:sourceloc "parport_true.i.cil.c", 8410, 3} true;
  $M.24[myStatus] := Status;
  assume {:sourceloc "parport_true.i.cil.c", 8411, 3} true;
  $p3 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8411, 3} true;
  $p4 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8411, 3} true;
  $M.0[$p4] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 8412, 3} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8414, 3} true;
  $r := Status;
  return;
}
procedure PptFindNatChip(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b100: bool;
  var $b104: bool;
  var $b112: bool;
  var $b114: bool;
  var $b116: bool;
  var $b118: bool;
  var $b120: bool;
  var $b122: bool;
  var $b124: bool;
  var $b126: bool;
  var $b139: bool;
  var $b144: bool;
  var $b148: bool;
  var $b149: bool;
  var $b15: bool;
  var $b22: bool;
  var $b27: bool;
  var $b34: bool;
  var $b36: bool;
  var $b40: bool;
  var $b42: bool;
  var $b46: bool;
  var $b57: bool;
  var $b61: bool;
  var $b64: bool;
  var $b67: bool;
  var $b76: bool;
  var $b78: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p101: int;
  var $p102: int;
  var $p103: int;
  var $p105: int;
  var $p106: int;
  var $p107: int;
  var $p108: int;
  var $p109: int;
  var $p11: int;
  var $p110: int;
  var $p111: int;
  var $p113: int;
  var $p115: int;
  var $p117: int;
  var $p119: int;
  var $p12: int;
  var $p121: int;
  var $p123: int;
  var $p125: int;
  var $p127: int;
  var $p128: int;
  var $p129: int;
  var $p13: int;
  var $p130: int;
  var $p131: int;
  var $p132: int;
  var $p133: int;
  var $p134: int;
  var $p135: int;
  var $p136: int;
  var $p137: int;
  var $p138: int;
  var $p14: int;
  var $p140: int;
  var $p141: int;
  var $p142: int;
  var $p143: int;
  var $p145: int;
  var $p146: int;
  var $p147: int;
  var $p150: int;
  var $p151: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p35: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p41: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p62: int;
  var $p63: int;
  var $p65: int;
  var $p66: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p75: int;
  var $p77: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p83: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p88: int;
  var $p89: int;
  var $p9: int;
  var $p90: int;
  var $p91: int;
  var $p92: int;
  var $p93: int;
  var $p94: int;
  var $p95: int;
  var $p96: int;
  var $p97: int;
  var $p98: int;
  var $p99: int;
$bb0:
  call $p := $alloca($mul(1, 1));
  call $p1 := $alloca($mul(16, 1));
  call $p2 := $alloca($mul(16, 1));
  assume {:sourceloc "parport_true.i.cil.c", 5687, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5690, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5691, 10} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5692, 10} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5716, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5717, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5718, 3} true;
  $p3 := $pa($pa($p1, 0, 16), 0, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5718, 3} true;
  $M.0[$p3] := $i2p(920);
  assume {:sourceloc "parport_true.i.cil.c", 5719, 3} true;
  $p4 := $pa($pa($p1, 0, 16), 1, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5719, 3} true;
  $M.0[$p4] := $i2p(622);
  assume {:sourceloc "parport_true.i.cil.c", 5720, 3} true;
  $p5 := $pa($pa($p1, 0, 16), 2, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5720, 3} true;
  $M.0[$p5] := $i2p(348);
  assume {:sourceloc "parport_true.i.cil.c", 5721, 3} true;
  $p6 := $pa($pa($p1, 0, 16), 3, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5721, 3} true;
  $M.0[$p6] := $i2p(46);
  assume {:sourceloc "parport_true.i.cil.c", 5722, 3} true;
  $p7 := $pa($pa($p2, 0, 16), 0, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5722, 3} true;
  $M.11[$p7] := $i2p(888);
  assume {:sourceloc "parport_true.i.cil.c", 5723, 3} true;
  $p8 := $pa($pa($p2, 0, 16), 1, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5723, 3} true;
  $M.11[$p8] := $i2p(956);
  assume {:sourceloc "parport_true.i.cil.c", 5724, 3} true;
  $p9 := $pa($pa($p2, 0, 16), 2, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5724, 3} true;
  $M.11[$p9] := $i2p(632);
  assume {:sourceloc "parport_true.i.cil.c", 5725, 3} true;
  $p10 := $pa($pa($p2, 0, 16), 3, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5725, 3} true;
  $M.11[$p10] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 5726, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5727, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5728, 3} true;
  $p11 := $pa($pa(Extension, 0, 448), 253, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5728, 3} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 5728, 3} true;
  $p13 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 5728, 3} true;
  $b := ($p13 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 5728, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5731, 5} true;
  $p28 := 0;
  goto $bb20;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5728, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5728, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5735, 3} true;
  $p14 := $pa($pa(Extension, 0, 448), 253, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5735, 3} true;
  $M.0[$p14] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 5736, 3} true;
  $b15 := (0 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5736, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5737, 5} true;
  $b149 := (0 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5737, 5} true;
  goto $bb150, $bb151;
$bb7:
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 5736, 3} true;
  assume $b15;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5736, 3} true;
  assume !($b15);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5747, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5748, 3} true;
  $p16 := $sub(4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5748, 3} true;
  $p17 := $mul($p16, 16);
  assume {:sourceloc "parport_true.i.cil.c", 5748, 3} true;
  $p18 := $add(36, $p17);
  assume {:sourceloc "parport_true.i.cil.c", 5748, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5749, 9} true;
  call $p19 := ExAllocatePoolWithTag(0, $p18, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 5749, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5750, 3} true;
  $p20 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 5750, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5752, 3} true;
  $p21 := $p2i($p20);
  assume {:sourceloc "parport_true.i.cil.c", 5752, 3} true;
  $b22 := ($p21 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 5752, 3} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 5755, 5} true;
  $p28 := -1073741823;
  goto $bb20;
$bb12:
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 5752, 3} true;
  assume $b22;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 5752, 3} true;
  assume !($b22);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 5760, 3} true;
  $p23 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 5760, 3} true;
  call $memset.0($p23, 0, $p18, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 5761, 12} true;
  $p24 := $pa($pa($p1, 0, 16), 0, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5761, 12} true;
  $p25 := $p24;
  assume {:sourceloc "parport_true.i.cil.c", 5761, 12} true;
  call $p26 := PptBuildResourceList(Extension, 4, $p25, $p20);
  assume {:sourceloc "parport_true.i.cil.c", 5761, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5764, 3} true;
  $b27 := $sge($p26, 0);
  assume {:sourceloc "parport_true.i.cil.c", 5764, 3} true;
  goto $bb18, $bb19;
$bb16:
  goto $bb21;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 5770, 5} true;
  $p28 := $p26;
  goto $bb20;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 5764, 3} true;
  assume $b27;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 5764, 3} true;
  assume !($b27);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 5956, 1} true;
  $r := $p28;
  return;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 5775, 12} true;
  $p29 := $pa($pa(Extension, 0, 448), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5775, 12} true;
  $p30 := $M.0[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 5775, 12} true;
  $p31 := $pa($pa(Extension, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5775, 12} true;
  $p32 := $M.0[$p31];
  assume {:sourceloc "parport_true.i.cil.c", 5775, 12} true;
  call $p33 := IoReportResourceUsage(0, $p30, $p20, 4, $p32, 0, 0, 0, $p);
  assume {:sourceloc "parport_true.i.cil.c", 5775, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5779, 3} true;
  $b34 := $sge($p33, 0);
  assume {:sourceloc "parport_true.i.cil.c", 5779, 3} true;
  goto $bb24, $bb25;
$bb22:
  goto $bb26;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 5782, 5} true;
  $p28 := $p33;
  goto $bb20;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 5779, 3} true;
  assume $b34;
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 5779, 3} true;
  assume !($b34);
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 5786, 3} true;
  $p35 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 5786, 3} true;
  $b36 := ($p35 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5786, 3} true;
  goto $bb29, $bb30;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 5789, 5} true;
  $p28 := -1073741823;
  goto $bb20;
$bb28:
  goto $bb31;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 5786, 3} true;
  assume $b36;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 5786, 3} true;
  assume !($b36);
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 5793, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5795, 3} true;
  $p37 := 0;
  $p38 := 0;
  $p39 := 0;
  goto $bb32;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 5795, 13} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 5797, 5} true;
  $b40 := ($p39 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5797, 5} true;
  goto $bb36, $bb37;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 5804, 7} true;
  goto $bb42;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 5798, 7} true;
  $p41 := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 5798, 7} true;
  $b42 := $slt($p41, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5798, 7} true;
  goto $bb40, $bb41;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 5797, 5} true;
  assume $b40;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 5797, 5} true;
  assume !($b40);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 5800, 7} true;
  goto $bb48;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 5801, 9} true;
  goto $bb42;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 5798, 7} true;
  assume $b42;
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 5798, 7} true;
  assume !($b42);
  goto $bb39;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 5941, 3} true;
  $p43 := $pa($pa(Extension, 0, 448), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5942, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5943, 3} true;
  $p44 := $pa($pa(Extension, 0, 448), 254, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5943, 3} true;
  $p45 := $M.0[$p44];
  assume {:sourceloc "parport_true.i.cil.c", 5943, 3} true;
  $b46 := ($p45 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5943, 3} true;
  goto $bb45, $bb46;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 5944, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5945, 3} true;
  goto $bb47;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 5946, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  goto $bb47;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 5943, 3} true;
  assume $b46;
  goto $bb43;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 5943, 3} true;
  assume !($b46);
  goto $bb44;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 5949, 12} true;
  $p47 := $pa($pa(Extension, 0, 448), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5949, 12} true;
  $p48 := $M.0[$p47];
  assume {:sourceloc "parport_true.i.cil.c", 5949, 12} true;
  $p49 := $pa($pa(Extension, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5949, 12} true;
  $p50 := $M.0[$p49];
  assume {:sourceloc "parport_true.i.cil.c", 5949, 12} true;
  call $p51 := IoReportResourceUsage(0, $p48, 0, 0, $p50, 0, 0, 0, $p);
  assume {:sourceloc "parport_true.i.cil.c", 5949, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5954, 3} true;
  $p28 := $p51;
  goto $bb20;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 5803, 5} true;
  goto $bb49;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 5807, 5} true;
  $p52 := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 5807, 5} true;
  $p53 := $pa($pa($p1, 0, 16), $p52, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5807, 5} true;
  $p54 := $M.0[$p53];
  assume {:sourceloc "parport_true.i.cil.c", 5807, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5808, 15} true;
  call $p55 := READ_PORT_UCHAR($p54);
  assume {:sourceloc "parport_true.i.cil.c", 5808, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5810, 5} true;
  $p56 := $p55;
  assume {:sourceloc "parport_true.i.cil.c", 5810, 5} true;
  $b57 := ($p56 == 136);
  assume {:sourceloc "parport_true.i.cil.c", 5810, 5} true;
  goto $bb52, $bb53;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 5812, 17} true;
  call $p146 := READ_PORT_UCHAR($p54);
  assume {:sourceloc "parport_true.i.cil.c", 5812, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5814, 7} true;
  $p147 := $p146;
  assume {:sourceloc "parport_true.i.cil.c", 5814, 7} true;
  $b148 := $slt($p147, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5814, 7} true;
  goto $bb145, $bb146;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 5819, 12} true;
  goto $bb54;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 5810, 5} true;
  assume $b57;
  goto $bb50;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 5810, 5} true;
  assume !($b57);
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 5822, 7} true;
  call $p58 := READ_PORT_UCHAR($p54);
  assume {:sourceloc "parport_true.i.cil.c", 5823, 12} true;
  call $p59 := READ_PORT_UCHAR($p54);
  assume {:sourceloc "parport_true.i.cil.c", 5823, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5825, 7} true;
  $p60 := $p59;
  assume {:sourceloc "parport_true.i.cil.c", 5825, 7} true;
  $b61 := ($p60 != 255);
  assume {:sourceloc "parport_true.i.cil.c", 5825, 7} true;
  goto $bb57, $bb58;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 5827, 19} true;
  call $p141 := READ_PORT_UCHAR($p54);
  assume {:sourceloc "parport_true.i.cil.c", 5827, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5829, 9} true;
  $p142 := $p141;
  assume {:sourceloc "parport_true.i.cil.c", 5829, 9} true;
  $p143 := $p59;
  assume {:sourceloc "parport_true.i.cil.c", 5829, 9} true;
  $b144 := ($p142 == $p143);
  assume {:sourceloc "parport_true.i.cil.c", 5829, 9} true;
  goto $bb140, $bb141;
$bb56:
  $p62 := $p38;
  goto $bb59;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 5825, 7} true;
  assume $b61;
  goto $bb55;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 5825, 7} true;
  assume !($b61);
  goto $bb56;
$bb59:
  $p63 := $p62;
  goto $bb60;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 5838, 5} true;
  $b64 := ($p63 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5838, 5} true;
  goto $bb63, $bb64;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 5840, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5841, 7} true;
  call WRITE_PORT_UCHAR($p54, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5842, 12} true;
  call $p102 := READ_PORT_UCHAR($p54);
  assume {:sourceloc "parport_true.i.cil.c", 5842, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5844, 7} true;
  $p103 := $p102;
  assume {:sourceloc "parport_true.i.cil.c", 5844, 7} true;
  $b104 := ($p103 == 8);
  assume {:sourceloc "parport_true.i.cil.c", 5844, 7} true;
  goto $bb89, $bb90;
$bb62:
  $p65 := $p63;
  $p66 := $p39;
  goto $bb65;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 5838, 5} true;
  assume $b64;
  goto $bb61;
$bb64:
  assume {:sourceloc "parport_true.i.cil.c", 5838, 5} true;
  assume !($b64);
  goto $bb62;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 5899, 5} true;
  $b67 := ($p66 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5899, 5} true;
  goto $bb68, $bb69;
$bb66:
  $p80 := $p66;
  goto $bb80;
$bb67:
  assume {:sourceloc "parport_true.i.cil.c", 5901, 17} true;
  call $p68 := READ_PORT_UCHAR($p54);
  assume {:sourceloc "parport_true.i.cil.c", 5901, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5902, 7} true;
  call WRITE_PORT_UCHAR($p54, 32);
  assume {:sourceloc "parport_true.i.cil.c", 5903, 7} true;
  $p69 := $pa($p54, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5903, 7} true;
  call WRITE_PORT_UCHAR($p69, 0);
  assume {:sourceloc "parport_true.i.cil.c", 5904, 17} true;
  $p70 := $pa($p54, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5904, 17} true;
  call $p71 := READ_PORT_UCHAR($p70);
  assume {:sourceloc "parport_true.i.cil.c", 5904, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5905, 7} true;
  $p72 := $p71;
  assume {:sourceloc "parport_true.i.cil.c", 5905, 7} true;
  $p73 := $and($p72, 248);
  assume {:sourceloc "parport_true.i.cil.c", 5905, 7} true;
  $p74 := $trunc($p73, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5905, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5907, 7} true;
  $p75 := $p74;
  assume {:sourceloc "parport_true.i.cil.c", 5907, 7} true;
  $b76 := ($p75 == 192);
  assume {:sourceloc "parport_true.i.cil.c", 5907, 7} true;
  goto $bb72, $bb73;
$bb68:
  assume {:sourceloc "parport_true.i.cil.c", 5899, 5} true;
  assume $b67;
  goto $bb66;
$bb69:
  assume {:sourceloc "parport_true.i.cil.c", 5899, 5} true;
  assume !($b67);
  goto $bb67;
$bb70:
  assume {:sourceloc "parport_true.i.cil.c", 5908, 9} true;
  goto $bb81;
$bb71:
  assume {:sourceloc "parport_true.i.cil.c", 5910, 9} true;
  $p77 := $p74;
  assume {:sourceloc "parport_true.i.cil.c", 5910, 9} true;
  $b78 := ($p77 == 160);
  assume {:sourceloc "parport_true.i.cil.c", 5910, 9} true;
  goto $bb76, $bb77;
$bb72:
  assume {:sourceloc "parport_true.i.cil.c", 5907, 7} true;
  assume $b76;
  goto $bb70;
$bb73:
  assume {:sourceloc "parport_true.i.cil.c", 5907, 7} true;
  assume !($b76);
  goto $bb71;
$bb74:
  assume {:sourceloc "parport_true.i.cil.c", 5910, 30} true;
  goto $bb81;
$bb75:
  assume {:sourceloc "parport_true.i.cil.c", 5930, 11} true;
  call WRITE_PORT_UCHAR($p54, $p68);
  $p79 := $p66;
  goto $bb78;
$bb76:
  assume {:sourceloc "parport_true.i.cil.c", 5910, 9} true;
  assume $b78;
  goto $bb74;
$bb77:
  assume {:sourceloc "parport_true.i.cil.c", 5910, 9} true;
  assume !($b78);
  goto $bb75;
$bb78:
  goto $bb79;
$bb79:
  assume {:sourceloc "parport_true.i.cil.c", 5934, 5} true;
  $p80 := $p79;
  goto $bb80;
$bb80:
  assume {:sourceloc "parport_true.i.cil.c", 5937, 5} true;
  $p81 := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 5937, 5} true;
  $p82 := $add($p81, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5937, 5} true;
  $p83 := $trunc($p82, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5937, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5938, 3} true;
  $p37 := $p83;
  $p38 := $p65;
  $p39 := $p80;
  goto $bb32;
$bb81:
  assume {:sourceloc "parport_true.i.cil.c", 5913, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5914, 11} true;
  call WRITE_PORT_UCHAR($p54, 7);
  assume {:sourceloc "parport_true.i.cil.c", 5915, 11} true;
  $p84 := $pa($p54, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5915, 11} true;
  call WRITE_PORT_UCHAR($p84, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5916, 11} true;
  call WRITE_PORT_UCHAR($p54, 96);
  assume {:sourceloc "parport_true.i.cil.c", 5917, 21} true;
  $p85 := $pa($p54, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5917, 21} true;
  call $p86 := READ_PORT_UCHAR($p85);
  assume {:sourceloc "parport_true.i.cil.c", 5917, 21} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5918, 11} true;
  $p87 := $p86;
  assume {:sourceloc "parport_true.i.cil.c", 5918, 11} true;
  $p88 := $shl($p87, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5918, 11} true;
  $p89 := $and($p88, 65280);
  assume {:sourceloc "parport_true.i.cil.c", 5918, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5919, 11} true;
  call WRITE_PORT_UCHAR($p54, 97);
  assume {:sourceloc "parport_true.i.cil.c", 5920, 21} true;
  $p90 := $pa($p54, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5920, 21} true;
  call $p91 := READ_PORT_UCHAR($p90);
  assume {:sourceloc "parport_true.i.cil.c", 5920, 21} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5921, 11} true;
  $p92 := $p91;
  assume {:sourceloc "parport_true.i.cil.c", 5921, 11} true;
  $p93 := $or($p89, $p92);
  assume {:sourceloc "parport_true.i.cil.c", 5921, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  $p94 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  $p95 := $pa($pa($p94, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  $p96 := $M.0[$p95];
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  $p97 := $p2i($p96);
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  $p98 := $i2p($p93);
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  $p99 := $p2i($p98);
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  $b100 := ($p97 == $p99);
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  goto $bb84, $bb85;
$bb82:
  assume {:sourceloc "parport_true.i.cil.c", 5924, 13} true;
  $p101 := $pa($pa(Extension, 0, 448), 254, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5924, 13} true;
  $M.0[$p101] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 5925, 11} true;
  goto $bb86;
$bb83:
  goto $bb86;
$bb84:
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  assume $b100;
  goto $bb82;
$bb85:
  assume {:sourceloc "parport_true.i.cil.c", 5923, 11} true;
  assume !($b100);
  goto $bb83;
$bb86:
  assume {:sourceloc "parport_true.i.cil.c", 5928, 9} true;
  $p79 := 1;
  goto $bb78;
$bb87:
  assume {:sourceloc "parport_true.i.cil.c", 5846, 19} true;
  $p106 := $pa($p54, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5846, 19} true;
  call $p107 := READ_PORT_UCHAR($p106);
  assume {:sourceloc "parport_true.i.cil.c", 5846, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5847, 9} true;
  $p108 := $p107;
  assume {:sourceloc "parport_true.i.cil.c", 5847, 9} true;
  $p109 := $and($p108, 240);
  assume {:sourceloc "parport_true.i.cil.c", 5847, 9} true;
  $p110 := $trunc($p109, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5847, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5849, 9} true;
  $p111 := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 5849, 9} true;
  $b112 := ($p111 == 16);
  assume {:sourceloc "parport_true.i.cil.c", 5849, 9} true;
  goto $bb94, $bb95;
$bb88:
  $p105 := $p39;
  goto $bb91;
$bb89:
  assume {:sourceloc "parport_true.i.cil.c", 5844, 7} true;
  assume $b104;
  goto $bb87;
$bb90:
  assume {:sourceloc "parport_true.i.cil.c", 5844, 7} true;
  assume !($b104);
  goto $bb88;
$bb91:
  assume {:sourceloc "parport_true.i.cil.c", 5896, 5} true;
  $p65 := 0;
  $p66 := $p105;
  goto $bb65;
$bb92:
  assume {:sourceloc "parport_true.i.cil.c", 5850, 11} true;
  goto $bb132;
$bb93:
  assume {:sourceloc "parport_true.i.cil.c", 5852, 11} true;
  $p113 := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 5852, 11} true;
  $b114 := ($p113 == 80);
  assume {:sourceloc "parport_true.i.cil.c", 5852, 11} true;
  goto $bb98, $bb99;
$bb94:
  assume {:sourceloc "parport_true.i.cil.c", 5849, 9} true;
  assume $b112;
  goto $bb92;
$bb95:
  assume {:sourceloc "parport_true.i.cil.c", 5849, 9} true;
  assume !($b112);
  goto $bb93;
$bb96:
  assume {:sourceloc "parport_true.i.cil.c", 5853, 13} true;
  goto $bb132;
$bb97:
  assume {:sourceloc "parport_true.i.cil.c", 5855, 13} true;
  $p115 := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 5855, 13} true;
  $b116 := ($p115 == 112);
  assume {:sourceloc "parport_true.i.cil.c", 5855, 13} true;
  goto $bb102, $bb103;
$bb98:
  assume {:sourceloc "parport_true.i.cil.c", 5852, 11} true;
  assume $b114;
  goto $bb96;
$bb99:
  assume {:sourceloc "parport_true.i.cil.c", 5852, 11} true;
  assume !($b114);
  goto $bb97;
$bb100:
  assume {:sourceloc "parport_true.i.cil.c", 5856, 15} true;
  goto $bb132;
$bb101:
  assume {:sourceloc "parport_true.i.cil.c", 5858, 15} true;
  $p117 := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 5858, 15} true;
  $b118 := ($p117 == 48);
  assume {:sourceloc "parport_true.i.cil.c", 5858, 15} true;
  goto $bb106, $bb107;
$bb102:
  assume {:sourceloc "parport_true.i.cil.c", 5855, 13} true;
  assume $b116;
  goto $bb100;
$bb103:
  assume {:sourceloc "parport_true.i.cil.c", 5855, 13} true;
  assume !($b116);
  goto $bb101;
$bb104:
  assume {:sourceloc "parport_true.i.cil.c", 5859, 17} true;
  goto $bb132;
$bb105:
  assume {:sourceloc "parport_true.i.cil.c", 5861, 17} true;
  $p119 := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 5861, 17} true;
  $b120 := ($p119 == 32);
  assume {:sourceloc "parport_true.i.cil.c", 5861, 17} true;
  goto $bb110, $bb111;
$bb106:
  assume {:sourceloc "parport_true.i.cil.c", 5858, 15} true;
  assume $b118;
  goto $bb104;
$bb107:
  assume {:sourceloc "parport_true.i.cil.c", 5858, 15} true;
  assume !($b118);
  goto $bb105;
$bb108:
  assume {:sourceloc "parport_true.i.cil.c", 5862, 19} true;
  goto $bb132;
$bb109:
  assume {:sourceloc "parport_true.i.cil.c", 5864, 19} true;
  $p121 := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 5864, 19} true;
  $b122 := ($p121 == 144);
  assume {:sourceloc "parport_true.i.cil.c", 5864, 19} true;
  goto $bb114, $bb115;
$bb110:
  assume {:sourceloc "parport_true.i.cil.c", 5861, 17} true;
  assume $b120;
  goto $bb108;
$bb111:
  assume {:sourceloc "parport_true.i.cil.c", 5861, 17} true;
  assume !($b120);
  goto $bb109;
$bb112:
  assume {:sourceloc "parport_true.i.cil.c", 5865, 21} true;
  goto $bb132;
$bb113:
  assume {:sourceloc "parport_true.i.cil.c", 5867, 21} true;
  $p123 := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 5867, 21} true;
  $b124 := ($p123 == 176);
  assume {:sourceloc "parport_true.i.cil.c", 5867, 21} true;
  goto $bb118, $bb119;
$bb114:
  assume {:sourceloc "parport_true.i.cil.c", 5864, 19} true;
  assume $b122;
  goto $bb112;
$bb115:
  assume {:sourceloc "parport_true.i.cil.c", 5864, 19} true;
  assume !($b122);
  goto $bb113;
$bb116:
  assume {:sourceloc "parport_true.i.cil.c", 5868, 23} true;
  goto $bb132;
$bb117:
  assume {:sourceloc "parport_true.i.cil.c", 5870, 23} true;
  $p125 := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 5870, 23} true;
  $b126 := ($p125 == 96);
  assume {:sourceloc "parport_true.i.cil.c", 5870, 23} true;
  goto $bb122, $bb123;
$bb118:
  assume {:sourceloc "parport_true.i.cil.c", 5867, 21} true;
  assume $b124;
  goto $bb116;
$bb119:
  assume {:sourceloc "parport_true.i.cil.c", 5867, 21} true;
  assume !($b124);
  goto $bb117;
$bb120:
  assume {:sourceloc "parport_true.i.cil.c", 5870, 43} true;
  goto $bb132;
$bb121:
  $p127 := $p39;
  goto $bb124;
$bb122:
  assume {:sourceloc "parport_true.i.cil.c", 5870, 23} true;
  assume $b126;
  goto $bb120;
$bb123:
  assume {:sourceloc "parport_true.i.cil.c", 5870, 23} true;
  assume !($b126);
  goto $bb121;
$bb124:
  goto $bb125;
$bb125:
  goto $bb126;
$bb126:
  goto $bb127;
$bb127:
  goto $bb128;
$bb128:
  goto $bb129;
$bb129:
  goto $bb130;
$bb130:
  goto $bb131;
$bb131:
  assume {:sourceloc "parport_true.i.cil.c", 5893, 7} true;
  $p105 := $p127;
  goto $bb91;
$bb132:
  assume {:sourceloc "parport_true.i.cil.c", 5873, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5874, 25} true;
  call WRITE_PORT_UCHAR($p54, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5875, 35} true;
  $p128 := $pa($p54, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5875, 35} true;
  call $p129 := READ_PORT_UCHAR($p128);
  assume {:sourceloc "parport_true.i.cil.c", 5875, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5876, 25} true;
  $p130 := $p129;
  assume {:sourceloc "parport_true.i.cil.c", 5876, 25} true;
  $p131 := $and($p130, 3);
  assume {:sourceloc "parport_true.i.cil.c", 5876, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  $p132 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  $p133 := $pa($pa($p132, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  $p134 := $M.0[$p133];
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  $p135 := $p2i($p134);
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  $p136 := $pa($pa($p2, 0, 16), $p131, 4);
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  $p137 := $M.11[$p136];
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  $p138 := $p2i($p137);
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  $b139 := ($p135 == $p138);
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  goto $bb135, $bb136;
$bb133:
  assume {:sourceloc "parport_true.i.cil.c", 5879, 27} true;
  $p140 := $pa($pa(Extension, 0, 448), 254, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5879, 27} true;
  $M.0[$p140] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 5880, 25} true;
  goto $bb137;
$bb134:
  goto $bb137;
$bb135:
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  assume $b139;
  goto $bb133;
$bb136:
  assume {:sourceloc "parport_true.i.cil.c", 5878, 25} true;
  assume !($b139);
  goto $bb134;
$bb137:
  assume {:sourceloc "parport_true.i.cil.c", 5883, 23} true;
  $p127 := 1;
  goto $bb124;
$bb138:
  assume {:sourceloc "parport_true.i.cil.c", 5830, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5831, 9} true;
  $p145 := 1;
  goto $bb142;
$bb139:
  $p145 := $p38;
  goto $bb142;
$bb140:
  assume {:sourceloc "parport_true.i.cil.c", 5829, 9} true;
  assume $b144;
  goto $bb138;
$bb141:
  assume {:sourceloc "parport_true.i.cil.c", 5829, 9} true;
  assume !($b144);
  goto $bb139;
$bb142:
  assume {:sourceloc "parport_true.i.cil.c", 5834, 7} true;
  $p62 := $p145;
  goto $bb59;
$bb143:
  assume {:sourceloc "parport_true.i.cil.c", 5815, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5816, 7} true;
  goto $bb147;
$bb144:
  assume {:sourceloc "parport_true.i.cil.c", 5817, 9} true;
  goto $bb54;
$bb145:
  assume {:sourceloc "parport_true.i.cil.c", 5814, 7} true;
  assume $b148;
  goto $bb143;
$bb146:
  assume {:sourceloc "parport_true.i.cil.c", 5814, 7} true;
  assume !($b148);
  goto $bb144;
$bb147:
  assume {:sourceloc "parport_true.i.cil.c", 5819, 5} true;
  $p63 := 1;
  goto $bb60;
$bb148:
  assume {:sourceloc "parport_true.i.cil.c", 5738, 7} true;
  $p151 := $pa($pa(Extension, 0, 448), 254, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5738, 7} true;
  $M.0[$p151] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 5739, 5} true;
  goto $bb152;
$bb149:
  assume {:sourceloc "parport_true.i.cil.c", 5740, 7} true;
  $p150 := $pa($pa(Extension, 0, 448), 254, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5740, 7} true;
  $M.0[$p150] := 0;
  goto $bb152;
$bb150:
  assume {:sourceloc "parport_true.i.cil.c", 5737, 5} true;
  assume $b149;
  goto $bb148;
$bb151:
  assume {:sourceloc "parport_true.i.cil.c", 5737, 5} true;
  assume !($b149);
  goto $bb149;
$bb152:
  assume {:sourceloc "parport_true.i.cil.c", 5742, 5} true;
  $p28 := 0;
  goto $bb20;
}
procedure PptFreePort(Extension: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b13: bool;
  var $b16: bool;
  var $b17: bool;
  var $b20: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p14: int;
  var $p15: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(1, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8897, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8899, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8900, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8905, 3} true;
  $p2 := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 8905, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8909, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8909, 3} true;
  $p4 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8909, 3} true;
  $M.0[$p4] := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 8910, 3} true;
  call IoAcquireCancelSpinLock($p1);
  assume {:sourceloc "parport_true.i.cil.c", 8912, 3} true;
  $p5 := $pa($pa($p2, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8912, 3} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 8912, 3} true;
  $b := ($p6 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8912, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8914, 5} true;
  $p25 := $pa($pa($p2, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8914, 5} true;
  $p26 := $M.0[$p25];
  assume {:sourceloc "parport_true.i.cil.c", 8914, 5} true;
  $p27 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 8914, 5} true;
  call $p28 := KeSynchronizeExecution($p26, PptSynchronizedDecrement, $p27);
  assume {:sourceloc "parport_true.i.cil.c", 8917, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8919, 5} true;
  $p7 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 8919, 5} true;
  call $p8 := PptSynchronizedDecrement($p7);
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8912, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8912, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8924, 3} true;
  $p9 := $pa($pa($p2, 0, 448), 432, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8924, 3} true;
  $p10 := $pa($pa($p9, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8924, 3} true;
  $p11 := $M.0[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 8924, 3} true;
  $p12 := $add($p11, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8924, 3} true;
  $M.0[$p10] := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 8925, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8928, 3} true;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8928, 13} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 8930, 5} true;
  $b13 := (0 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8930, 5} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8937, 7} true;
  goto $bb16;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8931, 7} true;
  $p14 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8931, 7} true;
  $p15 := $M.0[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 8931, 7} true;
  $b16 := $sge($p15, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8931, 7} true;
  goto $bb14, $bb15;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8930, 5} true;
  assume $b13;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 8930, 5} true;
  assume !($b13);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 8933, 7} true;
  goto $bb27;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 8934, 9} true;
  goto $bb16;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 8931, 7} true;
  assume $b16;
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 8931, 7} true;
  assume !($b16);
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 8942, 3} true;
  $b17 := (0 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8942, 3} true;
  goto $bb19, $bb20;
$bb17:
  goto $bb26;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 8944, 5} true;
  call IoAcquireCancelSpinLock($p1);
  assume {:sourceloc "parport_true.i.cil.c", 8945, 5} true;
  $p18 := $pa($pa($p2, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8945, 5} true;
  $p19 := $M.0[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 8945, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8948, 5} true;
  $b20 := ($p19 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8948, 5} true;
  goto $bb23, $bb24;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 8942, 3} true;
  assume $b17;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 8942, 3} true;
  assume !($b17);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 8950, 7} true;
  $p21 := $pa($pa($p2, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8950, 7} true;
  $p22 := $M.0[$p21];
  assume {:sourceloc "parport_true.i.cil.c", 8950, 7} true;
  $p23 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 8950, 7} true;
  call $p24 := KeSynchronizeExecution($p22, PptTraversePortCheckList, $p23);
  assume {:sourceloc "parport_true.i.cil.c", 8953, 5} true;
  goto $bb25;
$bb22:
  goto $bb25;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 8948, 5} true;
  assume $b20;
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 8948, 5} true;
  assume !($b20);
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 8956, 3} true;
  goto $bb26;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 8961, 1} true;
  return;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 8936, 5} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 8939, 3} true;
  goto $bb6;
}
procedure PptFreePortDpc(Dpc: int, Extension: int, SystemArgument1: int, SystemArgument2: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8766, 27} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8766, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8766, 57} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8766, 81} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8771, 3} true;
  call PptFreePort(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 8775, 1} true;
  return;
}
procedure PptFreePortFromInterruptLevel(Context: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8789, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8793, 3} true;
  $p := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8793, 3} true;
  $p1 := $pa($pa($p, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8793, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8793, 3} true;
  $b := ($p2 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 8793, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8794, 5} true;
  $p6 := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8794, 5} true;
  $p7 := $pa($pa($p6, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8794, 5} true;
  $M.0[$p7] := -1;
  assume {:sourceloc "parport_true.i.cil.c", 8795, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8797, 5} true;
  $p3 := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8797, 5} true;
  $p4 := $pa($pa($p3, 0, 448), 220, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8797, 5} true;
  call $p5 := KeInsertQueueDpc($p4, 0, 0);
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8793, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8793, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8803, 1} true;
  return;
}
procedure PptGetPortNameFromPhysicalDeviceObject(PhysicalDeviceObject: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $b12: bool;
  var $b15: bool;
  var $b18: bool;
  var $b23: bool;
  var $b34: bool;
  var $b37: bool;
  var $b42: bool;
  var $b8: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p13: int;
  var $p14: int;
  var $p16: int;
  var $p17: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p35: int;
  var $p36: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p43: int;
  var $p44: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(4, 1));
  call $p1 := $alloca($mul(4, 1));
  call $p2 := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8481, 61} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8483, 10} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8486, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8488, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8497, 12} true;
  call $p3 := IoOpenDeviceRegistryKey(PhysicalDeviceObject, 1, 2031616, $p);
  assume {:sourceloc "parport_true.i.cil.c", 8497, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8499, 3} true;
  $b := $sge($p3, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8499, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8502, 5} true;
  $p4 := 0;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8499, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8499, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8604, 1} true;
  $r := $p4;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8507, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8508, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8510, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8513, 3} true;
  $p5 := 0;
  $p6 := -1073741789;
  $p7 := 0;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 8513, 13} true;
  goto $bb8;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8515, 5} true;
  $b8 := ($p6 == -1073741789);
  assume {:sourceloc "parport_true.i.cil.c", 8515, 5} true;
  goto $bb11, $bb12;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8517, 5} true;
  goto $bb40;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8518, 7} true;
  goto $bb13;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 8515, 5} true;
  assume $b8;
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 8515, 5} true;
  assume !($b8);
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 8553, 3} true;
  $p9 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8553, 3} true;
  call $p10 := ZwClose($p9);
  assume {:sourceloc "parport_true.i.cil.c", 8555, 3} true;
  $b11 := $sge($p6, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8555, 3} true;
  goto $bb16, $bb17;
$bb14:
  goto $bb23;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 8556, 5} true;
  $b12 := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8556, 5} true;
  goto $bb20, $bb21;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 8555, 3} true;
  assume $b11;
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 8555, 3} true;
  assume !($b11);
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 8560, 5} true;
  goto $bb22;
$bb19:
  goto $bb22;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 8556, 5} true;
  assume $b12;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 8556, 5} true;
  assume !($b12);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 8565, 5} true;
  $p4 := 0;
  goto $bb5;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 8569, 3} true;
  $p13 := $pa($pa($p5, 0, 24), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8569, 3} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 8569, 3} true;
  $b15 := ($p14 != 1);
  assume {:sourceloc "parport_true.i.cil.c", 8569, 3} true;
  goto $bb26, $bb27;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 8570, 5} true;
  goto $bb32;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 8572, 5} true;
  $p16 := $pa($pa($p5, 0, 24), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8572, 5} true;
  $p17 := $M.0[$p16];
  assume {:sourceloc "parport_true.i.cil.c", 8572, 5} true;
  $b18 := ($p17 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8572, 5} true;
  goto $bb30, $bb31;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 8569, 3} true;
  assume $b15;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 8569, 3} true;
  assume !($b15);
  goto $bb25;
$bb28:
  goto $bb33;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 8572, 31} true;
  goto $bb32;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 8572, 5} true;
  assume $b18;
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 8572, 5} true;
  assume !($b18);
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 8579, 7} true;
  $p4 := 0;
  goto $bb5;
$bb33:
  goto $bb34;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 8585, 13} true;
  $p19 := $pa($pa($p5, 0, 24), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8585, 13} true;
  $p20 := $M.0[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 8585, 13} true;
  call $p21 := ExAllocatePoolWithTag(1, $p20, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 8585, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8586, 3} true;
  $p22 := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 8586, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8588, 3} true;
  $b23 := ($p22 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8588, 3} true;
  goto $bb37, $bb38;
$bb35:
  goto $bb39;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 8594, 5} true;
  $p4 := 0;
  goto $bb5;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 8588, 3} true;
  assume $b23;
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 8588, 3} true;
  assume !($b23);
  goto $bb36;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 8599, 3} true;
  $p24 := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 8599, 3} true;
  $p25 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 8599, 3} true;
  $p26 := $pa($pa($p5, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8599, 3} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 8599, 3} true;
  $p28 := $pa($p25, $p27, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8599, 3} true;
  $p29 := $pa($pa($p5, 0, 24), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8599, 3} true;
  $p30 := $M.0[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 8599, 3} true;
  call $memcpy.0.0($p24, $p28, $p30, 1, false);
  assume {:sourceloc "parport_true.i.cil.c", 8602, 3} true;
  $p4 := $p22;
  goto $bb5;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 8521, 14} true;
  $p31 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8521, 14} true;
  $p32 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 8521, 14} true;
  call $p33 := ZwQueryValueKey($p31, $p2, 1, $p32, $p7, $p1);
  assume {:sourceloc "parport_true.i.cil.c", 8521, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8523, 5} true;
  $b34 := ($p33 == -1073741789);
  assume {:sourceloc "parport_true.i.cil.c", 8523, 5} true;
  goto $bb43, $bb44;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 8524, 7} true;
  $b37 := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8524, 7} true;
  goto $bb48, $bb49;
$bb42:
  $p35 := $p5;
  $p36 := $p7;
  goto $bb45;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 8523, 5} true;
  assume $b34;
  goto $bb41;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 8523, 5} true;
  assume !($b34);
  goto $bb42;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 8549, 3} true;
  $p5 := $p35;
  $p6 := $p33;
  $p7 := $p36;
  goto $bb7;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 8528, 7} true;
  goto $bb50;
$bb47:
  goto $bb50;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 8524, 7} true;
  assume $b37;
  goto $bb46;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 8524, 7} true;
  assume !($b37);
  goto $bb47;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 8532, 13} true;
  $p38 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8532, 13} true;
  call $p39 := ExAllocatePoolWithTag(1, $p38, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 8532, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8533, 7} true;
  $p40 := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 8533, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8534, 7} true;
  $p41 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8534, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8536, 7} true;
  $b42 := ($p40 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8536, 7} true;
  goto $bb53, $bb54;
$bb51:
  goto $bb55;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 8540, 9} true;
  $p43 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8540, 9} true;
  call $p44 := ZwClose($p43);
  assume {:sourceloc "parport_true.i.cil.c", 8542, 9} true;
  $p4 := 0;
  goto $bb5;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 8536, 7} true;
  assume $b42;
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 8536, 7} true;
  assume !($b42);
  goto $bb52;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 8546, 5} true;
  $p35 := $p40;
  $p36 := $p41;
  goto $bb45;
}
procedure PptGetPortNumberFromLptName(PortName: int, PortNumber: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b3: bool;
  var $b6: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p4: int;
  var $p5: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 9165, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9165, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9167, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9168, 24} true;
  call $p1 := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9168, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9171, 3} true;
  $b := ($p1 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 9171, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9174, 5} true;
  $p4 := -1073741823;
  goto $bb10;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9171, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9171, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9180, 12} true;
  call $p2 := RtlUnicodeStringToInteger($p, 10, PortNumber);
  assume {:sourceloc "parport_true.i.cil.c", 9180, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9182, 3} true;
  $b3 := $sge($p2, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9182, 3} true;
  goto $bb8, $bb9;
$bb6:
  goto $bb11;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9185, 5} true;
  $p4 := -1073741823;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 9182, 3} true;
  assume $b3;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 9182, 3} true;
  assume !($b3);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 9200, 1} true;
  $r := $p4;
  return;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 9189, 3} true;
  $p5 := $M.0[PortNumber];
  assume {:sourceloc "parport_true.i.cil.c", 9189, 3} true;
  $b6 := ($p5 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9189, 3} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 9192, 5} true;
  $p4 := -1073741823;
  goto $bb10;
$bb13:
  goto $bb16;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 9189, 3} true;
  assume $b6;
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 9189, 3} true;
  assume !($b6);
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 9198, 3} true;
  $p4 := 0;
  goto $bb10;
}
procedure PptInitializeDeviceExtension(DriverObject: int, PhysicalDeviceObject: int, DeviceObject: int, UniNameString: int, PortName: int, PortNumber: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p83: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p88: int;
  var $p89: int;
  var $p9: int;
  var $p90: int;
  var $p91: int;
  var $p92: int;
  var $p93: int;
  var $p94: int;
  var $p95: int;
  var $p96: int;
  var $p97: int;
  var $p98: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9098, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9098, 84} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9099, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9099, 85} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9100, 45} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9100, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9107, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9107, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 9107, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 9107, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9108, 3} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9108, 3} true;
  call $memset.0($p3, 0, 448, 8, false);
  assume {:sourceloc "parport_true.i.cil.c", 9109, 3} true;
  $p4 := $pa($pa($p2, 0, 448), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9109, 3} true;
  $M.0[$p4] := 2022144135;
  assume {:sourceloc "parport_true.i.cil.c", 9110, 3} true;
  $p5 := $pa($pa($p2, 0, 448), 444, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9110, 3} true;
  $M.0[$p5] := -2022144136;
  assume {:sourceloc "parport_true.i.cil.c", 9111, 3} true;
  $p6 := $pa($pa($p2, 0, 448), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9111, 3} true;
  $M.0[$p6] := DriverObject;
  assume {:sourceloc "parport_true.i.cil.c", 9112, 3} true;
  $p7 := $pa($pa($p2, 0, 448), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9112, 3} true;
  $M.0[$p7] := PhysicalDeviceObject;
  assume {:sourceloc "parport_true.i.cil.c", 9113, 3} true;
  $p8 := $pa($pa($p2, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9113, 3} true;
  $M.0[$p8] := DeviceObject;
  assume {:sourceloc "parport_true.i.cil.c", 9114, 3} true;
  $p9 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9114, 3} true;
  $p10 := $pa($pa($p9, 0, 80), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9114, 3} true;
  $M.0[$p10] := PortNumber;
  assume {:sourceloc "parport_true.i.cil.c", 9115, 3} true;
  $p11 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9115, 3} true;
  call IoInitializeRemoveLockEx($p11, 1349673296, 1, 10, 24);
  assume {:sourceloc "parport_true.i.cil.c", 9116, 3} true;
  $p12 := $pa($pa($p2, 0, 448), 368, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9116, 3} true;
  $p13 := $pa($pa($p12, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9116, 3} true;
  $M.0[$p13] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 9117, 3} true;
  $p14 := $pa($pa($p2, 0, 448), 368, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9117, 3} true;
  $p15 := $pa($pa($p14, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9117, 3} true;
  $M.0[$p15] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9119, 3} true;
  $p16 := $pa($pa($p2, 0, 448), 336, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9119, 3} true;
  $p17 := $pa($pa($p16, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9119, 3} true;
  $M.0[$p17] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 9120, 3} true;
  $p18 := $pa($pa($p2, 0, 448), 336, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9120, 3} true;
  $p19 := $pa($pa($p18, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9120, 3} true;
  $M.0[$p19] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9122, 3} true;
  $p20 := $pa($pa($p2, 0, 448), 254, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9122, 3} true;
  $M.0[$p20] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9123, 3} true;
  $p21 := $pa($pa($p2, 0, 448), 253, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9123, 3} true;
  $M.0[$p21] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9124, 3} true;
  $p22 := $pa($pa($p2, 0, 448), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9124, 3} true;
  $p23 := $pa($pa($p2, 0, 448), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9124, 3} true;
  $p24 := $pa($pa($p23, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9124, 3} true;
  $M.0[$p24] := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 9125, 3} true;
  $p25 := $pa($pa($p2, 0, 448), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9125, 3} true;
  $p26 := $pa($pa($p25, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9125, 3} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 9125, 3} true;
  $p28 := $pa($pa($p2, 0, 448), 36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9125, 3} true;
  $p29 := $pa($pa($p28, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9125, 3} true;
  $M.0[$p29] := $p27;
  assume {:sourceloc "parport_true.i.cil.c", 9126, 3} true;
  $p30 := $pa($pa($p2, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9126, 3} true;
  $M.0[$p30] := -1;
  assume {:sourceloc "parport_true.i.cil.c", 9127, 3} true;
  $p31 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9127, 3} true;
  $p32 := $pa($pa($p31, 0, 32), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9127, 3} true;
  $M.0[$p32] := PptFreePort;
  assume {:sourceloc "parport_true.i.cil.c", 9128, 3} true;
  $p33 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9128, 3} true;
  $p34 := $pa($pa($p33, 0, 32), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9128, 3} true;
  $M.0[$p34] := PptTryAllocatePort;
  assume {:sourceloc "parport_true.i.cil.c", 9129, 3} true;
  $p35 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9129, 3} true;
  $p36 := $pa($pa($p35, 0, 32), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9129, 3} true;
  $M.0[$p36] := PptQueryNumWaiters;
  assume {:sourceloc "parport_true.i.cil.c", 9130, 3} true;
  $p37 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9130, 3} true;
  $p38 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9130, 3} true;
  $p39 := $pa($pa($p38, 0, 32), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9130, 3} true;
  $M.0[$p39] := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 9131, 3} true;
  $p40 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9131, 3} true;
  $p41 := $pa($pa($p40, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9131, 3} true;
  $M.0[$p41] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9132, 3} true;
  $p42 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9132, 3} true;
  $p43 := $pa($pa($p42, 0, 80), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9132, 3} true;
  $M.0[$p43] := PptSetChipMode;
  assume {:sourceloc "parport_true.i.cil.c", 9133, 3} true;
  $p44 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9133, 3} true;
  $p45 := $pa($pa($p44, 0, 80), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9133, 3} true;
  $M.0[$p45] := PptClearChipMode;
  assume {:sourceloc "parport_true.i.cil.c", 9134, 3} true;
  $p46 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9134, 3} true;
  $p47 := $pa($pa($p46, 0, 80), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9134, 3} true;
  $M.0[$p47] := PptTrySelectDevice;
  assume {:sourceloc "parport_true.i.cil.c", 9135, 3} true;
  $p48 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9135, 3} true;
  $p49 := $pa($pa($p48, 0, 80), 60, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9135, 3} true;
  $M.0[$p49] := PptDeselectDevice;
  assume {:sourceloc "parport_true.i.cil.c", 9136, 3} true;
  $p50 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9136, 3} true;
  $p51 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9136, 3} true;
  $p52 := $pa($pa($p51, 0, 80), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9136, 3} true;
  $M.0[$p52] := $p50;
  assume {:sourceloc "parport_true.i.cil.c", 9137, 3} true;
  $p53 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9137, 3} true;
  $p54 := $pa($pa($p53, 0, 80), 72, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9137, 3} true;
  $M.0[$p54] := PortName;
  assume {:sourceloc "parport_true.i.cil.c", 9138, 3} true;
  $p55 := $pa($pa($p2, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9138, 3} true;
  $p56 := $pa($pa($p2, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9138, 3} true;
  $p57 := $pa($pa($p56, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9138, 3} true;
  $M.0[$p57] := $p55;
  assume {:sourceloc "parport_true.i.cil.c", 9139, 3} true;
  $p58 := $pa($pa($p2, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9139, 3} true;
  $p59 := $pa($pa($p58, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9139, 3} true;
  $p60 := $M.0[$p59];
  assume {:sourceloc "parport_true.i.cil.c", 9139, 3} true;
  $p61 := $pa($pa($p2, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9139, 3} true;
  $p62 := $pa($pa($p61, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9139, 3} true;
  $M.0[$p62] := $p60;
  assume {:sourceloc "parport_true.i.cil.c", 9140, 3} true;
  $p63 := $pa($pa($p2, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9140, 3} true;
  $p64 := $pa($pa($p2, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9140, 3} true;
  $p65 := $pa($pa($p64, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9140, 3} true;
  $M.0[$p65] := $p63;
  assume {:sourceloc "parport_true.i.cil.c", 9141, 3} true;
  $p66 := $pa($pa($p2, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9141, 3} true;
  $p67 := $pa($pa($p66, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9141, 3} true;
  $p68 := $M.0[$p67];
  assume {:sourceloc "parport_true.i.cil.c", 9141, 3} true;
  $p69 := $pa($pa($p2, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9141, 3} true;
  $p70 := $pa($pa($p69, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9141, 3} true;
  $M.0[$p70] := $p68;
  assume {:sourceloc "parport_true.i.cil.c", 9142, 3} true;
  $p71 := $pa($pa($p2, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9142, 3} true;
  $M.0[$p71] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9143, 3} true;
  $p72 := $pa($pa($p2, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9143, 3} true;
  $M.0[$p72] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9144, 3} true;
  $p73 := $pa($pa($p2, 0, 448), 220, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9144, 3} true;
  $p74 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9144, 3} true;
  call KeInitializeDpc($p73, PptFreePortDpc, $p74);
  assume {:sourceloc "parport_true.i.cil.c", 9145, 3} true;
  $p75 := $pa($pa(UniNameString, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9145, 3} true;
  $p76 := $M.0[$p75];
  assume {:sourceloc "parport_true.i.cil.c", 9145, 3} true;
  $p77 := $p76;
  assume {:sourceloc "parport_true.i.cil.c", 9145, 3} true;
  $p78 := $add($p77, 2);
  assume {:sourceloc "parport_true.i.cil.c", 9145, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9146, 9} true;
  call $p79 := ExAllocatePoolWithTag(0, $p78, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 9146, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9147, 3} true;
  $p80 := $p79;
  assume {:sourceloc "parport_true.i.cil.c", 9147, 3} true;
  $p81 := $pa($pa($p2, 0, 448), 288, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9147, 3} true;
  $p82 := $pa($pa($p81, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9147, 3} true;
  $M.0[$p82] := $p80;
  assume {:sourceloc "parport_true.i.cil.c", 9149, 3} true;
  $p83 := $pa($pa($p2, 0, 448), 288, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9149, 3} true;
  $p84 := $pa($pa($p83, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9149, 3} true;
  $p85 := $M.0[$p84];
  assume {:sourceloc "parport_true.i.cil.c", 9149, 3} true;
  $b := ($p85 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 9149, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 9150, 5} true;
  $p86 := -1073741670;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9149, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9149, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9164, 1} true;
  $r := $p86;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 9155, 3} true;
  $p87 := $pa($pa($p2, 0, 448), 288, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9155, 3} true;
  $p88 := $pa($pa($p87, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9155, 3} true;
  $p89 := $M.0[$p88];
  assume {:sourceloc "parport_true.i.cil.c", 9155, 3} true;
  $p90 := $p89;
  assume {:sourceloc "parport_true.i.cil.c", 9155, 3} true;
  call $memset.0($p90, 0, $p78, 2, false);
  assume {:sourceloc "parport_true.i.cil.c", 9156, 3} true;
  $p91 := $pa($pa($p2, 0, 448), 288, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9156, 3} true;
  $p92 := $pa($pa($p91, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9156, 3} true;
  $M.0[$p92] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9157, 3} true;
  $p93 := $pa($pa(UniNameString, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9157, 3} true;
  $p94 := $M.0[$p93];
  assume {:sourceloc "parport_true.i.cil.c", 9157, 3} true;
  $p95 := $pa($pa($p2, 0, 448), 288, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9157, 3} true;
  $p96 := $pa($pa($p95, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9157, 3} true;
  $M.0[$p96] := $p94;
  assume {:sourceloc "parport_true.i.cil.c", 9159, 3} true;
  $p97 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9159, 3} true;
  $p98 := $pa($pa($p97, 0, 80), 68, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9159, 3} true;
  $M.0[$p98] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9160, 3} true;
  $M.30[Extension_FilterMode] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9162, 3} true;
  $p86 := 0;
  goto $bb5;
}
procedure PptInitiate1284_3(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b6: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 3894, 31} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3901, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3902, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3903, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3904, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3906, 3} true;
  $p := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 3906, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 3909, 5} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 3910, 20} true;
  $p1 := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 3910, 20} true;
  call $p2 := Ppt1284_3AssignAddress($p1);
  assume {:sourceloc "parport_true.i.cil.c", 3910, 20} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3911, 5} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 3912, 20} true;
  $p3 := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 3912, 20} true;
  call $p4 := Ppt1284_3AssignAddress($p3);
  assume {:sourceloc "parport_true.i.cil.c", 3912, 20} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3914, 5} true;
  $b := ($p2 != $p4);
  assume {:sourceloc "parport_true.i.cil.c", 3914, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 3915, 7} true;
  $p5 := $add($p, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3915, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3916, 7} true;
  $b6 := $ult($p5, 3);
  assume {:sourceloc "parport_true.i.cil.c", 3916, 7} true;
  goto $bb10, $bb11;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 3922, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 3914, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 3914, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 3927, 3} true;
  $r := $p4;
  return;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 3918, 7} true;
  goto $bb12;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 3919, 9} true;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 3916, 7} true;
  assume $b6;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 3916, 7} true;
  assume !($b6);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 3921, 5} true;
  goto $bb13;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 3924, 3} true;
  $p := $p5;
  goto $bb1;
}
procedure PptInterruptService(Interrupt: int, Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b17: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8804, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8804, 59} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8811, 3} true;
  $p := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 8811, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8812, 3} true;
  $p1 := $pa($pa($p, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8812, 3} true;
  $p2 := $pa($pa($p1, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8812, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 8812, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8814, 3} true;
  $p4 := $p3;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8814, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8816, 5} true;
  $p5 := $p2i($p4);
  assume {:sourceloc "parport_true.i.cil.c", 8816, 5} true;
  $p6 := $pa($pa($p, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8816, 5} true;
  $p7 := $p2i($p6);
  assume {:sourceloc "parport_true.i.cil.c", 8816, 5} true;
  $b := ($p5 != $p7);
  assume {:sourceloc "parport_true.i.cil.c", 8816, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8818, 5} true;
  goto $bb9;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8819, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8816, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8816, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 8834, 3} true;
  $p8 := 0;
  goto $bb8;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8836, 1} true;
  $r := $p8;
  return;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8822, 5} true;
  $p9 := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 8822, 5} true;
  $p10 := $pa($p9, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8822, 5} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 8822, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8823, 11} true;
  $p12 := $pa($pa($p11, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8823, 11} true;
  $p13 := $M.0[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 8823, 11} true;
  $p14 := $pa($pa($p11, 0, 24), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8823, 11} true;
  $p15 := $M.0[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 8823, 11} true;
  call $p16 := PptInterruptService(Interrupt, $p15);
  assume {:sourceloc "parport_true.i.cil.c", 8823, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8825, 5} true;
  $b17 := ($p16 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8825, 5} true;
  goto $bb12, $bb13;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8826, 7} true;
  $p8 := 1;
  goto $bb8;
$bb11:
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 8825, 5} true;
  assume $b17;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 8825, 5} true;
  assume !($b17);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 8830, 5} true;
  $p18 := $pa($pa($p4, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8830, 5} true;
  $p19 := $M.0[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 8830, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8831, 3} true;
  $p4 := $p19;
  goto $bb1;
}
procedure PptIsNecR98Machine()
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b33: bool;
  var $b35: bool;
  var $b37: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p34: int;
  var $p36: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(56, 1));
  call $p2 := $alloca($mul(8, 1));
  call $p3 := $alloca($mul(8, 1));
  call $p4 := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 3650, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3651, 28} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3653, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3654, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3655, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3662, 3} true;
  $p5 := $pa($pa($p2, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3662, 3} true;
  $M.0[$p5] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3663, 3} true;
  $p6 := $pa($pa($p2, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3663, 3} true;
  $M.0[$p6] := 32;
  assume {:sourceloc "parport_true.i.cil.c", 3664, 9} true;
  $p7 := $pa($pa($p2, 0, 8), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3664, 9} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 3664, 9} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 3664, 9} true;
  call $p10 := ExAllocatePoolWithTag(1, $p9, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 3664, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3665, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 3665, 3} true;
  $p12 := $pa($pa($p2, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3665, 3} true;
  $M.0[$p12] := $p11;
  assume {:sourceloc "parport_true.i.cil.c", 3667, 3} true;
  $p13 := $pa($pa($p2, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3667, 3} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 3667, 3} true;
  $b := ($p14 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3667, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 3668, 5} true;
  $p15 := 0;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 3667, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 3667, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 3718, 1} true;
  $r := $p15;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 3673, 3} true;
  $p16 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 3673, 3} true;
  call $memset.2($p16, 0, 56, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 3674, 3} true;
  $p17 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 3674, 3} true;
  $p18 := $pa($pa($p17, 0, 28), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3674, 3} true;
  $M.2[$p18] := 36;
  assume {:sourceloc "parport_true.i.cil.c", 3675, 3} true;
  $p19 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 3675, 3} true;
  $p20 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 3675, 3} true;
  $p21 := $pa($pa($p20, 0, 28), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3675, 3} true;
  $M.2[$p21] := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 3676, 3} true;
  $p22 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 3676, 3} true;
  $p23 := $pa($pa($p22, 0, 28), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3676, 3} true;
  $M.2[$p23] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 3677, 3} true;
  $p24 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 3677, 3} true;
  $p25 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 3677, 3} true;
  $p26 := $pa($pa($p25, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3677, 3} true;
  $M.2[$p26] := $p24;
  assume {:sourceloc "parport_true.i.cil.c", 3678, 3} true;
  $p27 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 3678, 3} true;
  $p28 := $pa($pa($p27, 0, 28), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3678, 3} true;
  $M.2[$p28] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 3679, 12} true;
  $p29 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3679, 12} true;
  $p30 := $M.3[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 3679, 12} true;
  $p31 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 3679, 12} true;
  call $p32 := RtlQueryRegistryValues(0, $p30, $p31, 0, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3679, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3681, 3} true;
  $b33 := $sge($p32, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3681, 3} true;
  goto $bb9, $bb10;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 3683, 15} true;
  call $p34 := RtlCompareUnicodeString($p2, $p3, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3683, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3685, 5} true;
  $b35 := ($p34 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 3685, 5} true;
  goto $bb13, $bb14;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 3709, 5} true;
  $p15 := 0;
  goto $bb5;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 3681, 3} true;
  assume $b33;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 3681, 3} true;
  assume !($b33);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 3686, 7} true;
  goto $bb22;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 3689, 17} true;
  call $p36 := RtlCompareUnicodeString($p2, $p4, 0);
  assume {:sourceloc "parport_true.i.cil.c", 3689, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3691, 7} true;
  $b37 := ($p36 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 3691, 7} true;
  goto $bb17, $bb18;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 3685, 5} true;
  assume $b35;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 3685, 5} true;
  assume !($b35);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 3691, 26} true;
  goto $bb22;
$bb16:
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 3691, 7} true;
  assume $b37;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 3691, 7} true;
  assume !($b37);
  goto $bb16;
$bb19:
  goto $bb20;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 3703, 3} true;
  goto $bb21;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 3716, 3} true;
  $p15 := 0;
  goto $bb5;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 3698, 9} true;
  $p15 := 1;
  goto $bb5;
}
procedure PptIsPci(Extension: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b13: bool;
  var $b16: bool;
  var $b18: bool;
  var $b26: bool;
  var $b32: bool;
  var $b41: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p14: int;
  var $p15: int;
  var $p17: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p42: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6349, 36} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6349, 53} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6362, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6363, 3} true;
  $p := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6363, 3} true;
  $p1 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 6363, 3} true;
  $p2 := $pa($pa($p1, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6363, 3} true;
  $p3 := $pa($pa($p2, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6363, 3} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 6363, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 6363, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6364, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6365, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6366, 3} true;
  $p6 := $pa($pa($p5, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6366, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 6366, 3} true;
  $p8 := $pa($pa($p7, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6366, 3} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 6366, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6367, 3} true;
  $p10 := $p2i($p9);
  assume {:sourceloc "parport_true.i.cil.c", 6367, 3} true;
  $b := ($p10 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 6367, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 6370, 5} true;
  $p19 := 0;
  goto $bb19;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 6367, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 6367, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 6374, 3} true;
  $p11 := $pa($pa($p9, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6374, 3} true;
  $p12 := $pa($pa($p11, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6374, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6375, 3} true;
  $b13 := ($p12 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6375, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 6378, 5} true;
  $p20 := $pa($pa($p12, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6378, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6379, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6381, 5} true;
  $p21 := 0;
  $p22 := 0;
  $p23 := 0;
  goto $bb21;
$bb7:
  $p14 := 0;
  $p15 := 0;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 6375, 3} true;
  assume $b13;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 6375, 3} true;
  assume !($b13);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 6423, 3} true;
  $b16 := $ugt($p14, 2);
  assume {:sourceloc "parport_true.i.cil.c", 6423, 3} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 6424, 5} true;
  goto $bb20;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 6426, 5} true;
  $p17 := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 6426, 5} true;
  $b18 := (1 == $p17);
  assume {:sourceloc "parport_true.i.cil.c", 6426, 5} true;
  goto $bb17, $bb18;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 6423, 3} true;
  assume $b16;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 6423, 3} true;
  assume !($b16);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 6426, 41} true;
  goto $bb20;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 6434, 7} true;
  $p19 := 0;
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 6426, 5} true;
  assume $b18;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 6426, 5} true;
  assume !($b18);
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 6438, 1} true;
  $r := $p19;
  return;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 6430, 7} true;
  $p19 := 1;
  goto $bb19;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 6381, 15} true;
  goto $bb22;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 6383, 7} true;
  $p24 := $pa($pa($p20, 0, 24), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6383, 7} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 6383, 7} true;
  $b26 := $ult($p21, $p25);
  assume {:sourceloc "parport_true.i.cil.c", 6383, 7} true;
  goto $bb25, $bb26;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 6385, 7} true;
  goto $bb28;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 6386, 9} true;
  goto $bb27;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 6383, 7} true;
  assume $b26;
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 6383, 7} true;
  assume !($b26);
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 6420, 3} true;
  $p14 := $p22;
  $p15 := $p23;
  goto $bb10;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 6388, 7} true;
  $p27 := $pa($pa($p20, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6388, 7} true;
  $p28 := $pa($pa($p27, 0, 16), $p21, 16);
  assume {:sourceloc "parport_true.i.cil.c", 6388, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6389, 7} true;
  $p29 := $pa($pa($p28, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6389, 7} true;
  $p30 := $M.0[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 6389, 7} true;
  $p31 := $p30;
  assume {:sourceloc "parport_true.i.cil.c", 6389, 7} true;
  $b32 := ($p31 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 6389, 7} true;
  goto $bb31, $bb32;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 6390, 9} true;
  goto $bb36;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 6393, 9} true;
  goto $bb33;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 6389, 7} true;
  assume $b32;
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 6389, 7} true;
  assume !($b32);
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 6411, 9} true;
  $p33 := $p22;
  $p34 := $p23;
  goto $bb34;
$bb34:
  goto $bb35;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 6416, 7} true;
  $p35 := $add($p21, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6416, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6417, 5} true;
  $p21 := $p35;
  $p22 := $p33;
  $p23 := $p34;
  goto $bb21;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 6396, 11} true;
  $p36 := $pa($pa($p28, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6396, 11} true;
  $p37 := $p36;
  assume {:sourceloc "parport_true.i.cil.c", 6396, 11} true;
  $p38 := $pa($pa($p37, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6396, 11} true;
  $p39 := $M.0[$p38];
  assume {:sourceloc "parport_true.i.cil.c", 6396, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6399, 11} true;
  $p40 := $add($p22, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6399, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6400, 11} true;
  $b41 := $ugt($p39, 8);
  assume {:sourceloc "parport_true.i.cil.c", 6400, 11} true;
  goto $bb39, $bb40;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 6403, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6404, 11} true;
  $p42 := 1;
  goto $bb41;
$bb38:
  $p42 := $p23;
  goto $bb41;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 6400, 11} true;
  assume $b41;
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 6400, 11} true;
  assume !($b41);
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 6407, 11} true;
  goto $bb42;
$bb42:
  $p33 := $p40;
  $p34 := $p42;
  goto $bb34;
}
procedure PptLegacyZipCheckDevice(Controller: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8079, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8085, 3} true;
  $p := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8085, 3} true;
  call WRITE_PORT_UCHAR($p, 6);
  assume {:sourceloc "parport_true.i.cil.c", 8086, 13} true;
  $p1 := $pa(Controller, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8086, 13} true;
  call $p2 := READ_PORT_UCHAR($p1);
  assume {:sourceloc "parport_true.i.cil.c", 8086, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8088, 3} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 8088, 3} true;
  $p4 := $and($p3, 8);
  assume {:sourceloc "parport_true.i.cil.c", 8088, 3} true;
  $b := ($p4 == 8);
  assume {:sourceloc "parport_true.i.cil.c", 8088, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8090, 5} true;
  $p6 := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8090, 5} true;
  call WRITE_PORT_UCHAR($p6, 4);
  assume {:sourceloc "parport_true.i.cil.c", 8091, 11} true;
  $p7 := $pa(Controller, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8091, 11} true;
  call $p8 := READ_PORT_UCHAR($p7);
  assume {:sourceloc "parport_true.i.cil.c", 8091, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8093, 5} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 8093, 5} true;
  $p10 := $and($p9, 8);
  assume {:sourceloc "parport_true.i.cil.c", 8093, 5} true;
  $b11 := ($p10 != 8);
  assume {:sourceloc "parport_true.i.cil.c", 8093, 5} true;
  goto $bb9, $bb10;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8088, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8088, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8101, 3} true;
  $p5 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8103, 1} true;
  $r := $p5;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 8094, 7} true;
  $p5 := 1;
  goto $bb6;
$bb8:
  goto $bb11;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8093, 5} true;
  assume $b11;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8093, 5} true;
  assume !($b11);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 8098, 3} true;
  goto $bb5;
}
procedure PptLegacyZipClockDiskModeByte(Controller: int, ModeByte: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8039, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8039, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8044, 3} true;
  call WRITE_PORT_UCHAR(Controller, ModeByte);
  assume {:sourceloc "parport_true.i.cil.c", 8045, 3} true;
  $p := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8045, 3} true;
  call WRITE_PORT_UCHAR($p, 4);
  assume {:sourceloc "parport_true.i.cil.c", 8046, 3} true;
  $p1 := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8046, 3} true;
  call WRITE_PORT_UCHAR($p1, 6);
  assume {:sourceloc "parport_true.i.cil.c", 8047, 3} true;
  $p2 := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8047, 3} true;
  call WRITE_PORT_UCHAR($p2, 4);
  assume {:sourceloc "parport_true.i.cil.c", 8048, 3} true;
  $p3 := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8048, 3} true;
  call WRITE_PORT_UCHAR($p3, 12);
  assume {:sourceloc "parport_true.i.cil.c", 8052, 1} true;
  return;
}
procedure PptLegacyZipClockPrtModeByte(Controller: int, ModeByte: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8053, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8053, 61} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8058, 3} true;
  call WRITE_PORT_UCHAR(Controller, ModeByte);
  assume {:sourceloc "parport_true.i.cil.c", 8059, 3} true;
  $p := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8059, 3} true;
  call WRITE_PORT_UCHAR($p, 12);
  assume {:sourceloc "parport_true.i.cil.c", 8060, 3} true;
  $p1 := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8060, 3} true;
  call WRITE_PORT_UCHAR($p1, 14);
  assume {:sourceloc "parport_true.i.cil.c", 8061, 3} true;
  $p2 := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8061, 3} true;
  call WRITE_PORT_UCHAR($p2, 12);
  assume {:sourceloc "parport_true.i.cil.c", 8062, 3} true;
  $p3 := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8062, 3} true;
  call WRITE_PORT_UCHAR($p3, 4);
  assume {:sourceloc "parport_true.i.cil.c", 8063, 3} true;
  $p4 := $pa(Controller, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8063, 3} true;
  call WRITE_PORT_UCHAR($p4, 12);
  assume {:sourceloc "parport_true.i.cil.c", 8067, 1} true;
  return;
}
procedure PptLegacyZipSetDiskMode(Controller: int, Mode: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8068, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8068, 56} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8069, 13} true;
  call $p := __VERIFIER_nondet_long();
  assume {:sourceloc "parport_true.i.cil.c", 8069, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8073, 3} true;
  $p1 := $pa($pa(LegacyZipModeQualifier___11, 0, 3), $p, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8073, 3} true;
  $p2 := $M.41[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8073, 3} true;
  call PptLegacyZipClockDiskModeByte(Controller, $p2);
  assume {:sourceloc "parport_true.i.cil.c", 8074, 3} true;
  call PptLegacyZipClockDiskModeByte(Controller, Mode);
  assume {:sourceloc "parport_true.i.cil.c", 8078, 1} true;
  return;
}
procedure PptLogError(DriverObject: int, DeviceObject: int, p#2: int, p#3: int, SequenceNumber: int, MajorFunctionCode: int, RetryCount: int, UniqueErrorValue: int, FinalStatus: int, SpecificIOStatus: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b13: bool;
  var $b17: bool;
  var $b23: bool;
  var $b27: bool;
  var $b35: bool;
  var $b43: bool;
  var $b49: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 2568, 33} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2568, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p2 := $p;
  $p3 := p#2;
  call $memcpy.0.0($p2, $p3, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 2568, 95} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p4 := $p1;
  $p5 := p#3;
  call $memcpy.0.0($p4, $p5, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 2569, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2569, 46} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2569, 69} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2570, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2570, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2570, 71} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2571, 27} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2580, 3} true;
  $p6 := DeviceObject;
  assume {:sourceloc "parport_true.i.cil.c", 2580, 3} true;
  $p7 := $p2i($p6);
  assume {:sourceloc "parport_true.i.cil.c", 2580, 3} true;
  $b := ($p7 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2580, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2581, 5} true;
  $p61 := DeviceObject;
  assume {:sourceloc "parport_true.i.cil.c", 2581, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2582, 3} true;
  $p9 := $p61;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 2583, 5} true;
  $p8 := DriverObject;
  assume {:sourceloc "parport_true.i.cil.c", 2583, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p9 := $p8;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2580, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2580, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2585, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2586, 3} true;
  $p10 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 2586, 3} true;
  $p11 := $pa($pa($p10, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2586, 3} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 2586, 3} true;
  $b13 := ($p12 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2586, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2587, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2588, 3} true;
  $p19 := 8;
  goto $bb15;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 2589, 5} true;
  $p14 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 2589, 5} true;
  $p15 := $pa($pa($p14, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2589, 5} true;
  $p16 := $M.0[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 2589, 5} true;
  $b17 := ($p16 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2589, 5} true;
  goto $bb12, $bb13;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 2586, 3} true;
  assume $b13;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 2586, 3} true;
  assume !($b13);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 2590, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2591, 5} true;
  $p18 := 8;
  goto $bb14;
$bb11:
  $p18 := 0;
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 2589, 5} true;
  assume $b17;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 2589, 5} true;
  assume !($b17);
  goto $bb11;
$bb14:
  $p19 := $p18;
  goto $bb15;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 2595, 3} true;
  $p20 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 2595, 3} true;
  $p21 := $pa($pa($p20, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2595, 3} true;
  $p22 := $M.0[$p21];
  assume {:sourceloc "parport_true.i.cil.c", 2595, 3} true;
  $b23 := ($p22 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2595, 3} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 2596, 5} true;
  $p58 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 2596, 5} true;
  $p59 := $add($p58, 8);
  assume {:sourceloc "parport_true.i.cil.c", 2596, 5} true;
  $p60 := $trunc($p59, 16);
  assume {:sourceloc "parport_true.i.cil.c", 2596, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2597, 3} true;
  $p29 := $p60;
  goto $bb25;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 2598, 5} true;
  $p24 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 2598, 5} true;
  $p25 := $pa($pa($p24, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2598, 5} true;
  $p26 := $M.0[$p25];
  assume {:sourceloc "parport_true.i.cil.c", 2598, 5} true;
  $b27 := ($p26 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2598, 5} true;
  goto $bb22, $bb23;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 2595, 3} true;
  assume $b23;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 2595, 3} true;
  assume !($b23);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 2599, 7} true;
  $p55 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 2599, 7} true;
  $p56 := $add($p55, 8);
  assume {:sourceloc "parport_true.i.cil.c", 2599, 7} true;
  $p57 := $trunc($p56, 16);
  assume {:sourceloc "parport_true.i.cil.c", 2599, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2600, 5} true;
  $p28 := $p57;
  goto $bb24;
$bb21:
  $p28 := $p19;
  goto $bb24;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 2598, 5} true;
  assume $b27;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 2598, 5} true;
  assume !($b27);
  goto $bb21;
$bb24:
  $p29 := $p28;
  goto $bb25;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 2605, 9} true;
  $p30 := $p29;
  assume {:sourceloc "parport_true.i.cil.c", 2605, 9} true;
  $p31 := $add(48, $p30);
  assume {:sourceloc "parport_true.i.cil.c", 2605, 9} true;
  $p32 := $trunc($p31, 8);
  assume {:sourceloc "parport_true.i.cil.c", 2605, 9} true;
  call $p33 := IoAllocateErrorLogEntry($p9, $p32);
  assume {:sourceloc "parport_true.i.cil.c", 2605, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2606, 3} true;
  $p34 := $p33;
  assume {:sourceloc "parport_true.i.cil.c", 2606, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2608, 3} true;
  $b35 := ($p34 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2608, 3} true;
  goto $bb28, $bb29;
$bb26:
  goto $bb31;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 2609, 5} true;
  goto $bb30;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 2608, 3} true;
  assume $b35;
  goto $bb26;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 2608, 3} true;
  assume !($b35);
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 2640, 1} true;
  return;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 2613, 3} true;
  $p36 := $pa($pa($p34, 0, 48), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2613, 3} true;
  $M.0[$p36] := SpecificIOStatus;
  assume {:sourceloc "parport_true.i.cil.c", 2614, 3} true;
  $p37 := $pa($pa($p34, 0, 48), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2614, 3} true;
  $M.0[$p37] := SequenceNumber;
  assume {:sourceloc "parport_true.i.cil.c", 2615, 3} true;
  $p38 := $pa($pa($p34, 0, 48), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2615, 3} true;
  $M.0[$p38] := MajorFunctionCode;
  assume {:sourceloc "parport_true.i.cil.c", 2616, 3} true;
  $p39 := $pa($pa($p34, 0, 48), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2616, 3} true;
  $M.0[$p39] := RetryCount;
  assume {:sourceloc "parport_true.i.cil.c", 2617, 3} true;
  $p40 := $pa($pa($p34, 0, 48), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2617, 3} true;
  $M.0[$p40] := UniqueErrorValue;
  assume {:sourceloc "parport_true.i.cil.c", 2618, 3} true;
  $p41 := $pa($pa($p34, 0, 48), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2618, 3} true;
  $M.0[$p41] := FinalStatus;
  assume {:sourceloc "parport_true.i.cil.c", 2619, 3} true;
  $p42 := $pa($pa($p34, 0, 48), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2619, 3} true;
  $M.0[$p42] := $p29;
  assume {:sourceloc "parport_true.i.cil.c", 2620, 3} true;
  $b43 := ($p29 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2620, 3} true;
  goto $bb34, $bb35;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 2622, 5} true;
  $p45 := $pa($pa($p34, 0, 48), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2622, 5} true;
  $p46 := $p45;
  assume {:sourceloc "parport_true.i.cil.c", 2622, 5} true;
  $p47 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 2622, 5} true;
  call $memcpy.0.0($p46, $p47, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 2624, 5} true;
  $p48 := $p29;
  assume {:sourceloc "parport_true.i.cil.c", 2624, 5} true;
  $b49 := $ugt($p48, 8);
  assume {:sourceloc "parport_true.i.cil.c", 2624, 5} true;
  goto $bb39, $bb40;
$bb33:
  goto $bb36;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 2620, 3} true;
  assume $b43;
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 2620, 3} true;
  assume !($b43);
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 2636, 3} true;
  $p44 := $p34;
  assume {:sourceloc "parport_true.i.cil.c", 2636, 3} true;
  call IoWriteErrorLogEntry($p44);
  assume {:sourceloc "parport_true.i.cil.c", 2638, 3} true;
  goto $bb30;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 2626, 7} true;
  $p50 := $pa($pa($p34, 0, 48), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2626, 7} true;
  $p51 := $pa($pa($p50, 0, 4), 0, 4);
  assume {:sourceloc "parport_true.i.cil.c", 2626, 7} true;
  $p52 := $p51;
  assume {:sourceloc "parport_true.i.cil.c", 2626, 7} true;
  $p53 := $pa($p52, 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2626, 7} true;
  $p54 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 2626, 7} true;
  call $memcpy.0.0($p53, $p54, 8, 1, false);
  assume {:sourceloc "parport_true.i.cil.c", 2629, 5} true;
  goto $bb41;
$bb38:
  goto $bb41;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 2624, 5} true;
  assume $b49;
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 2624, 5} true;
  assume !($b49);
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 2632, 3} true;
  goto $bb36;
}
procedure PptPnpAddDevice(pDriverObject: int, pPhysicalDeviceObject: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $b7: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6468, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6468, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6476, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6480, 19} true;
  call $p := PptBuildDeviceObject(pDriverObject, pPhysicalDeviceObject);
  assume {:sourceloc "parport_true.i.cil.c", 6480, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6482, 3} true;
  $p1 := $p2i($p);
  assume {:sourceloc "parport_true.i.cil.c", 6482, 3} true;
  $b := (0 == $p1);
  assume {:sourceloc "parport_true.i.cil.c", 6482, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 6485, 5} true;
  $p8 := -1073741823;
  goto $bb10;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 6482, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 6482, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 6490, 3} true;
  $p2 := $pa($pa($p, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6490, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 6490, 3} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 6490, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6491, 12} true;
  $p5 := $pa($pa($p4, 0, 448), 296, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6491, 12} true;
  call $p6 := IoRegisterDeviceInterface(pPhysicalDeviceObject, GUID_PARALLEL_DEVICE, 0, $p5);
  assume {:sourceloc "parport_true.i.cil.c", 6491, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6494, 3} true;
  $b7 := $sge($p6, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6494, 3} true;
  goto $bb8, $bb9;
$bb6:
  goto $bb11;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 6500, 5} true;
  $p8 := $p6;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 6494, 3} true;
  assume $b7;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 6494, 3} true;
  assume !($b7);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 6527, 1} true;
  $r := $p8;
  return;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 6505, 18} true;
  call $p9 := IoAttachDeviceToDeviceStack($p, pPhysicalDeviceObject);
  assume {:sourceloc "parport_true.i.cil.c", 6505, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6507, 3} true;
  $p10 := $p2i($p9);
  assume {:sourceloc "parport_true.i.cil.c", 6507, 3} true;
  $b11 := (0 == $p10);
  assume {:sourceloc "parport_true.i.cil.c", 6507, 3} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 6513, 5} true;
  $p8 := -1073741823;
  goto $bb10;
$bb13:
  goto $bb16;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 6507, 3} true;
  assume $b11;
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 6507, 3} true;
  assume !($b11);
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 6518, 3} true;
  $p12 := $pa($pa($p4, 0, 448), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6518, 3} true;
  $M.0[$p12] := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 6519, 9} true;
  call $p13 := IoGetConfigurationInformation();
  assume {:sourceloc "parport_true.i.cil.c", 6519, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6520, 3} true;
  $p14 := $pa($pa($p13, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6520, 3} true;
  $p15 := $M.7[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 6520, 3} true;
  $p16 := $add($p15, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6520, 3} true;
  $M.7[$p14] := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 6521, 3} true;
  $p17 := $pa($pa($p, 0, 184), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6521, 3} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 6521, 3} true;
  $p19 := $and($p18, -129);
  assume {:sourceloc "parport_true.i.cil.c", 6521, 3} true;
  $M.0[$p17] := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 6525, 3} true;
  $p8 := 0;
  goto $bb10;
}
procedure PptPnpBounceAndCatchPnpIrp(Extension: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b22: bool;
  var $b50: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p51: int;
  var $p52: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(16, 1));
  assume {:sourceloc "parport_true.i.cil.c", 7627, 55} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7627, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7629, 10} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7636, 3} true;
  $p1 := $pa($pa(Extension, 0, 448), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7636, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 7636, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7641, 3} true;
  $p3 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7641, 3} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 7641, 3} true;
  $p5 := $pa($pa($p4, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7641, 3} true;
  $p6 := $pa($pa($p5, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7641, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 7641, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 7641, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7642, 3} true;
  $p9 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7642, 3} true;
  $p10 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 7642, 3} true;
  $p11 := $pa($pa($p10, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7642, 3} true;
  $p12 := $pa($pa($p11, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7642, 3} true;
  $p13 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 7642, 3} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 7642, 3} true;
  $p15 := $pa($p14, -1, 36);
  assume {:sourceloc "parport_true.i.cil.c", 7642, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7643, 3} true;
  $p16 := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 7643, 3} true;
  $p17 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 7643, 3} true;
  call $memcpy.0.0($p16, $p17, $p2i($pa($pa(0, 0, 36), 28, 1)), 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 7644, 3} true;
  $p18 := $pa($pa($p15, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7644, 3} true;
  $M.0[$p18] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7646, 3} true;
  $p19 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 7646, 3} true;
  $p20 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 7646, 3} true;
  $b := ($p19 != $p20);
  assume {:sourceloc "parport_true.i.cil.c", 7646, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7648, 5} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 7650, 3} true;
  goto $bb10;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7651, 5} true;
  $p21 := $M.38[compRegistered];
  assume {:sourceloc "parport_true.i.cil.c", 7651, 5} true;
  $b22 := ($p21 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7651, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7646, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7646, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7653, 7} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 7655, 5} true;
  goto $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7656, 7} true;
  $M.38[compRegistered] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 7657, 7} true;
  $M.39[compFptr] := PptSynchCompletionRoutine;
  assume {:sourceloc "parport_true.i.cil.c", 7658, 7} true;
  $M.40[routine] := 0;
  goto $bb9;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7651, 5} true;
  assume $b22;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7651, 5} true;
  assume !($b22);
  goto $bb6;
$bb9:
  goto $bb10;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 7662, 3} true;
  $p23 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7662, 3} true;
  $p24 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 7662, 3} true;
  $p25 := $pa($pa($p24, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7662, 3} true;
  $p26 := $pa($pa($p25, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7662, 3} true;
  $p27 := $p26;
  assume {:sourceloc "parport_true.i.cil.c", 7662, 3} true;
  $p28 := $M.0[$p27];
  assume {:sourceloc "parport_true.i.cil.c", 7662, 3} true;
  $p29 := $pa($p28, -1, 36);
  assume {:sourceloc "parport_true.i.cil.c", 7662, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7663, 3} true;
  $p30 := $pa($pa($p29, 0, 36), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7663, 3} true;
  $M.0[$p30] := PptSynchCompletionRoutine;
  assume {:sourceloc "parport_true.i.cil.c", 7664, 3} true;
  $p31 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7664, 3} true;
  $p32 := $pa($pa($p29, 0, 36), 32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7664, 3} true;
  $M.0[$p32] := $p31;
  assume {:sourceloc "parport_true.i.cil.c", 7665, 3} true;
  $p33 := $pa($pa($p29, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7665, 3} true;
  $M.0[$p33] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7666, 3} true;
  $p34 := $pa($pa($p29, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7666, 3} true;
  $M.0[$p34] := 64;
  assume {:sourceloc "parport_true.i.cil.c", 7667, 3} true;
  $p35 := $pa($pa($p29, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7667, 3} true;
  $p36 := $M.0[$p35];
  assume {:sourceloc "parport_true.i.cil.c", 7667, 3} true;
  $p37 := $p36;
  assume {:sourceloc "parport_true.i.cil.c", 7667, 3} true;
  $p38 := $or($p37, 128);
  assume {:sourceloc "parport_true.i.cil.c", 7667, 3} true;
  $p39 := $trunc($p38, 8);
  assume {:sourceloc "parport_true.i.cil.c", 7667, 3} true;
  $p40 := $pa($pa($p29, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7667, 3} true;
  $M.0[$p40] := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 7668, 3} true;
  $p41 := $pa($pa($p29, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7668, 3} true;
  $p42 := $M.0[$p41];
  assume {:sourceloc "parport_true.i.cil.c", 7668, 3} true;
  $p43 := $p42;
  assume {:sourceloc "parport_true.i.cil.c", 7668, 3} true;
  $p44 := $or($p43, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7668, 3} true;
  $p45 := $trunc($p44, 8);
  assume {:sourceloc "parport_true.i.cil.c", 7668, 3} true;
  $p46 := $pa($pa($p29, 0, 36), 3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7668, 3} true;
  $M.0[$p46] := $p45;
  assume {:sourceloc "parport_true.i.cil.c", 7669, 12} true;
  call $p47 := IofCallDriver($p2, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7669, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7670, 3} true;
  $p48 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7670, 3} true;
  call $p49 := KeWaitForSingleObject($p48, 5, 0, 0, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7672, 3} true;
  $b50 := ($p47 == 259);
  assume {:sourceloc "parport_true.i.cil.c", 7672, 3} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 7673, 5} true;
  $p52 := $M.24[myStatus];
  assume {:sourceloc "parport_true.i.cil.c", 7673, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7674, 3} true;
  $p51 := $p52;
  goto $bb15;
$bb12:
  $p51 := $p47;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7672, 3} true;
  assume $b50;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 7672, 3} true;
  assume !($b50);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 7677, 3} true;
  $r := $p51;
  return;
}
procedure PptPnpBuildRemovalRelations(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b26: bool;
  var $b40: bool;
  var $b57: bool;
  var $b61: bool;
  var $b8: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p62: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p78: int;
  var $p79: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p83: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p88: int;
  var $p89: int;
  var $p9: int;
  var $p90: int;
  var $p91: int;
  var $p92: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6079, 65} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6102, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6103, 3} true;
  $p := $pa($pa(Extension, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6103, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6104, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6105, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6106, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6107, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6113, 3} true;
  $p1 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6113, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 6113, 3} true;
  $p3 := $p2i($p2);
  assume {:sourceloc "parport_true.i.cil.c", 6113, 3} true;
  $p4 := $p2i($p);
  assume {:sourceloc "parport_true.i.cil.c", 6113, 3} true;
  $b := ($p3 == $p4);
  assume {:sourceloc "parport_true.i.cil.c", 6113, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 6116, 5} true;
  $p58 := 0;
  goto $bb28;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 6113, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 6113, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 6120, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6122, 3} true;
  $p5 := 0;
  $p6 := 0;
  $p7 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 6122, 13} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 6124, 5} true;
  $b8 := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6124, 5} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 6127, 7} true;
  goto $bb23;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 6126, 5} true;
  goto $bb12;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 6124, 5} true;
  assume $b8;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 6124, 5} true;
  assume !($b8);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 6129, 5} true;
  $p9 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6129, 5} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 6129, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6130, 5} true;
  $p11 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6130, 5} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 6130, 5} true;
  $p13 := $pa($pa($p12, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6130, 5} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 6130, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6131, 5} true;
  $p15 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6131, 5} true;
  $p16 := $M.0[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 6131, 5} true;
  $p17 := $pa($pa($p16, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6131, 5} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 6131, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6132, 5} true;
  $p19 := $pa($pa($p18, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6132, 5} true;
  $M.0[$p19] := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 6133, 5} true;
  $p20 := $pa($pa($p14, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6133, 5} true;
  $M.0[$p20] := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 6134, 5} true;
  $p21 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 6134, 5} true;
  $p22 := $pa($p21, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6134, 5} true;
  $p23 := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 6134, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6135, 5} true;
  $p24 := $p2i($p6);
  assume {:sourceloc "parport_true.i.cil.c", 6135, 5} true;
  $p25 := $p2i($p10);
  assume {:sourceloc "parport_true.i.cil.c", 6135, 5} true;
  $b26 := ($p24 == $p25);
  assume {:sourceloc "parport_true.i.cil.c", 6135, 5} true;
  goto $bb15, $bb16;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 6136, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6137, 7} true;
  $p42 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6137, 7} true;
  $p43 := $M.0[$p42];
  assume {:sourceloc "parport_true.i.cil.c", 6137, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6138, 7} true;
  $p44 := $pa($pa($p23, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6138, 7} true;
  $p45 := $pa($pa($p44, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6138, 7} true;
  $M.0[$p45] := $p43;
  assume {:sourceloc "parport_true.i.cil.c", 6139, 7} true;
  $p46 := $pa($pa($p23, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6139, 7} true;
  $p47 := $pa($pa($p46, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6139, 7} true;
  $M.0[$p47] := $p;
  assume {:sourceloc "parport_true.i.cil.c", 6140, 7} true;
  $p48 := $pa($pa($p23, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6140, 7} true;
  $p49 := $pa($pa($p43, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6140, 7} true;
  $M.0[$p49] := $p48;
  assume {:sourceloc "parport_true.i.cil.c", 6141, 7} true;
  $p50 := $pa($pa($p23, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6141, 7} true;
  $p51 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6141, 7} true;
  $M.0[$p51] := $p50;
  assume {:sourceloc "parport_true.i.cil.c", 6142, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6145, 5} true;
  $p38 := 1;
  $p39 := $p7;
  goto $bb17;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 6148, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6149, 7} true;
  $p27 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6149, 7} true;
  $p28 := $M.0[$p27];
  assume {:sourceloc "parport_true.i.cil.c", 6149, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6150, 7} true;
  $p29 := $pa($pa($p23, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6150, 7} true;
  $p30 := $pa($pa($p29, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6150, 7} true;
  $M.0[$p30] := $p;
  assume {:sourceloc "parport_true.i.cil.c", 6151, 7} true;
  $p31 := $pa($pa($p23, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6151, 7} true;
  $p32 := $pa($pa($p31, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6151, 7} true;
  $M.0[$p32] := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 6152, 7} true;
  $p33 := $pa($pa($p23, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6152, 7} true;
  $p34 := $pa($pa($p28, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6152, 7} true;
  $M.0[$p34] := $p33;
  assume {:sourceloc "parport_true.i.cil.c", 6153, 7} true;
  $p35 := $pa($pa($p23, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6153, 7} true;
  $p36 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6153, 7} true;
  $M.0[$p36] := $p35;
  assume {:sourceloc "parport_true.i.cil.c", 6154, 7} true;
  $p37 := $add($p7, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6154, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p38 := $p5;
  $p39 := $p37;
  goto $bb17;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 6135, 5} true;
  assume $b26;
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 6135, 5} true;
  assume !($b26);
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 6156, 5} true;
  $b40 := ($p6 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6156, 5} true;
  goto $bb20, $bb21;
$bb18:
  $p41 := $p6;
  goto $bb22;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 6159, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6160, 5} true;
  $p41 := $p10;
  goto $bb22;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 6156, 5} true;
  assume $b40;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 6156, 5} true;
  assume !($b40);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 6163, 3} true;
  $p5 := $p38;
  $p6 := $p41;
  $p7 := $p39;
  goto $bb6;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 6169, 9} true;
  $p52 := $sub($p7, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6169, 9} true;
  $p53 := $mul($p52, 4);
  assume {:sourceloc "parport_true.i.cil.c", 6169, 9} true;
  $p54 := $add(8, $p53);
  assume {:sourceloc "parport_true.i.cil.c", 6169, 9} true;
  call $p55 := ExAllocatePoolWithTag(1, $p54, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 6169, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6171, 3} true;
  $p56 := $p55;
  assume {:sourceloc "parport_true.i.cil.c", 6171, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6173, 3} true;
  $b57 := ($p56 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6173, 3} true;
  goto $bb26, $bb27;
$bb24:
  goto $bb29;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 6176, 5} true;
  $p58 := $p56;
  goto $bb28;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 6173, 3} true;
  assume $b57;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 6173, 3} true;
  assume !($b57);
  goto $bb25;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 6217, 3} true;
  $r := $p58;
  return;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 6180, 3} true;
  $p59 := $pa($pa($p56, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6180, 3} true;
  $M.1[$p59] := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 6181, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6183, 3} true;
  $p60 := 0;
  goto $bb30;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 6183, 13} true;
  goto $bb31;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 6185, 5} true;
  $b61 := $ult($p60, $p7);
  assume {:sourceloc "parport_true.i.cil.c", 6185, 5} true;
  goto $bb34, $bb35;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 6187, 5} true;
  goto $bb37;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 6188, 7} true;
  goto $bb36;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 6185, 5} true;
  assume $b61;
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 6185, 5} true;
  assume !($b61);
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 6212, 3} true;
  $p58 := $p56;
  goto $bb28;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 6190, 5} true;
  $p62 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6190, 5} true;
  $p63 := $M.0[$p62];
  assume {:sourceloc "parport_true.i.cil.c", 6190, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6191, 5} true;
  $p64 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6191, 5} true;
  $p65 := $M.0[$p64];
  assume {:sourceloc "parport_true.i.cil.c", 6191, 5} true;
  $p66 := $pa($pa($p65, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6191, 5} true;
  $p67 := $M.0[$p66];
  assume {:sourceloc "parport_true.i.cil.c", 6191, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6192, 5} true;
  $p68 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6192, 5} true;
  $p69 := $M.0[$p68];
  assume {:sourceloc "parport_true.i.cil.c", 6192, 5} true;
  $p70 := $pa($pa($p69, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6192, 5} true;
  $p71 := $M.0[$p70];
  assume {:sourceloc "parport_true.i.cil.c", 6192, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6193, 5} true;
  $p72 := $pa($pa($p71, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6193, 5} true;
  $M.0[$p72] := $p67;
  assume {:sourceloc "parport_true.i.cil.c", 6194, 5} true;
  $p73 := $pa($pa($p67, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6194, 5} true;
  $M.0[$p73] := $p71;
  assume {:sourceloc "parport_true.i.cil.c", 6195, 5} true;
  $p74 := $p63;
  assume {:sourceloc "parport_true.i.cil.c", 6195, 5} true;
  $p75 := $pa($p74, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6195, 5} true;
  $p76 := $p75;
  assume {:sourceloc "parport_true.i.cil.c", 6195, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6199, 5} true;
  $p77 := $pa($pa($p76, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6199, 5} true;
  $p78 := $M.0[$p77];
  assume {:sourceloc "parport_true.i.cil.c", 6199, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6200, 5} true;
  $p79 := $p78;
  assume {:sourceloc "parport_true.i.cil.c", 6200, 5} true;
  call ObfReferenceObject($p79);
  assume {:sourceloc "parport_true.i.cil.c", 6201, 5} true;
  $p80 := $pa($pa($p56, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6201, 5} true;
  $p81 := $pa($pa($p80, 0, 4), $p60, 4);
  assume {:sourceloc "parport_true.i.cil.c", 6201, 5} true;
  $M.1[$p81] := $p78;
  assume {:sourceloc "parport_true.i.cil.c", 6202, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6203, 5} true;
  $p82 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6203, 5} true;
  $p83 := $M.0[$p82];
  assume {:sourceloc "parport_true.i.cil.c", 6203, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6204, 5} true;
  $p84 := $pa($pa($p76, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6204, 5} true;
  $p85 := $pa($pa($p84, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6204, 5} true;
  $M.0[$p85] := $p;
  assume {:sourceloc "parport_true.i.cil.c", 6205, 5} true;
  $p86 := $pa($pa($p76, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6205, 5} true;
  $p87 := $pa($pa($p86, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6205, 5} true;
  $M.0[$p87] := $p83;
  assume {:sourceloc "parport_true.i.cil.c", 6206, 5} true;
  $p88 := $pa($pa($p76, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6206, 5} true;
  $p89 := $pa($pa($p83, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6206, 5} true;
  $M.0[$p89] := $p88;
  assume {:sourceloc "parport_true.i.cil.c", 6207, 5} true;
  $p90 := $pa($pa($p76, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6207, 5} true;
  $p91 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6207, 5} true;
  $M.0[$p91] := $p90;
  assume {:sourceloc "parport_true.i.cil.c", 6208, 5} true;
  $p92 := $add($p60, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6208, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6210, 3} true;
  $p60 := $p92;
  goto $bb30;
}
procedure PptPnpCancelRemoveDevice(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7510, 50} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7510, 70} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7516, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7516, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7516, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 7516, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7519, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7519, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 7519, 3} true;
  $p5 := $and($p4, 256);
  assume {:sourceloc "parport_true.i.cil.c", 7519, 3} true;
  $b := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7519, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7520, 5} true;
  $p10 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7520, 5} true;
  $p11 := $M.0[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 7520, 5} true;
  $p12 := $and($p11, -65793);
  assume {:sourceloc "parport_true.i.cil.c", 7520, 5} true;
  $M.0[$p10] := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 7521, 3} true;
  goto $bb5;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7519, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7519, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7526, 3} true;
  $p6 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7526, 3} true;
  $p7 := $pa($pa($p6, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7526, 3} true;
  $p8 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 7526, 3} true;
  $M.0[$p8] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7527, 3} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7528, 9} true;
  call $p9 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p2, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7528, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7530, 3} true;
  $r := $p9;
  return;
}
procedure PptPnpCancelStopDevice(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7450, 48} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7450, 68} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7456, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7456, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7456, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 7456, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7459, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7459, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 7459, 3} true;
  $p5 := $and($p4, 16);
  assume {:sourceloc "parport_true.i.cil.c", 7459, 3} true;
  $b := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7459, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7460, 5} true;
  $p10 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7460, 5} true;
  $p11 := $M.0[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 7460, 5} true;
  $p12 := $and($p11, -65553);
  assume {:sourceloc "parport_true.i.cil.c", 7460, 5} true;
  $M.0[$p10] := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 7461, 3} true;
  goto $bb5;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7459, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7459, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7466, 3} true;
  $p6 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7466, 3} true;
  $p7 := $pa($pa($p6, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7466, 3} true;
  $p8 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 7466, 3} true;
  $M.0[$p8] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7467, 3} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7468, 9} true;
  call $p9 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p2, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7468, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7470, 3} true;
  $r := $p9;
  return;
}
procedure PptPnpFilterExistsNonIrqResourceList(ResourceRequirementsList: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b13: bool;
  var $b16: bool;
  var $b27: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p14: int;
  var $p15: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7110, 77} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7119, 3} true;
  $p := $pa($pa(ResourceRequirementsList, 0, 72), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7119, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7119, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7122, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7123, 3} true;
  $p2 := $pa($pa(ResourceRequirementsList, 0, 72), 32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7123, 3} true;
  $p3 := $pa($pa($p2, 0, 40), 0, 40);
  assume {:sourceloc "parport_true.i.cil.c", 7123, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7125, 3} true;
  $p4 := 0;
  $p5 := $p3;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7125, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7127, 5} true;
  $b := $ult($p4, $p1);
  assume {:sourceloc "parport_true.i.cil.c", 7127, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7129, 5} true;
  goto $bb9;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7130, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7127, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7127, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7174, 3} true;
  $p6 := 0;
  goto $bb8;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7176, 1} true;
  $r := $p6;
  return;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7134, 5} true;
  $p7 := $pa($pa($p5, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7134, 5} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 7134, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7135, 5} true;
  $p9 := $pa($pa($p5, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7135, 5} true;
  $p10 := $pa($pa($p9, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7135, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7136, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7138, 5} true;
  $p11 := $p8;
  $p12 := $p10;
  goto $bb10;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 7138, 15} true;
  goto $bb11;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 7140, 7} true;
  $b13 := ($p11 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7140, 7} true;
  goto $bb14, $bb15;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 7142, 7} true;
  goto $bb22;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7143, 9} true;
  $p14 := 0;
  goto $bb16;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 7140, 7} true;
  assume $b13;
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 7140, 7} true;
  assume !($b13);
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 7160, 5} true;
  $p15 := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 7160, 5} true;
  $b16 := ($p15 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 7160, 5} true;
  goto $bb19, $bb20;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 7163, 7} true;
  $p6 := 1;
  goto $bb8;
$bb18:
  goto $bb21;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 7160, 5} true;
  assume $b16;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 7160, 5} true;
  assume !($b16);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 7167, 5} true;
  $p17 := $pa($pa($p5, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7167, 5} true;
  $p18 := $pa($pa($p17, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7167, 5} true;
  $p19 := $pa($pa($p5, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7167, 5} true;
  $p20 := $M.0[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 7167, 5} true;
  $p21 := $pa($p18, $p20, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7167, 5} true;
  $p22 := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 7167, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7168, 5} true;
  $p23 := $add($p4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7168, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7169, 3} true;
  $p4 := $p23;
  $p5 := $p22;
  goto $bb1;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 7147, 7} true;
  $p24 := $pa($pa($p12, 0, 32), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7147, 7} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 7147, 7} true;
  $p26 := $p25;
  assume {:sourceloc "parport_true.i.cil.c", 7147, 7} true;
  $b27 := ($p26 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 7147, 7} true;
  goto $bb25, $bb26;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 7150, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7151, 9} true;
  $p14 := 1;
  goto $bb16;
$bb24:
  goto $bb27;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 7147, 7} true;
  assume $b27;
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 7147, 7} true;
  assume !($b27);
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 7155, 7} true;
  $p28 := $pa($p12, 1, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7155, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7156, 7} true;
  $p29 := $sub($p11, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7156, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7157, 5} true;
  $p11 := $p29;
  $p12 := $p28;
  goto $bb10;
}
procedure PptPnpFilterGetEndOfResourceRequirementsList(ResourceRequirementsList: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7241, 83} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7247, 3} true;
  $p := $pa($pa(ResourceRequirementsList, 0, 72), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7247, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7247, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7248, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7249, 3} true;
  $p2 := $pa($pa(ResourceRequirementsList, 0, 72), 32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7249, 3} true;
  $p3 := $pa($pa($p2, 0, 40), 0, 40);
  assume {:sourceloc "parport_true.i.cil.c", 7249, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7251, 3} true;
  $p4 := $p3;
  $p5 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7251, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7253, 5} true;
  $b := $ult($p5, $p1);
  assume {:sourceloc "parport_true.i.cil.c", 7253, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7255, 5} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7256, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7253, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7253, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7263, 3} true;
  $p6 := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 7263, 3} true;
  $r := $p6;
  return;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7258, 5} true;
  $p7 := $pa($pa($p4, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7258, 5} true;
  $p8 := $pa($pa($p7, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7258, 5} true;
  $p9 := $pa($pa($p4, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7258, 5} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 7258, 5} true;
  $p11 := $pa($p8, $p10, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7258, 5} true;
  $p12 := $p11;
  assume {:sourceloc "parport_true.i.cil.c", 7258, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7259, 5} true;
  $p13 := $add($p5, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7259, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7260, 3} true;
  $p4 := $p12;
  $p5 := $p13;
  goto $bb1;
}
procedure PptPnpFilterNukeIrqResourceDescriptors(IoResourceList: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b9: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7298, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7303, 3} true;
  $p := $pa($pa(IoResourceList, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7303, 3} true;
  $p1 := $pa($pa($p, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7303, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7304, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7306, 3} true;
  $p2 := $p1;
  $p3 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7306, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7308, 5} true;
  $p4 := $pa($pa(IoResourceList, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7308, 5} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 7308, 5} true;
  $b := $ult($p3, $p5);
  assume {:sourceloc "parport_true.i.cil.c", 7308, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7310, 5} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7311, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7308, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7308, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7327, 1} true;
  return;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7313, 5} true;
  $p6 := $pa($pa($p2, 0, 32), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7313, 5} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 7313, 5} true;
  $p8 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 7313, 5} true;
  $b9 := ($p8 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 7313, 5} true;
  goto $bb11, $bb12;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7314, 7} true;
  $p12 := $pa($pa($p2, 0, 32), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7314, 7} true;
  $M.0[$p12] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7317, 5} true;
  goto $bb13;
$bb10:
  goto $bb13;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 7313, 5} true;
  assume $b9;
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 7313, 5} true;
  assume !($b9);
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7320, 5} true;
  $p10 := $pa($p2, 1, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7320, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7321, 5} true;
  $p11 := $add($p3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7321, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7322, 3} true;
  $p2 := $p10;
  $p3 := $p11;
  goto $bb1;
}
procedure PptPnpFilterNukeIrqResourceDescriptorsFromAllLists(ResourceRequirementsList: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7266, 88} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7272, 3} true;
  $p := $pa($pa(ResourceRequirementsList, 0, 72), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7272, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7272, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7273, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7274, 3} true;
  $p2 := $pa($pa(ResourceRequirementsList, 0, 72), 32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7274, 3} true;
  $p3 := $pa($pa($p2, 0, 40), 0, 40);
  assume {:sourceloc "parport_true.i.cil.c", 7274, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7278, 3} true;
  $p4 := 0;
  $p5 := $p3;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7278, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7280, 5} true;
  $b := $ult($p4, $p1);
  assume {:sourceloc "parport_true.i.cil.c", 7280, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7282, 5} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7283, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7280, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7280, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7297, 1} true;
  return;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7288, 5} true;
  call PptPnpFilterNukeIrqResourceDescriptors($p5);
  assume {:sourceloc "parport_true.i.cil.c", 7289, 5} true;
  $p6 := $pa($pa($p5, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7289, 5} true;
  $p7 := $pa($pa($p6, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7289, 5} true;
  $p8 := $pa($pa($p5, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7289, 5} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 7289, 5} true;
  $p10 := $pa($p7, $p9, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7289, 5} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 7289, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7290, 5} true;
  $p12 := $add($p4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7290, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7292, 3} true;
  $p4 := $p12;
  $p5 := $p11;
  goto $bb1;
}
procedure PptPnpFilterRemoveIrqResourceLists(ResourceRequirementsList: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $b33: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7177, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7188, 3} true;
  $p := $pa($pa(ResourceRequirementsList, 0, 72), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7188, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7188, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7192, 9} true;
  call $p2 := PptPnpFilterGetEndOfResourceRequirementsList(ResourceRequirementsList);
  assume {:sourceloc "parport_true.i.cil.c", 7192, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7193, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7194, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7195, 3} true;
  $p3 := $pa($pa(ResourceRequirementsList, 0, 72), 32, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7195, 3} true;
  $p4 := $pa($pa($p3, 0, 40), 0, 40);
  assume {:sourceloc "parport_true.i.cil.c", 7195, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7198, 3} true;
  $p5 := 0;
  $p6 := $p4;
  $p7 := $p1;
  $p8 := $p2;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7198, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7200, 5} true;
  $b := $ult($p5, $p7);
  assume {:sourceloc "parport_true.i.cil.c", 7200, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7202, 5} true;
  goto $bb8;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7203, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7200, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7200, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7235, 3} true;
  $p9 := $pa($pa(ResourceRequirementsList, 0, 72), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7235, 3} true;
  $M.0[$p9] := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 7240, 1} true;
  return;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7210, 15} true;
  call $p10 := PptPnpListContainsIrqResourceDescriptor($p6);
  assume {:sourceloc "parport_true.i.cil.c", 7210, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7212, 5} true;
  $b11 := ($p10 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7212, 5} true;
  goto $bb11, $bb12;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7215, 7} true;
  $p23 := $pa($pa($p6, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7215, 7} true;
  $p24 := $pa($pa($p23, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7215, 7} true;
  $p25 := $pa($pa($p6, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7215, 7} true;
  $p26 := $M.0[$p25];
  assume {:sourceloc "parport_true.i.cil.c", 7215, 7} true;
  $p27 := $pa($p24, $p26, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7215, 7} true;
  $p28 := $p27;
  assume {:sourceloc "parport_true.i.cil.c", 7215, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7216, 7} true;
  $p29 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 7216, 7} true;
  $p30 := $p2i($p8);
  assume {:sourceloc "parport_true.i.cil.c", 7216, 7} true;
  $p31 := $p2i($p29);
  assume {:sourceloc "parport_true.i.cil.c", 7216, 7} true;
  $p32 := $sub($p30, $p31);
  assume {:sourceloc "parport_true.i.cil.c", 7216, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7217, 7} true;
  $b33 := $sgt($p32, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7217, 7} true;
  goto $bb16, $bb17;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 7229, 7} true;
  $p12 := $pa($pa($p6, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7229, 7} true;
  $p13 := $pa($pa($p12, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7229, 7} true;
  $p14 := $pa($pa($p6, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7229, 7} true;
  $p15 := $M.0[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 7229, 7} true;
  $p16 := $pa($p13, $p15, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7229, 7} true;
  $p17 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 7229, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7230, 7} true;
  $p18 := $add($p5, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7230, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p19 := $p18;
  $p20 := $p17;
  $p21 := $p7;
  $p22 := $p8;
  goto $bb13;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 7212, 5} true;
  assume $b11;
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 7212, 5} true;
  assume !($b11);
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7232, 3} true;
  $p5 := $p19;
  $p6 := $p20;
  $p7 := $p21;
  $p8 := $p22;
  goto $bb1;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 7219, 9} true;
  $p36 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 7219, 9} true;
  $p37 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 7219, 9} true;
  call llvm.memmove.p0i8.p0i8.i32($p36, $p37, $p32, 8, false);
  assume {:sourceloc "parport_true.i.cil.c", 7220, 9} true;
  $p38 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 7220, 9} true;
  $p39 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 7220, 9} true;
  $p40 := $p2i($p38);
  assume {:sourceloc "parport_true.i.cil.c", 7220, 9} true;
  $p41 := $p2i($p39);
  assume {:sourceloc "parport_true.i.cil.c", 7220, 9} true;
  $p42 := $sub($p40, $p41);
  assume {:sourceloc "parport_true.i.cil.c", 7220, 9} true;
  $p43 := $sub(0, $p42);
  assume {:sourceloc "parport_true.i.cil.c", 7220, 9} true;
  $p44 := $pa($p8, $p43, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7220, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7222, 7} true;
  $p34 := $p44;
  goto $bb18;
$bb15:
  $p34 := $p8;
  goto $bb18;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 7217, 7} true;
  assume $b33;
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 7217, 7} true;
  assume !($b33);
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 7225, 7} true;
  $p35 := $sub($p7, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7225, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7226, 5} true;
  $p19 := $p5;
  $p20 := $p6;
  $p21 := $p35;
  $p22 := $p34;
  goto $bb13;
}
procedure PptPnpFilterResourceRequirements(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b14: bool;
  var $b15: bool;
  var $b16: bool;
  var $b23: bool;
  var $b25: bool;
  var $b37: bool;
  var $b4: bool;
  var $b8: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p24: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6985, 58} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6985, 78} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6996, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6996, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 6996, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 6996, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6997, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6998, 12} true;
  call $p3 := PptPnpBounceAndCatchPnpIrp($p2, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6998, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7000, 3} true;
  $b := $sge($p3, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7000, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb10;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7001, 5} true;
  $b4 := ($p3 != -1073741637);
  assume {:sourceloc "parport_true.i.cil.c", 7001, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7000, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7000, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7002, 7} true;
  goto $bb33;
$bb6:
  goto $bb9;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7001, 5} true;
  assume $b4;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7001, 5} true;
  assume !($b4);
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7006, 3} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 7009, 3} true;
  $p5 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7009, 3} true;
  $p6 := $pa($pa($p5, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7009, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 7009, 3} true;
  $b8 := ($p7 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 7009, 3} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 7010, 5} true;
  $p26 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7010, 5} true;
  $p27 := $p26;
  assume {:sourceloc "parport_true.i.cil.c", 7010, 5} true;
  $p28 := $pa($pa($p27, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7010, 5} true;
  $p29 := $pa($pa($p28, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7010, 5} true;
  $p30 := $p29;
  assume {:sourceloc "parport_true.i.cil.c", 7010, 5} true;
  $p31 := $M.0[$p30];
  assume {:sourceloc "parport_true.i.cil.c", 7010, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7011, 5} true;
  $p32 := $pa($pa($p31, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7011, 5} true;
  $p33 := $p32;
  assume {:sourceloc "parport_true.i.cil.c", 7011, 5} true;
  $p34 := $pa($pa($p33, 0, 4), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7011, 5} true;
  $p35 := $M.0[$p34];
  assume {:sourceloc "parport_true.i.cil.c", 7011, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7012, 5} true;
  $p36 := $p2i($p35);
  assume {:sourceloc "parport_true.i.cil.c", 7012, 5} true;
  $b37 := ($p36 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 7012, 5} true;
  goto $bb50, $bb51;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 7018, 5} true;
  $p9 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7018, 5} true;
  $p10 := $pa($pa($p9, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7018, 5} true;
  $p11 := $M.0[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 7018, 5} true;
  $p12 := $i2p($p11);
  assume {:sourceloc "parport_true.i.cil.c", 7018, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p13 := $p12;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7009, 3} true;
  assume $b8;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 7009, 3} true;
  assume !($b8);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 7025, 3} true;
  call PptDebugDumpResourceRequirementsList($p13);
  assume {:sourceloc "parport_true.i.cil.c", 7027, 3} true;
  $b14 := (1 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 7027, 3} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 7028, 5} true;
  goto $bb42;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 7030, 5} true;
  $b15 := (1 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 7030, 5} true;
  goto $bb22, $bb23;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 7027, 3} true;
  assume $b14;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 7027, 3} true;
  assume !($b14);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 7031, 7} true;
  goto $bb36;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 7033, 7} true;
  $b16 := (1 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 7033, 7} true;
  goto $bb26, $bb27;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 7030, 5} true;
  assume $b15;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 7030, 5} true;
  assume !($b15);
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 7034, 9} true;
  goto $bb34;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 7037, 9} true;
  goto $bb28;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 7033, 7} true;
  assume $b16;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 7033, 7} true;
  assume !($b16);
  goto $bb25;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 7093, 9} true;
  goto $bb29;
$bb29:
  goto $bb30;
$bb30:
  goto $bb31;
$bb31:
  goto $bb32;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 7099, 3} true;
  goto $bb33;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 7102, 3} true;
  $p17 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7102, 3} true;
  $p18 := $pa($pa($p17, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7102, 3} true;
  $p19 := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 7102, 3} true;
  $M.0[$p19] := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 7103, 3} true;
  $M.24[myStatus] := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 7104, 3} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7105, 3} true;
  $p20 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7105, 3} true;
  $p21 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 7105, 3} true;
  call PptReleaseRemoveLock($p20, $p21);
  assume {:sourceloc "parport_true.i.cil.c", 7107, 3} true;
  $r := $p3;
  return;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 7089, 11} true;
  goto $bb35;
$bb35:
  goto $bb29;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 7068, 21} true;
  call $p22 := PptPnpFilterExistsNonIrqResourceList($p13);
  assume {:sourceloc "parport_true.i.cil.c", 7068, 21} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7070, 11} true;
  $b23 := ($p22 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7070, 11} true;
  goto $bb39, $bb40;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 7074, 13} true;
  call PptPnpFilterRemoveIrqResourceLists($p13);
  assume {:sourceloc "parport_true.i.cil.c", 7079, 13} true;
  call PptDebugDumpResourceRequirementsList($p13);
  assume {:sourceloc "parport_true.i.cil.c", 7081, 11} true;
  goto $bb41;
$bb38:
  goto $bb41;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 7070, 11} true;
  assume $b23;
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 7070, 11} true;
  assume !($b23);
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 7085, 11} true;
  goto $bb35;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 7043, 17} true;
  call $p24 := PptPnpFilterExistsNonIrqResourceList($p13);
  assume {:sourceloc "parport_true.i.cil.c", 7043, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7045, 11} true;
  $b25 := ($p24 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7045, 11} true;
  goto $bb45, $bb46;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 7049, 13} true;
  call PptPnpFilterRemoveIrqResourceLists($p13);
  assume {:sourceloc "parport_true.i.cil.c", 7051, 11} true;
  goto $bb47;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 7055, 13} true;
  call PptPnpFilterNukeIrqResourceDescriptorsFromAllLists($p13);
  goto $bb47;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 7045, 11} true;
  assume $b25;
  goto $bb43;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 7045, 11} true;
  assume !($b25);
  goto $bb44;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 7061, 11} true;
  call PptDebugDumpResourceRequirementsList($p13);
  assume {:sourceloc "parport_true.i.cil.c", 7063, 11} true;
  goto $bb35;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 7013, 7} true;
  goto $bb33;
$bb49:
  goto $bb52;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 7012, 5} true;
  assume $b37;
  goto $bb48;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 7012, 5} true;
  assume !($b37);
  goto $bb49;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 7017, 3} true;
  $p13 := $p35;
  goto $bb15;
}
procedure PptPnpInitDispatchFunctionTable()
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6451, 13} true;
  call $p := __VERIFIER_nondet_long();
  assume {:sourceloc "parport_true.i.cil.c", 6451, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6454, 3} true;
  $p1 := $pa($pa(PptPnpDispatchFunctionTable, 0, 100), $p, 4);
  assume {:sourceloc "parport_true.i.cil.c", 6454, 3} true;
  $M.34[$p1] := PptPnpUnhandledIrp;
  assume {:sourceloc "parport_true.i.cil.c", 6455, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 0, 4)] := PptPnpStartDevice;
  assume {:sourceloc "parport_true.i.cil.c", 6456, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 13, 4)] := PptPnpFilterResourceRequirements;
  assume {:sourceloc "parport_true.i.cil.c", 6457, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 7, 4)] := PptPnpQueryDeviceRelations;
  assume {:sourceloc "parport_true.i.cil.c", 6458, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 5, 4)] := PptPnpQueryStopDevice;
  assume {:sourceloc "parport_true.i.cil.c", 6459, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 6, 4)] := PptPnpCancelStopDevice;
  assume {:sourceloc "parport_true.i.cil.c", 6460, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 4, 4)] := PptPnpStopDevice;
  assume {:sourceloc "parport_true.i.cil.c", 6461, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 1, 4)] := PptPnpQueryRemoveDevice;
  assume {:sourceloc "parport_true.i.cil.c", 6462, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 3, 4)] := PptPnpCancelRemoveDevice;
  assume {:sourceloc "parport_true.i.cil.c", 6463, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 2, 4)] := PptPnpRemoveDevice;
  assume {:sourceloc "parport_true.i.cil.c", 6464, 3} true;
  $M.34[$pa($pa(PptPnpDispatchFunctionTable, 0, 100), 23, 4)] := PptPnpSurpriseRemoval;
  assume {:sourceloc "parport_true.i.cil.c", 6467, 1} true;
  return;
}
procedure PptPnpListContainsIrqResourceDescriptor(List: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b10: bool;
  var $p: int;
  var $p1: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7600, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7605, 3} true;
  $p := $pa($pa(List, 0, 40), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7605, 3} true;
  $p1 := $pa($pa($p, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7605, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7606, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7608, 3} true;
  $p2 := 0;
  $p3 := $p1;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7608, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7610, 5} true;
  $p4 := $pa($pa(List, 0, 40), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7610, 5} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 7610, 5} true;
  $b := $ult($p2, $p5);
  assume {:sourceloc "parport_true.i.cil.c", 7610, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7612, 5} true;
  goto $bb9;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7613, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7610, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7610, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7624, 3} true;
  $p6 := 0;
  goto $bb8;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7626, 1} true;
  $r := $p6;
  return;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7615, 5} true;
  $p7 := $pa($pa($p3, 0, 32), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7615, 5} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 7615, 5} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 7615, 5} true;
  $b10 := ($p9 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 7615, 5} true;
  goto $bb12, $bb13;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 7616, 7} true;
  $p6 := 1;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 7618, 7} true;
  $p11 := $pa($p3, 1, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7618, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 7615, 5} true;
  assume $b10;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7615, 5} true;
  assume !($b10);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 7620, 5} true;
  $p12 := $add($p2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7620, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7621, 3} true;
  $p2 := $p12;
  $p3 := $p11;
  goto $bb1;
}
procedure PptPnpPassThroughPnpIrpAndReleaseRemoveLock(Extension: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7680, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7681, 59} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7685, 3} true;
  $p := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 7685, 3} true;
  $p1 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 7685, 3} true;
  $b := ($p == $p1);
  assume {:sourceloc "parport_true.i.cil.c", 7685, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7686, 5} true;
  $p20 := $M.37[SKIP1];
  assume {:sourceloc "parport_true.i.cil.c", 7686, 5} true;
  $M.35[s] := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 7687, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7689, 5} true;
  call errorFn();
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7685, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7685, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7693, 3} true;
  $p2 := $pa($pa(Irp, 0, 112), 35, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7693, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 7693, 3} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 7693, 3} true;
  $p5 := $add($p4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7693, 3} true;
  $p6 := $trunc($p5, 8);
  assume {:sourceloc "parport_true.i.cil.c", 7693, 3} true;
  $p7 := $pa($pa(Irp, 0, 112), 35, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7693, 3} true;
  $M.0[$p7] := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 7694, 3} true;
  $p8 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7694, 3} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 7694, 3} true;
  $p10 := $pa($pa($p9, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7694, 3} true;
  $p11 := $pa($pa($p10, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7694, 3} true;
  $p12 := $p11;
  assume {:sourceloc "parport_true.i.cil.c", 7694, 3} true;
  $p13 := $M.0[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 7694, 3} true;
  $p14 := $pa($p13, 1, 36);
  assume {:sourceloc "parport_true.i.cil.c", 7694, 3} true;
  $M.0[$p12] := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 7695, 12} true;
  $p15 := $pa($pa(Extension, 0, 448), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7695, 12} true;
  $p16 := $M.0[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 7695, 12} true;
  call $p17 := IofCallDriver($p16, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7695, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7696, 3} true;
  $p18 := $pa($pa(Extension, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7696, 3} true;
  $p19 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 7696, 3} true;
  call PptReleaseRemoveLock($p18, $p19);
  assume {:sourceloc "parport_true.i.cil.c", 7698, 3} true;
  $r := $p17;
  return;
}
procedure PptPnpQueryDeviceRelations(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b13: bool;
  var $b14: bool;
  var $b15: bool;
  var $b16: bool;
  var $b24: bool;
  var $b26: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p25: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7328, 52} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7328, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7336, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7336, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7336, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 7336, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7337, 3} true;
  $p3 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7337, 3} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 7337, 3} true;
  $p5 := $pa($pa($p4, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7337, 3} true;
  $p6 := $pa($pa($p5, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7337, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 7337, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 7337, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7338, 3} true;
  $p9 := $pa($pa($p8, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7338, 3} true;
  $p10 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 7338, 3} true;
  $p11 := $pa($pa($p10, 0, 4), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7338, 3} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 7338, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7339, 3} true;
  $b := ($p12 == 3);
  assume {:sourceloc "parport_true.i.cil.c", 7339, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7340, 5} true;
  goto $bb33;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7342, 5} true;
  $b13 := ($p12 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 7342, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7339, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7339, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7343, 7} true;
  goto $bb32;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7345, 7} true;
  $b14 := ($p12 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 7345, 7} true;
  goto $bb11, $bb12;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7342, 5} true;
  assume $b13;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7342, 5} true;
  assume !($b13);
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7346, 9} true;
  goto $bb31;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 7348, 9} true;
  $b15 := ($p12 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 7348, 9} true;
  goto $bb15, $bb16;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 7345, 7} true;
  assume $b14;
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 7345, 7} true;
  assume !($b14);
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7349, 11} true;
  goto $bb30;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 7351, 11} true;
  $b16 := ($p12 == 4);
  assume {:sourceloc "parport_true.i.cil.c", 7351, 11} true;
  goto $bb19, $bb20;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 7348, 9} true;
  assume $b15;
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 7348, 9} true;
  assume !($b15);
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 7352, 13} true;
  goto $bb29;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 7355, 13} true;
  goto $bb21;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 7351, 11} true;
  assume $b16;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 7351, 11} true;
  assume !($b16);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 7401, 15} true;
  goto $bb22;
$bb22:
  goto $bb23;
$bb23:
  goto $bb24;
$bb24:
  goto $bb25;
$bb25:
  goto $bb26;
$bb26:
  goto $bb27;
$bb27:
  goto $bb28;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 7412, 9} true;
  $p17 := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7412, 9} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 7412, 9} true;
  $p19 := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 7412, 9} true;
  call $p20 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p19, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7412, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7415, 3} true;
  $r := $p20;
  return;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 7397, 15} true;
  goto $bb22;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 7393, 15} true;
  goto $bb22;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 7389, 15} true;
  goto $bb22;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 7385, 15} true;
  goto $bb22;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 7361, 15} true;
  call PptDumpRemovalRelationsList($p2);
  assume {:sourceloc "parport_true.i.cil.c", 7363, 15} true;
  $p21 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7363, 15} true;
  $p22 := $pa($pa($p21, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7363, 15} true;
  $p23 := $M.0[$p22];
  assume {:sourceloc "parport_true.i.cil.c", 7363, 15} true;
  $b24 := ($p23 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7363, 15} true;
  goto $bb36, $bb37;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 7366, 15} true;
  goto $bb43;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 7368, 36} true;
  call $p25 := PptPnpBuildRemovalRelations($p2);
  assume {:sourceloc "parport_true.i.cil.c", 7368, 36} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7370, 17} true;
  $b26 := ($p25 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7370, 17} true;
  goto $bb40, $bb41;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 7363, 15} true;
  assume $b24;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 7363, 15} true;
  assume !($b24);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 7373, 19} true;
  $p27 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7373, 19} true;
  $p28 := $pa($pa($p27, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7373, 19} true;
  $p29 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 7373, 19} true;
  $M.0[$p29] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7374, 19} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7375, 19} true;
  $p30 := $p2i($p25);
  assume {:sourceloc "parport_true.i.cil.c", 7375, 19} true;
  $p31 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7375, 19} true;
  $p32 := $pa($pa($p31, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7375, 19} true;
  $M.0[$p32] := $p30;
  assume {:sourceloc "parport_true.i.cil.c", 7376, 17} true;
  goto $bb42;
$bb39:
  goto $bb42;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 7370, 17} true;
  assume $b26;
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 7370, 17} true;
  assume !($b26);
  goto $bb39;
$bb42:
  goto $bb43;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 7381, 15} true;
  goto $bb22;
}
procedure PptPnpQueryRemoveDevice(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7491, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7491, 69} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7496, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7496, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7496, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 7496, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7501, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7501, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 7501, 3} true;
  $p5 := $or($p4, 65792);
  assume {:sourceloc "parport_true.i.cil.c", 7501, 3} true;
  $M.0[$p3] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 7503, 3} true;
  $p6 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7503, 3} true;
  $p7 := $pa($pa($p6, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7503, 3} true;
  $p8 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 7503, 3} true;
  $M.0[$p8] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7504, 3} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7505, 9} true;
  call $p9 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p2, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7505, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7507, 3} true;
  $r := $p9;
  return;
}
procedure PptPnpQueryStopDevice(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7418, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7418, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7425, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7426, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7426, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7426, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 7426, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7428, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7428, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 7428, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7431, 3} true;
  $b := $sgt($p4, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7431, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7433, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7434, 5} true;
  call $p13 := PptFailRequest(Irp, -2147483631);
  assume {:sourceloc "parport_true.i.cil.c", 7435, 5} true;
  $p14 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7435, 5} true;
  $p15 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 7435, 5} true;
  call PptReleaseRemoveLock($p14, $p15);
  assume {:sourceloc "parport_true.i.cil.c", 7437, 3} true;
  $p12 := -2147483631;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7439, 5} true;
  $p5 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7439, 5} true;
  $p6 := $pa($pa($p5, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7439, 5} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 7439, 5} true;
  $M.0[$p7] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7440, 5} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7441, 14} true;
  call $p8 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p2, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7441, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7443, 5} true;
  $p9 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7443, 5} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 7443, 5} true;
  $p11 := $or($p10, 65552);
  assume {:sourceloc "parport_true.i.cil.c", 7443, 5} true;
  $M.0[$p9] := $p11;
  $p12 := $p8;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7431, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7431, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7447, 3} true;
  $r := $p12;
  return;
}
procedure PptPnpRemoveDevice(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b35: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7533, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7533, 64} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7539, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7539, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7539, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 7539, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7541, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7541, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 7541, 3} true;
  $p5 := $or($p4, 512);
  assume {:sourceloc "parport_true.i.cil.c", 7541, 3} true;
  $M.0[$p3] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 7543, 3} true;
  call $p6 := IoWMIRegistrationControl(DeviceObject, 2);
  assume {:sourceloc "parport_true.i.cil.c", 7544, 3} true;
  $p7 := $pa($pa($p2, 0, 448), 296, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7544, 3} true;
  call $p8 := IoSetDeviceInterfaceState($p7, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7545, 3} true;
  $p9 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7545, 3} true;
  $p10 := $pa($pa($p9, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7545, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 7545, 3} true;
  $M.0[$p11] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7546, 3} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7548, 3} true;
  $p12 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 7548, 3} true;
  $p13 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 7548, 3} true;
  $b := ($p12 == $p13);
  assume {:sourceloc "parport_true.i.cil.c", 7548, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7549, 5} true;
  $p38 := $M.37[SKIP1];
  assume {:sourceloc "parport_true.i.cil.c", 7549, 5} true;
  $M.35[s] := $p38;
  assume {:sourceloc "parport_true.i.cil.c", 7550, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7552, 5} true;
  call errorFn();
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7548, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7548, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7556, 3} true;
  $p14 := $pa($pa(Irp, 0, 112), 35, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7556, 3} true;
  $p15 := $M.0[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 7556, 3} true;
  $p16 := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 7556, 3} true;
  $p17 := $add($p16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7556, 3} true;
  $p18 := $trunc($p17, 8);
  assume {:sourceloc "parport_true.i.cil.c", 7556, 3} true;
  $p19 := $pa($pa(Irp, 0, 112), 35, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7556, 3} true;
  $M.0[$p19] := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 7557, 3} true;
  $p20 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7557, 3} true;
  $p21 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 7557, 3} true;
  $p22 := $pa($pa($p21, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7557, 3} true;
  $p23 := $pa($pa($p22, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7557, 3} true;
  $p24 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 7557, 3} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 7557, 3} true;
  $p26 := $pa($p25, 1, 36);
  assume {:sourceloc "parport_true.i.cil.c", 7557, 3} true;
  $M.0[$p24] := $p26;
  assume {:sourceloc "parport_true.i.cil.c", 7558, 12} true;
  $p27 := $pa($pa($p2, 0, 448), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7558, 12} true;
  $p28 := $M.0[$p27];
  assume {:sourceloc "parport_true.i.cil.c", 7558, 12} true;
  call $p29 := IofCallDriver($p28, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7558, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7559, 3} true;
  $p30 := $pa($pa($p2, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7559, 3} true;
  $p31 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 7559, 3} true;
  call PptReleaseRemoveLockAndWait($p30, $p31);
  assume {:sourceloc "parport_true.i.cil.c", 7560, 3} true;
  call PptCleanRemovalRelationsList($p2);
  assume {:sourceloc "parport_true.i.cil.c", 7564, 3} true;
  $p32 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7564, 3} true;
  $p33 := $pa($pa($p32, 0, 80), 72, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7564, 3} true;
  $p34 := $M.0[$p33];
  assume {:sourceloc "parport_true.i.cil.c", 7564, 3} true;
  $b35 := ($p34 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 7564, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7567, 5} true;
  $p36 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7567, 5} true;
  $p37 := $pa($pa($p36, 0, 80), 72, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7567, 5} true;
  $M.0[$p37] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7569, 3} true;
  goto $bb10;
$bb7:
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7564, 3} true;
  assume $b35;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7564, 3} true;
  assume !($b35);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 7576, 3} true;
  $r := $p29;
  return;
}
procedure PptPnpStartDevice(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $b26: bool;
  var $b32: bool;
  var $b35: bool;
  var $b38: bool;
  var $b7: bool;
  var $b9: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p33: int;
  var $p34: int;
  var $p36: int;
  var $p37: int;
  var $p39: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p8: int;
$bb0:
  call $p := $alloca($mul(1, 1));
  call $p1 := $alloca($mul(1, 1));
  call $p2 := $alloca($mul(1, 1));
  assume {:sourceloc "parport_true.i.cil.c", 6657, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6657, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6660, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6661, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6662, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6666, 3} true;
  $p3 := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6666, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 6666, 3} true;
  $p5 := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 6666, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6667, 3} true;
  $M.13[$p] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6668, 3} true;
  $M.14[$p1] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6669, 3} true;
  $M.15[$p2] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6670, 12} true;
  call $p6 := PptPnpBounceAndCatchPnpIrp($p5, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6670, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6672, 3} true;
  $b := $sge($p6, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6672, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb10;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 6673, 5} true;
  $b7 := ($p6 != -1073741637);
  assume {:sourceloc "parport_true.i.cil.c", 6673, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 6672, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 6672, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 6674, 7} true;
  $p10 := $p6;
  goto $bb15;
$bb6:
  goto $bb9;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 6673, 5} true;
  assume $b7;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 6673, 5} true;
  assume !($b7);
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 6678, 3} true;
  goto $bb10;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 6682, 12} true;
  call $p8 := PptPnpStartScanCmResourceList($p5, Irp, $p, $p1, $p2);
  assume {:sourceloc "parport_true.i.cil.c", 6682, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6685, 3} true;
  $b9 := $sge($p8, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6685, 3} true;
  goto $bb13, $bb14;
$bb11:
  goto $bb21;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 6686, 5} true;
  $p10 := $p8;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 6685, 3} true;
  assume $b9;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 6685, 3} true;
  assume !($b9);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 6726, 3} true;
  $b11 := $sge($p10, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6726, 3} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 6729, 5} true;
  $p19 := $pa($pa($p5, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6729, 5} true;
  $p20 := $M.0[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 6729, 5} true;
  $p21 := $or($p20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6729, 5} true;
  $M.0[$p19] := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 6732, 3} true;
  goto $bb20;
$bb17:
  goto $bb20;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 6726, 3} true;
  assume $b11;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 6726, 3} true;
  assume !($b11);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 6736, 3} true;
  $p12 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6736, 3} true;
  $p13 := $pa($pa($p12, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6736, 3} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 6736, 3} true;
  $M.0[$p14] := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 6737, 3} true;
  $M.24[myStatus] := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 6738, 3} true;
  $p15 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6738, 3} true;
  $p16 := $pa($pa($p15, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6738, 3} true;
  $M.0[$p16] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6739, 3} true;
  call PptCompleteRequest(Irp, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6740, 3} true;
  $p17 := $pa($pa($p5, 0, 448), 312, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6740, 3} true;
  $p18 := Irp;
  assume {:sourceloc "parport_true.i.cil.c", 6740, 3} true;
  call PptReleaseRemoveLock($p17, $p18);
  assume {:sourceloc "parport_true.i.cil.c", 6742, 3} true;
  $r := $p10;
  return;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 6691, 12} true;
  $p22 := $M.13[$p];
  assume {:sourceloc "parport_true.i.cil.c", 6691, 12} true;
  $p23 := $M.14[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 6691, 12} true;
  $p24 := $M.15[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 6691, 12} true;
  call $p25 := PptPnpStartValidateResources(DeviceObject, $p22, $p23, $p24);
  assume {:sourceloc "parport_true.i.cil.c", 6691, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6693, 3} true;
  $b26 := $sge($p25, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6693, 3} true;
  goto $bb24, $bb25;
$bb22:
  goto $bb26;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 6694, 5} true;
  $p10 := $p25;
  goto $bb15;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 6693, 3} true;
  assume $b26;
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 6693, 3} true;
  assume !($b26);
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 6699, 46} true;
  $p27 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 6699, 46} true;
  call $p28 := PptInitiate1284_3($p27);
  assume {:sourceloc "parport_true.i.cil.c", 6699, 46} true;
  $p29 := $pa($pa($p5, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6699, 46} true;
  $p30 := $pa($pa($p29, 0, 80), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6699, 46} true;
  $M.0[$p30] := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 6700, 12} true;
  call $p31 := PptDetectChipFilter($p5);
  assume {:sourceloc "parport_true.i.cil.c", 6700, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6702, 3} true;
  $b32 := $sge($p31, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6702, 3} true;
  goto $bb29, $bb30;
$bb27:
  goto $bb31;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 6704, 5} true;
  call $p33 := PptDetectPortType($p5);
  assume {:sourceloc "parport_true.i.cil.c", 6706, 3} true;
  goto $bb31;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 6702, 3} true;
  assume $b32;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 6702, 3} true;
  assume !($b32);
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 6710, 12} true;
  call $p34 := PptWmiInitWmi(DeviceObject);
  assume {:sourceloc "parport_true.i.cil.c", 6710, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6712, 3} true;
  $b35 := $sge($p34, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6712, 3} true;
  goto $bb34, $bb35;
$bb32:
  goto $bb36;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 6713, 5} true;
  $p10 := $p34;
  goto $bb15;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 6712, 3} true;
  assume $b35;
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 6712, 3} true;
  assume !($b35);
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 6718, 12} true;
  $p36 := $pa($pa($p5, 0, 448), 296, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6718, 12} true;
  call $p37 := IoSetDeviceInterfaceState($p36, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6718, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6720, 3} true;
  $b38 := $sge($p37, 0);
  assume {:sourceloc "parport_true.i.cil.c", 6720, 3} true;
  goto $bb39, $bb40;
$bb37:
  $p39 := $p37;
  goto $bb41;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 6721, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6722, 3} true;
  $p39 := -1073741637;
  goto $bb41;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 6720, 3} true;
  assume $b38;
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 6720, 3} true;
  assume !($b38);
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 6724, 3} true;
  $p10 := $p39;
  goto $bb15;
}
procedure PptPnpStartScanCmResourceList(Extension: int, Irp: int, FoundPort: int, FoundIrq: int, FoundDma: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b103: bool;
  var $b109: bool;
  var $b115: bool;
  var $b117: bool;
  var $b129: bool;
  var $b13: bool;
  var $b16: bool;
  var $b166: bool;
  var $b20: bool;
  var $b214: bool;
  var $b216: bool;
  var $b224: bool;
  var $b253: bool;
  var $b255: bool;
  var $b260: bool;
  var $b28: bool;
  var $b34: bool;
  var $b38: bool;
  var $b42: bool;
  var $b46: bool;
  var $b82: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p100: int;
  var $p101: int;
  var $p102: int;
  var $p104: int;
  var $p105: int;
  var $p106: int;
  var $p107: int;
  var $p108: int;
  var $p11: int;
  var $p110: int;
  var $p111: int;
  var $p112: int;
  var $p113: int;
  var $p114: int;
  var $p116: int;
  var $p118: int;
  var $p119: int;
  var $p12: int;
  var $p120: int;
  var $p121: int;
  var $p122: int;
  var $p123: int;
  var $p124: int;
  var $p125: int;
  var $p126: int;
  var $p127: int;
  var $p128: int;
  var $p130: int;
  var $p131: int;
  var $p132: int;
  var $p133: int;
  var $p134: int;
  var $p135: int;
  var $p136: int;
  var $p137: int;
  var $p138: int;
  var $p139: int;
  var $p14: int;
  var $p140: int;
  var $p141: int;
  var $p142: int;
  var $p143: int;
  var $p144: int;
  var $p145: int;
  var $p146: int;
  var $p147: int;
  var $p148: int;
  var $p149: int;
  var $p15: int;
  var $p150: int;
  var $p151: int;
  var $p152: int;
  var $p153: int;
  var $p154: int;
  var $p155: int;
  var $p156: int;
  var $p157: int;
  var $p158: int;
  var $p159: int;
  var $p160: int;
  var $p161: int;
  var $p162: int;
  var $p163: int;
  var $p164: int;
  var $p165: int;
  var $p167: int;
  var $p168: int;
  var $p169: int;
  var $p17: int;
  var $p170: int;
  var $p171: int;
  var $p172: int;
  var $p173: int;
  var $p174: int;
  var $p175: int;
  var $p176: int;
  var $p177: int;
  var $p178: int;
  var $p179: int;
  var $p18: int;
  var $p180: int;
  var $p181: int;
  var $p182: int;
  var $p183: int;
  var $p184: int;
  var $p185: int;
  var $p186: int;
  var $p187: int;
  var $p188: int;
  var $p189: int;
  var $p19: int;
  var $p190: int;
  var $p191: int;
  var $p192: int;
  var $p193: int;
  var $p194: int;
  var $p195: int;
  var $p196: int;
  var $p197: int;
  var $p198: int;
  var $p199: int;
  var $p2: int;
  var $p200: int;
  var $p201: int;
  var $p202: int;
  var $p203: int;
  var $p204: int;
  var $p205: int;
  var $p206: int;
  var $p207: int;
  var $p208: int;
  var $p209: int;
  var $p21: int;
  var $p210: int;
  var $p211: int;
  var $p212: int;
  var $p213: int;
  var $p215: int;
  var $p217: int;
  var $p218: int;
  var $p219: int;
  var $p22: int;
  var $p220: int;
  var $p221: int;
  var $p222: int;
  var $p223: int;
  var $p225: int;
  var $p226: int;
  var $p227: int;
  var $p228: int;
  var $p229: int;
  var $p23: int;
  var $p230: int;
  var $p231: int;
  var $p232: int;
  var $p233: int;
  var $p234: int;
  var $p235: int;
  var $p236: int;
  var $p237: int;
  var $p238: int;
  var $p239: int;
  var $p24: int;
  var $p240: int;
  var $p241: int;
  var $p242: int;
  var $p243: int;
  var $p244: int;
  var $p245: int;
  var $p246: int;
  var $p247: int;
  var $p248: int;
  var $p249: int;
  var $p25: int;
  var $p250: int;
  var $p251: int;
  var $p252: int;
  var $p254: int;
  var $p256: int;
  var $p257: int;
  var $p258: int;
  var $p259: int;
  var $p26: int;
  var $p261: int;
  var $p27: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p83: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p88: int;
  var $p89: int;
  var $p9: int;
  var $p90: int;
  var $p91: int;
  var $p92: int;
  var $p93: int;
  var $p94: int;
  var $p95: int;
  var $p96: int;
  var $p97: int;
  var $p98: int;
  var $p99: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 6745, 58} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6745, 75} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6745, 90} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6746, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6746, 69} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6754, 20} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6762, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6763, 3} true;
  $p1 := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6763, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 6763, 3} true;
  $p3 := $pa($pa($p2, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6763, 3} true;
  $p4 := $pa($pa($p3, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6763, 3} true;
  $p5 := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 6763, 3} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 6763, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6764, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6765, 3} true;
  $M.13[FoundPort] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6766, 3} true;
  $M.14[FoundIrq] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6767, 3} true;
  $M.15[FoundDma] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6768, 3} true;
  $p7 := $pa($pa($p6, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6768, 3} true;
  $p8 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 6768, 3} true;
  $p9 := $pa($pa($p8, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6768, 3} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 6768, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6769, 3} true;
  $p11 := $p2i($p10);
  assume {:sourceloc "parport_true.i.cil.c", 6769, 3} true;
  $b := ($p11 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 6769, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 6772, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6773, 5} true;
  $p17 := -1073741670;
  $p18 := 0;
  goto $bb16;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 6769, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 6769, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 6777, 3} true;
  $p12 := $M.0[$pa($pa($i2p(-2162688), 0, 728), 704, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 6777, 3} true;
  $b13 := ($p12 != 1);
  assume {:sourceloc "parport_true.i.cil.c", 6777, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 6779, 11} true;
  call $p258 := PptIsPci(Extension, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 6779, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6781, 5} true;
  $p259 := $p258;
  assume {:sourceloc "parport_true.i.cil.c", 6781, 5} true;
  $b260 := (1 == $p259);
  assume {:sourceloc "parport_true.i.cil.c", 6781, 5} true;
  goto $bb121, $bb122;
$bb7:
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 6777, 3} true;
  assume $b13;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 6777, 3} true;
  assume !($b13);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 6796, 3} true;
  $p14 := $pa($pa($p10, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6796, 3} true;
  $p15 := $pa($pa($p14, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6796, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6797, 3} true;
  $b16 := ($p15 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6797, 3} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 6798, 5} true;
  $p21 := $pa($pa($p15, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6798, 5} true;
  $p22 := $M.0[$p21];
  assume {:sourceloc "parport_true.i.cil.c", 6798, 5} true;
  $p23 := $pa($pa(Extension, 0, 448), 168, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6798, 5} true;
  $M.0[$p23] := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 6799, 5} true;
  $p24 := $pa($pa($p15, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6799, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6800, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6802, 5} true;
  $p25 := 0;
  goto $bb22;
$bb12:
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 6797, 3} true;
  assume $b16;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 6797, 3} true;
  assume !($b16);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 6943, 3} true;
  $p17 := 0;
  $p18 := 0;
  goto $bb16;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 6945, 3} true;
  $p19 := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 6945, 3} true;
  $b20 := (0 == $p19);
  assume {:sourceloc "parport_true.i.cil.c", 6945, 3} true;
  goto $bb19, $bb20;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 6954, 3} true;
  goto $bb21;
$bb18:
  goto $bb21;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 6945, 3} true;
  assume $b20;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 6945, 3} true;
  assume !($b20);
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 6957, 3} true;
  $r := $p17;
  return;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 6802, 15} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 6804, 7} true;
  $p26 := $pa($pa($p24, 0, 24), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6804, 7} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 6804, 7} true;
  $b28 := $ult($p25, $p27);
  assume {:sourceloc "parport_true.i.cil.c", 6804, 7} true;
  goto $bb26, $bb27;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 6806, 7} true;
  goto $bb29;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 6807, 9} true;
  goto $bb28;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 6804, 7} true;
  assume $b28;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 6804, 7} true;
  assume !($b28);
  goto $bb25;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 6941, 3} true;
  goto $bb15;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 6809, 7} true;
  $p29 := $pa($pa($p24, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6809, 7} true;
  $p30 := $pa($pa($p29, 0, 16), $p25, 16);
  assume {:sourceloc "parport_true.i.cil.c", 6809, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6810, 7} true;
  $p31 := $pa($pa($p30, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6810, 7} true;
  $p32 := $M.0[$p31];
  assume {:sourceloc "parport_true.i.cil.c", 6810, 7} true;
  $p33 := $p32;
  assume {:sourceloc "parport_true.i.cil.c", 6810, 7} true;
  $b34 := ($p33 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 6810, 7} true;
  goto $bb32, $bb33;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 6811, 9} true;
  goto $bb61;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 6813, 9} true;
  $p35 := $pa($pa($p30, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6813, 9} true;
  $p36 := $M.0[$p35];
  assume {:sourceloc "parport_true.i.cil.c", 6813, 9} true;
  $p37 := $p36;
  assume {:sourceloc "parport_true.i.cil.c", 6813, 9} true;
  $b38 := ($p37 == 6);
  assume {:sourceloc "parport_true.i.cil.c", 6813, 9} true;
  goto $bb36, $bb37;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 6810, 7} true;
  assume $b34;
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 6810, 7} true;
  assume !($b34);
  goto $bb31;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 6814, 11} true;
  goto $bb60;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 6816, 11} true;
  $p39 := $pa($pa($p30, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6816, 11} true;
  $p40 := $M.0[$p39];
  assume {:sourceloc "parport_true.i.cil.c", 6816, 11} true;
  $p41 := $p40;
  assume {:sourceloc "parport_true.i.cil.c", 6816, 11} true;
  $b42 := ($p41 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 6816, 11} true;
  goto $bb40, $bb41;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 6813, 9} true;
  assume $b38;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 6813, 9} true;
  assume !($b38);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 6817, 13} true;
  goto $bb54;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 6819, 13} true;
  $p43 := $pa($pa($p30, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6819, 13} true;
  $p44 := $M.0[$p43];
  assume {:sourceloc "parport_true.i.cil.c", 6819, 13} true;
  $p45 := $p44;
  assume {:sourceloc "parport_true.i.cil.c", 6819, 13} true;
  $b46 := ($p45 == 4);
  assume {:sourceloc "parport_true.i.cil.c", 6819, 13} true;
  goto $bb44, $bb45;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 6816, 11} true;
  assume $b42;
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 6816, 11} true;
  assume !($b42);
  goto $bb39;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 6820, 15} true;
  goto $bb53;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 6823, 15} true;
  goto $bb46;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 6819, 13} true;
  assume $b46;
  goto $bb42;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 6819, 13} true;
  assume !($b46);
  goto $bb43;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 6928, 17} true;
  goto $bb47;
$bb47:
  goto $bb48;
$bb48:
  goto $bb49;
$bb49:
  goto $bb50;
$bb50:
  goto $bb51;
$bb51:
  goto $bb52;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 6937, 7} true;
  $p47 := $add($p25, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6937, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6938, 5} true;
  $p25 := $p47;
  goto $bb22;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 6922, 17} true;
  $M.15[FoundDma] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6923, 17} true;
  $p48 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6923, 17} true;
  $p49 := $p48;
  assume {:sourceloc "parport_true.i.cil.c", 6923, 17} true;
  $p50 := $pa($pa($p49, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6923, 17} true;
  $p51 := $M.0[$p50];
  assume {:sourceloc "parport_true.i.cil.c", 6923, 17} true;
  $p52 := $pa($pa(Extension, 0, 448), 192, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6923, 17} true;
  $M.0[$p52] := $p51;
  assume {:sourceloc "parport_true.i.cil.c", 6924, 17} true;
  $p53 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6924, 17} true;
  $p54 := $p53;
  assume {:sourceloc "parport_true.i.cil.c", 6924, 17} true;
  $p55 := $pa($pa($p54, 0, 12), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6924, 17} true;
  $p56 := $M.0[$p55];
  assume {:sourceloc "parport_true.i.cil.c", 6924, 17} true;
  $p57 := $pa($pa(Extension, 0, 448), 196, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6924, 17} true;
  $M.0[$p57] := $p56;
  assume {:sourceloc "parport_true.i.cil.c", 6925, 17} true;
  $p58 := $pa($pa($p30, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6925, 17} true;
  $p59 := $M.0[$p58];
  assume {:sourceloc "parport_true.i.cil.c", 6925, 17} true;
  $p60 := $pa($pa(Extension, 0, 448), 200, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6925, 17} true;
  $M.0[$p60] := $p59;
  assume {:sourceloc "parport_true.i.cil.c", 6926, 17} true;
  goto $bb47;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 6910, 17} true;
  $M.14[FoundIrq] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6911, 17} true;
  $p61 := $pa($pa(Extension, 0, 448), 176, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6911, 17} true;
  $M.0[$p61] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6912, 17} true;
  $p62 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6912, 17} true;
  $p63 := $p62;
  assume {:sourceloc "parport_true.i.cil.c", 6912, 17} true;
  $p64 := $pa($pa($p63, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6912, 17} true;
  $p65 := $M.0[$p64];
  assume {:sourceloc "parport_true.i.cil.c", 6912, 17} true;
  $p66 := $trunc($p65, 8);
  assume {:sourceloc "parport_true.i.cil.c", 6912, 17} true;
  $p67 := $pa($pa(Extension, 0, 448), 177, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6912, 17} true;
  $M.0[$p67] := $p66;
  assume {:sourceloc "parport_true.i.cil.c", 6913, 17} true;
  $p68 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6913, 17} true;
  $p69 := $p68;
  assume {:sourceloc "parport_true.i.cil.c", 6913, 17} true;
  $p70 := $pa($pa($p69, 0, 12), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6913, 17} true;
  $p71 := $M.0[$p70];
  assume {:sourceloc "parport_true.i.cil.c", 6913, 17} true;
  $p72 := $pa($pa(Extension, 0, 448), 180, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6913, 17} true;
  $M.0[$p72] := $p71;
  assume {:sourceloc "parport_true.i.cil.c", 6914, 17} true;
  $p73 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6914, 17} true;
  $p74 := $p73;
  assume {:sourceloc "parport_true.i.cil.c", 6914, 17} true;
  $p75 := $pa($pa($p74, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6914, 17} true;
  $p76 := $M.0[$p75];
  assume {:sourceloc "parport_true.i.cil.c", 6914, 17} true;
  $p77 := $pa($pa(Extension, 0, 448), 184, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6914, 17} true;
  $M.0[$p77] := $p76;
  assume {:sourceloc "parport_true.i.cil.c", 6915, 17} true;
  $p78 := $pa($pa($p30, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6915, 17} true;
  $p79 := $M.0[$p78];
  assume {:sourceloc "parport_true.i.cil.c", 6915, 17} true;
  $p80 := $p79;
  assume {:sourceloc "parport_true.i.cil.c", 6915, 17} true;
  $p81 := $and($p80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6915, 17} true;
  $b82 := ($p81 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6915, 17} true;
  goto $bb57, $bb58;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 6916, 19} true;
  $p84 := $pa($pa(Extension, 0, 448), 188, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6916, 19} true;
  $M.0[$p84] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6917, 17} true;
  goto $bb59;
$bb56:
  assume {:sourceloc "parport_true.i.cil.c", 6918, 19} true;
  $p83 := $pa($pa(Extension, 0, 448), 188, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6918, 19} true;
  $M.0[$p83] := 0;
  goto $bb59;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 6915, 17} true;
  assume $b82;
  goto $bb55;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 6915, 17} true;
  assume !($b82);
  goto $bb56;
$bb59:
  assume {:sourceloc "parport_true.i.cil.c", 6920, 17} true;
  goto $bb47;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 6907, 17} true;
  $p85 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6907, 17} true;
  $p86 := $p85;
  assume {:sourceloc "parport_true.i.cil.c", 6907, 17} true;
  $p87 := $pa($pa($p86, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6907, 17} true;
  $p88 := $M.0[$p87];
  assume {:sourceloc "parport_true.i.cil.c", 6907, 17} true;
  $p89 := $pa($pa(Extension, 0, 448), 172, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6907, 17} true;
  $M.0[$p89] := $p88;
  assume {:sourceloc "parport_true.i.cil.c", 6908, 17} true;
  goto $bb47;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 6826, 17} true;
  $p90 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6826, 17} true;
  $p91 := $p90;
  assume {:sourceloc "parport_true.i.cil.c", 6826, 17} true;
  $p92 := $pa($pa($p91, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6826, 17} true;
  $p93 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 6826, 17} true;
  $p94 := $p92;
  assume {:sourceloc "parport_true.i.cil.c", 6826, 17} true;
  call $memcpy.0.0($p93, $p94, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 6827, 17} true;
  $p95 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6827, 17} true;
  $p96 := $p95;
  assume {:sourceloc "parport_true.i.cil.c", 6827, 17} true;
  $p97 := $pa($pa($p96, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6830, 17} true;
  $M.13[FoundPort] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  $p98 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  $p99 := $pa($pa($p98, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  $p100 := $p99;
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  $p101 := $pa($pa($p100, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  $p102 := $M.0[$p101];
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  $b103 := ($p102 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  goto $bb64, $bb65;
$bb62:
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  $p219 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  $p220 := $pa($pa($p219, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  $p221 := $p220;
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  $p222 := $pa($pa($p221, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  $p223 := $M.0[$p222];
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  $b224 := ($p223 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  goto $bb106, $bb107;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 6854, 24} true;
  goto $bb66;
$bb64:
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  assume $b103;
  goto $bb62;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 6831, 17} true;
  assume !($b103);
  goto $bb63;
$bb66:
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  $p104 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  $p105 := $pa($pa($p104, 0, 80), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  $p106 := $p105;
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  $p107 := $pa($pa($p106, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  $p108 := $M.0[$p107];
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  $b109 := ($p108 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  goto $bb69, $bb70;
$bb67:
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  $p110 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  $p111 := $pa($pa($p110, 0, 80), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  $p112 := $p111;
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  $p113 := $pa($pa($p112, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  $p114 := $M.0[$p113];
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  $b115 := ($p114 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  goto $bb75, $bb76;
$bb68:
  goto $bb71;
$bb69:
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  assume $b109;
  goto $bb67;
$bb70:
  assume {:sourceloc "parport_true.i.cil.c", 6856, 19} true;
  assume !($b109);
  goto $bb68;
$bb71:
  goto $bb72;
$bb72:
  assume {:sourceloc "parport_true.i.cil.c", 6905, 17} true;
  goto $bb47;
$bb73:
  assume {:sourceloc "parport_true.i.cil.c", 6858, 23} true;
  $p116 := $M.0[$pa($pa($i2p(-2162688), 0, 728), 704, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 6858, 23} true;
  $b117 := ($p116 != 1);
  assume {:sourceloc "parport_true.i.cil.c", 6858, 23} true;
  goto $bb80, $bb81;
$bb74:
  goto $bb77;
$bb75:
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  assume $b115;
  goto $bb73;
$bb76:
  assume {:sourceloc "parport_true.i.cil.c", 6857, 21} true;
  assume !($b115);
  goto $bb74;
$bb77:
  assume {:sourceloc "parport_true.i.cil.c", 6901, 19} true;
  goto $bb71;
$bb78:
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p118 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p119 := $p118;
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p120 := $pa($pa($p119, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p121 := $p120;
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p122 := $pa($pa($p121, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p123 := $M.0[$p122];
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p124 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p125 := $pa($pa($p124, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p126 := $p125;
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p127 := $pa($pa($p126, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $p128 := $M.0[$p127];
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  $b129 := $ult($p123, $p128);
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  goto $bb85, $bb86;
$bb79:
  goto $bb82;
$bb80:
  assume {:sourceloc "parport_true.i.cil.c", 6858, 23} true;
  assume $b117;
  goto $bb78;
$bb81:
  assume {:sourceloc "parport_true.i.cil.c", 6858, 23} true;
  assume !($b117);
  goto $bb79;
$bb82:
  assume {:sourceloc "parport_true.i.cil.c", 6898, 21} true;
  goto $bb77;
$bb83:
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p155 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p156 := $p155;
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p157 := $pa($pa($p156, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p158 := $p157;
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p159 := $pa($pa($p158, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p160 := $M.0[$p159];
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p161 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p162 := $pa($pa($p161, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p163 := $p162;
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p164 := $pa($pa($p163, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $p165 := $M.0[$p164];
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  $b166 := $slt($p160, $p165);
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  goto $bb91, $bb92;
$bb84:
  assume {:sourceloc "parport_true.i.cil.c", 6886, 32} true;
  goto $bb87;
$bb85:
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  assume $b129;
  goto $bb83;
$bb86:
  assume {:sourceloc "parport_true.i.cil.c", 6859, 25} true;
  assume !($b129);
  goto $bb84;
$bb87:
  assume {:sourceloc "parport_true.i.cil.c", 6890, 27} true;
  $p130 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6890, 27} true;
  $p131 := $pa($pa($p130, 0, 80), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6890, 27} true;
  $p132 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6890, 27} true;
  $p133 := $p132;
  assume {:sourceloc "parport_true.i.cil.c", 6890, 27} true;
  $p134 := $pa($pa($p133, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6890, 27} true;
  $p135 := $p131;
  assume {:sourceloc "parport_true.i.cil.c", 6890, 27} true;
  $p136 := $p134;
  assume {:sourceloc "parport_true.i.cil.c", 6890, 27} true;
  call $memcpy.0.0($p135, $p136, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 6891, 27} true;
  $p137 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6891, 27} true;
  $p138 := $p137;
  assume {:sourceloc "parport_true.i.cil.c", 6891, 27} true;
  $p139 := $pa($pa($p138, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6891, 27} true;
  $p140 := $M.0[$p139];
  assume {:sourceloc "parport_true.i.cil.c", 6891, 27} true;
  $p141 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6891, 27} true;
  $p142 := $pa($pa($p141, 0, 80), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6891, 27} true;
  $M.0[$p142] := $p140;
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $p143 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $p144 := $pa($pa($p143, 0, 80), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $p145 := $p144;
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $p146 := $M.0[$p145];
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $p147 := $trunc($p146, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $p148 := $i2p($p147);
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $p149 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $p150 := $pa($pa($p149, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6892, 27} true;
  $M.0[$p150] := $p148;
  assume {:sourceloc "parport_true.i.cil.c", 6893, 27} true;
  $p151 := $pa($pa($p30, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6893, 27} true;
  $p152 := $M.0[$p151];
  assume {:sourceloc "parport_true.i.cil.c", 6893, 27} true;
  $p153 := $p152;
  assume {:sourceloc "parport_true.i.cil.c", 6893, 27} true;
  $p154 := $pa($pa(Extension, 0, 448), 164, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6893, 27} true;
  $M.0[$p154] := $p153;
  goto $bb88;
$bb88:
  assume {:sourceloc "parport_true.i.cil.c", 6895, 23} true;
  goto $bb82;
$bb89:
  assume {:sourceloc "parport_true.i.cil.c", 6863, 29} true;
  $p167 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6863, 29} true;
  $p168 := $pa($pa($p167, 0, 80), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6863, 29} true;
  $p169 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6863, 29} true;
  $p170 := $pa($pa($p169, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6863, 29} true;
  $p171 := $p168;
  assume {:sourceloc "parport_true.i.cil.c", 6863, 29} true;
  $p172 := $p170;
  assume {:sourceloc "parport_true.i.cil.c", 6863, 29} true;
  call $memcpy.0.0($p171, $p172, 8, 8, false);
  assume {:sourceloc "parport_true.i.cil.c", 6864, 29} true;
  $p173 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6864, 29} true;
  $p174 := $pa($pa($p173, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6864, 29} true;
  $p175 := $M.0[$p174];
  assume {:sourceloc "parport_true.i.cil.c", 6864, 29} true;
  $p176 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6864, 29} true;
  $p177 := $pa($pa($p176, 0, 80), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6864, 29} true;
  $M.0[$p177] := $p175;
  assume {:sourceloc "parport_true.i.cil.c", 6865, 29} true;
  $p178 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6865, 29} true;
  $p179 := $pa($pa($p178, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6865, 29} true;
  $p180 := $M.0[$p179];
  assume {:sourceloc "parport_true.i.cil.c", 6865, 29} true;
  $p181 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6865, 29} true;
  $p182 := $pa($pa($p181, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6865, 29} true;
  $M.0[$p182] := $p180;
  assume {:sourceloc "parport_true.i.cil.c", 6866, 29} true;
  $p183 := $pa($pa(Extension, 0, 448), 160, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6866, 29} true;
  $p184 := $M.0[$p183];
  assume {:sourceloc "parport_true.i.cil.c", 6866, 29} true;
  $p185 := $pa($pa(Extension, 0, 448), 164, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6866, 29} true;
  $M.0[$p185] := $p184;
  assume {:sourceloc "parport_true.i.cil.c", 6867, 29} true;
  $p186 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6867, 29} true;
  $p187 := $pa($pa($p186, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6867, 29} true;
  $p188 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6867, 29} true;
  $p189 := $p188;
  assume {:sourceloc "parport_true.i.cil.c", 6867, 29} true;
  $p190 := $pa($pa($p189, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6867, 29} true;
  $p191 := $p187;
  assume {:sourceloc "parport_true.i.cil.c", 6867, 29} true;
  $p192 := $p190;
  assume {:sourceloc "parport_true.i.cil.c", 6867, 29} true;
  call $memcpy.0.0($p191, $p192, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 6868, 29} true;
  $p193 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6868, 29} true;
  $p194 := $p193;
  assume {:sourceloc "parport_true.i.cil.c", 6868, 29} true;
  $p195 := $pa($pa($p194, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6868, 29} true;
  $p196 := $M.0[$p195];
  assume {:sourceloc "parport_true.i.cil.c", 6868, 29} true;
  $p197 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6868, 29} true;
  $p198 := $pa($pa($p197, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6868, 29} true;
  $M.0[$p198] := $p196;
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $p199 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $p200 := $pa($pa($p199, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $p201 := $p200;
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $p202 := $M.0[$p201];
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $p203 := $trunc($p202, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $p204 := $i2p($p203);
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $p205 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $p206 := $pa($pa($p205, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6869, 29} true;
  $M.0[$p206] := $p204;
  assume {:sourceloc "parport_true.i.cil.c", 6870, 29} true;
  $p207 := $pa($pa($p30, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6870, 29} true;
  $p208 := $M.0[$p207];
  assume {:sourceloc "parport_true.i.cil.c", 6870, 29} true;
  $p209 := $p208;
  assume {:sourceloc "parport_true.i.cil.c", 6870, 29} true;
  $p210 := $pa($pa(Extension, 0, 448), 160, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6870, 29} true;
  $M.0[$p210] := $p209;
  assume {:sourceloc "parport_true.i.cil.c", 6871, 29} true;
  $p211 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6871, 29} true;
  $p212 := $pa($pa($p211, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6871, 29} true;
  $p213 := $M.0[$p212];
  assume {:sourceloc "parport_true.i.cil.c", 6871, 29} true;
  $b214 := ($p213 == 4096);
  assume {:sourceloc "parport_true.i.cil.c", 6871, 29} true;
  goto $bb95, $bb96;
$bb90:
  assume {:sourceloc "parport_true.i.cil.c", 6884, 29} true;
  goto $bb87;
$bb91:
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  assume $b166;
  goto $bb89;
$bb92:
  assume {:sourceloc "parport_true.i.cil.c", 6860, 27} true;
  assume !($b166);
  goto $bb90;
$bb93:
  assume {:sourceloc "parport_true.i.cil.c", 6873, 41} true;
  call $p215 := PptIsNecR98Machine();
  assume {:sourceloc "parport_true.i.cil.c", 6873, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6875, 31} true;
  $b216 := ($p215 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6875, 31} true;
  goto $bb101, $bb102;
$bb94:
  goto $bb97;
$bb95:
  assume {:sourceloc "parport_true.i.cil.c", 6871, 29} true;
  assume $b214;
  goto $bb93;
$bb96:
  assume {:sourceloc "parport_true.i.cil.c", 6871, 29} true;
  assume !($b214);
  goto $bb94;
$bb97:
  assume {:sourceloc "parport_true.i.cil.c", 6883, 27} true;
  goto $bb98;
$bb98:
  assume {:sourceloc "parport_true.i.cil.c", 6886, 25} true;
  goto $bb88;
$bb99:
  assume {:sourceloc "parport_true.i.cil.c", 6876, 33} true;
  $p217 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6876, 33} true;
  $p218 := $pa($pa($p217, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6876, 33} true;
  $M.0[$p218] := 8;
  assume {:sourceloc "parport_true.i.cil.c", 6877, 31} true;
  goto $bb103;
$bb100:
  goto $bb103;
$bb101:
  assume {:sourceloc "parport_true.i.cil.c", 6875, 31} true;
  assume $b216;
  goto $bb99;
$bb102:
  assume {:sourceloc "parport_true.i.cil.c", 6875, 31} true;
  assume !($b216);
  goto $bb100;
$bb103:
  assume {:sourceloc "parport_true.i.cil.c", 6880, 29} true;
  goto $bb97;
$bb104:
  assume {:sourceloc "parport_true.i.cil.c", 6835, 21} true;
  $p225 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6835, 21} true;
  $p226 := $pa($pa($p225, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6835, 21} true;
  $p227 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6835, 21} true;
  $p228 := $p227;
  assume {:sourceloc "parport_true.i.cil.c", 6835, 21} true;
  $p229 := $pa($pa($p228, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6835, 21} true;
  $p230 := $p226;
  assume {:sourceloc "parport_true.i.cil.c", 6835, 21} true;
  $p231 := $p229;
  assume {:sourceloc "parport_true.i.cil.c", 6835, 21} true;
  call $memcpy.0.0($p230, $p231, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 6836, 21} true;
  $p232 := $pa($pa($p30, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6836, 21} true;
  $p233 := $p232;
  assume {:sourceloc "parport_true.i.cil.c", 6836, 21} true;
  $p234 := $pa($pa($p233, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6836, 21} true;
  $p235 := $M.0[$p234];
  assume {:sourceloc "parport_true.i.cil.c", 6836, 21} true;
  $p236 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6836, 21} true;
  $p237 := $pa($pa($p236, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6836, 21} true;
  $M.0[$p237] := $p235;
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $p238 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $p239 := $pa($pa($p238, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $p240 := $p239;
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $p241 := $M.0[$p240];
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $p242 := $trunc($p241, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $p243 := $i2p($p242);
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $p244 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $p245 := $pa($pa($p244, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6837, 21} true;
  $M.0[$p245] := $p243;
  assume {:sourceloc "parport_true.i.cil.c", 6838, 21} true;
  $p246 := $pa($pa($p30, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6838, 21} true;
  $p247 := $M.0[$p246];
  assume {:sourceloc "parport_true.i.cil.c", 6838, 21} true;
  $p248 := $p247;
  assume {:sourceloc "parport_true.i.cil.c", 6838, 21} true;
  $p249 := $pa($pa(Extension, 0, 448), 160, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6838, 21} true;
  $M.0[$p249] := $p248;
  assume {:sourceloc "parport_true.i.cil.c", 6839, 21} true;
  $p250 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6839, 21} true;
  $p251 := $pa($pa($p250, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6839, 21} true;
  $p252 := $M.0[$p251];
  assume {:sourceloc "parport_true.i.cil.c", 6839, 21} true;
  $b253 := ($p252 == 4096);
  assume {:sourceloc "parport_true.i.cil.c", 6839, 21} true;
  goto $bb110, $bb111;
$bb105:
  assume {:sourceloc "parport_true.i.cil.c", 6852, 21} true;
  goto $bb66;
$bb106:
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  assume $b224;
  goto $bb104;
$bb107:
  assume {:sourceloc "parport_true.i.cil.c", 6832, 19} true;
  assume !($b224);
  goto $bb105;
$bb108:
  assume {:sourceloc "parport_true.i.cil.c", 6841, 33} true;
  call $p254 := PptIsNecR98Machine();
  assume {:sourceloc "parport_true.i.cil.c", 6841, 33} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6843, 23} true;
  $b255 := ($p254 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6843, 23} true;
  goto $bb116, $bb117;
$bb109:
  goto $bb112;
$bb110:
  assume {:sourceloc "parport_true.i.cil.c", 6839, 21} true;
  assume $b253;
  goto $bb108;
$bb111:
  assume {:sourceloc "parport_true.i.cil.c", 6839, 21} true;
  assume !($b253);
  goto $bb109;
$bb112:
  assume {:sourceloc "parport_true.i.cil.c", 6851, 19} true;
  goto $bb113;
$bb113:
  assume {:sourceloc "parport_true.i.cil.c", 6854, 17} true;
  goto $bb72;
$bb114:
  assume {:sourceloc "parport_true.i.cil.c", 6844, 25} true;
  $p256 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6844, 25} true;
  $p257 := $pa($pa($p256, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6844, 25} true;
  $M.0[$p257] := 8;
  assume {:sourceloc "parport_true.i.cil.c", 6845, 23} true;
  goto $bb118;
$bb115:
  goto $bb118;
$bb116:
  assume {:sourceloc "parport_true.i.cil.c", 6843, 23} true;
  assume $b255;
  goto $bb114;
$bb117:
  assume {:sourceloc "parport_true.i.cil.c", 6843, 23} true;
  assume !($b255);
  goto $bb115;
$bb118:
  assume {:sourceloc "parport_true.i.cil.c", 6848, 21} true;
  goto $bb112;
$bb119:
  assume {:sourceloc "parport_true.i.cil.c", 6785, 16} true;
  call $p261 := PptPnpStartScanPciCardCmResourceList(Extension, Irp, FoundPort, FoundIrq, FoundDma);
  assume {:sourceloc "parport_true.i.cil.c", 6785, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6787, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6789, 7} true;
  $p17 := $p261;
  $p18 := 1;
  goto $bb16;
$bb120:
  goto $bb123;
$bb121:
  assume {:sourceloc "parport_true.i.cil.c", 6781, 5} true;
  assume $b260;
  goto $bb119;
$bb122:
  assume {:sourceloc "parport_true.i.cil.c", 6781, 5} true;
  assume !($b260);
  goto $bb120;
$bb123:
  assume {:sourceloc "parport_true.i.cil.c", 6793, 3} true;
  goto $bb10;
}
procedure PptPnpStartScanPciCardCmResourceList(Extension: int, Irp: int, FoundPort: int, FoundIrq: int, FoundDma: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b19: bool;
  var $b25: bool;
  var $b29: bool;
  var $b33: bool;
  var $b37: bool;
  var $b73: bool;
  var $b85: bool;
  var $b86: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p100: int;
  var $p101: int;
  var $p102: int;
  var $p103: int;
  var $p104: int;
  var $p105: int;
  var $p106: int;
  var $p107: int;
  var $p108: int;
  var $p109: int;
  var $p11: int;
  var $p110: int;
  var $p111: int;
  var $p112: int;
  var $p113: int;
  var $p114: int;
  var $p115: int;
  var $p116: int;
  var $p117: int;
  var $p118: int;
  var $p119: int;
  var $p12: int;
  var $p120: int;
  var $p121: int;
  var $p122: int;
  var $p123: int;
  var $p124: int;
  var $p125: int;
  var $p126: int;
  var $p127: int;
  var $p128: int;
  var $p129: int;
  var $p13: int;
  var $p130: int;
  var $p131: int;
  var $p132: int;
  var $p133: int;
  var $p134: int;
  var $p135: int;
  var $p136: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p83: int;
  var $p84: int;
  var $p87: int;
  var $p88: int;
  var $p89: int;
  var $p9: int;
  var $p90: int;
  var $p91: int;
  var $p92: int;
  var $p93: int;
  var $p94: int;
  var $p95: int;
  var $p96: int;
  var $p97: int;
  var $p98: int;
  var $p99: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6220, 65} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6220, 82} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6221, 56} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6221, 77} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6222, 56} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6233, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6234, 3} true;
  $p := $pa($pa(Irp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6234, 3} true;
  $p1 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 6234, 3} true;
  $p2 := $pa($pa($p1, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6234, 3} true;
  $p3 := $pa($pa($p2, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6234, 3} true;
  $p4 := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 6234, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 6234, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6237, 3} true;
  $M.13[FoundPort] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6238, 3} true;
  $M.14[FoundIrq] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6239, 3} true;
  $M.15[FoundDma] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 6240, 3} true;
  $p6 := $pa($pa($p5, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6240, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 6240, 3} true;
  $p8 := $pa($pa($p7, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6240, 3} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 6240, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6241, 3} true;
  $p10 := $pa($pa($p9, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6241, 3} true;
  $p11 := $pa($pa($p10, 0, 32), 0, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6241, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6242, 3} true;
  $b := ($p11 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6242, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 6243, 5} true;
  $p12 := $pa($pa($p11, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6243, 5} true;
  $p13 := $M.0[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 6243, 5} true;
  $p14 := $pa($pa(Extension, 0, 448), 168, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6243, 5} true;
  $M.0[$p14] := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 6244, 5} true;
  $p15 := $pa($pa($p11, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6244, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6245, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6247, 5} true;
  $p16 := 0;
  goto $bb6;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 6242, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 6242, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 6346, 3} true;
  $r := 0;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 6247, 15} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 6249, 7} true;
  $p17 := $pa($pa($p15, 0, 24), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6249, 7} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 6249, 7} true;
  $b19 := $ult($p16, $p18);
  assume {:sourceloc "parport_true.i.cil.c", 6249, 7} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 6251, 7} true;
  goto $bb13;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 6252, 9} true;
  goto $bb12;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 6249, 7} true;
  assume $b19;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 6249, 7} true;
  assume !($b19);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 6343, 3} true;
  goto $bb5;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 6254, 7} true;
  $p20 := $pa($pa($p15, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6254, 7} true;
  $p21 := $pa($pa($p20, 0, 16), $p16, 16);
  assume {:sourceloc "parport_true.i.cil.c", 6254, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6255, 7} true;
  $p22 := $pa($pa($p21, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6255, 7} true;
  $p23 := $M.0[$p22];
  assume {:sourceloc "parport_true.i.cil.c", 6255, 7} true;
  $p24 := $p23;
  assume {:sourceloc "parport_true.i.cil.c", 6255, 7} true;
  $b25 := ($p24 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 6255, 7} true;
  goto $bb16, $bb17;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 6256, 9} true;
  goto $bb45;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 6258, 9} true;
  $p26 := $pa($pa($p21, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6258, 9} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 6258, 9} true;
  $p28 := $p27;
  assume {:sourceloc "parport_true.i.cil.c", 6258, 9} true;
  $b29 := ($p28 == 6);
  assume {:sourceloc "parport_true.i.cil.c", 6258, 9} true;
  goto $bb20, $bb21;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 6255, 7} true;
  assume $b25;
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 6255, 7} true;
  assume !($b25);
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 6259, 11} true;
  goto $bb44;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 6261, 11} true;
  $p30 := $pa($pa($p21, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6261, 11} true;
  $p31 := $M.0[$p30];
  assume {:sourceloc "parport_true.i.cil.c", 6261, 11} true;
  $p32 := $p31;
  assume {:sourceloc "parport_true.i.cil.c", 6261, 11} true;
  $b33 := ($p32 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 6261, 11} true;
  goto $bb24, $bb25;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 6258, 9} true;
  assume $b29;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 6258, 9} true;
  assume !($b29);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 6262, 13} true;
  goto $bb38;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 6264, 13} true;
  $p34 := $pa($pa($p21, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6264, 13} true;
  $p35 := $M.0[$p34];
  assume {:sourceloc "parport_true.i.cil.c", 6264, 13} true;
  $p36 := $p35;
  assume {:sourceloc "parport_true.i.cil.c", 6264, 13} true;
  $b37 := ($p36 == 4);
  assume {:sourceloc "parport_true.i.cil.c", 6264, 13} true;
  goto $bb28, $bb29;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 6261, 11} true;
  assume $b33;
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 6261, 11} true;
  assume !($b33);
  goto $bb23;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 6265, 15} true;
  goto $bb37;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 6268, 15} true;
  goto $bb30;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 6264, 13} true;
  assume $b37;
  goto $bb26;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 6264, 13} true;
  assume !($b37);
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 6330, 17} true;
  goto $bb31;
$bb31:
  goto $bb32;
$bb32:
  goto $bb33;
$bb33:
  goto $bb34;
$bb34:
  goto $bb35;
$bb35:
  goto $bb36;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 6339, 7} true;
  $p38 := $add($p16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6339, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6340, 5} true;
  $p16 := $p38;
  goto $bb6;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 6324, 17} true;
  $M.15[FoundDma] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6325, 17} true;
  $p39 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6325, 17} true;
  $p40 := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 6325, 17} true;
  $p41 := $pa($pa($p40, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6325, 17} true;
  $p42 := $M.0[$p41];
  assume {:sourceloc "parport_true.i.cil.c", 6325, 17} true;
  $p43 := $pa($pa(Extension, 0, 448), 192, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6325, 17} true;
  $M.0[$p43] := $p42;
  assume {:sourceloc "parport_true.i.cil.c", 6326, 17} true;
  $p44 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6326, 17} true;
  $p45 := $p44;
  assume {:sourceloc "parport_true.i.cil.c", 6326, 17} true;
  $p46 := $pa($pa($p45, 0, 12), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6326, 17} true;
  $p47 := $M.0[$p46];
  assume {:sourceloc "parport_true.i.cil.c", 6326, 17} true;
  $p48 := $pa($pa(Extension, 0, 448), 196, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6326, 17} true;
  $M.0[$p48] := $p47;
  assume {:sourceloc "parport_true.i.cil.c", 6327, 17} true;
  $p49 := $pa($pa($p21, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6327, 17} true;
  $p50 := $M.0[$p49];
  assume {:sourceloc "parport_true.i.cil.c", 6327, 17} true;
  $p51 := $pa($pa(Extension, 0, 448), 200, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6327, 17} true;
  $M.0[$p51] := $p50;
  assume {:sourceloc "parport_true.i.cil.c", 6328, 17} true;
  goto $bb31;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 6312, 17} true;
  $M.14[FoundIrq] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6313, 17} true;
  $p52 := $pa($pa(Extension, 0, 448), 176, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6313, 17} true;
  $M.0[$p52] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6314, 17} true;
  $p53 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6314, 17} true;
  $p54 := $p53;
  assume {:sourceloc "parport_true.i.cil.c", 6314, 17} true;
  $p55 := $pa($pa($p54, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6314, 17} true;
  $p56 := $M.0[$p55];
  assume {:sourceloc "parport_true.i.cil.c", 6314, 17} true;
  $p57 := $trunc($p56, 8);
  assume {:sourceloc "parport_true.i.cil.c", 6314, 17} true;
  $p58 := $pa($pa(Extension, 0, 448), 177, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6314, 17} true;
  $M.0[$p58] := $p57;
  assume {:sourceloc "parport_true.i.cil.c", 6315, 17} true;
  $p59 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6315, 17} true;
  $p60 := $p59;
  assume {:sourceloc "parport_true.i.cil.c", 6315, 17} true;
  $p61 := $pa($pa($p60, 0, 12), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6315, 17} true;
  $p62 := $M.0[$p61];
  assume {:sourceloc "parport_true.i.cil.c", 6315, 17} true;
  $p63 := $pa($pa(Extension, 0, 448), 180, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6315, 17} true;
  $M.0[$p63] := $p62;
  assume {:sourceloc "parport_true.i.cil.c", 6316, 17} true;
  $p64 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6316, 17} true;
  $p65 := $p64;
  assume {:sourceloc "parport_true.i.cil.c", 6316, 17} true;
  $p66 := $pa($pa($p65, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6316, 17} true;
  $p67 := $M.0[$p66];
  assume {:sourceloc "parport_true.i.cil.c", 6316, 17} true;
  $p68 := $pa($pa(Extension, 0, 448), 184, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6316, 17} true;
  $M.0[$p68] := $p67;
  assume {:sourceloc "parport_true.i.cil.c", 6317, 17} true;
  $p69 := $pa($pa($p21, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6317, 17} true;
  $p70 := $M.0[$p69];
  assume {:sourceloc "parport_true.i.cil.c", 6317, 17} true;
  $p71 := $p70;
  assume {:sourceloc "parport_true.i.cil.c", 6317, 17} true;
  $p72 := $and($p71, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6317, 17} true;
  $b73 := ($p72 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6317, 17} true;
  goto $bb41, $bb42;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 6318, 19} true;
  $p75 := $pa($pa(Extension, 0, 448), 188, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6318, 19} true;
  $M.0[$p75] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6319, 17} true;
  goto $bb43;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 6320, 19} true;
  $p74 := $pa($pa(Extension, 0, 448), 188, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6320, 19} true;
  $M.0[$p74] := 0;
  goto $bb43;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 6317, 17} true;
  assume $b73;
  goto $bb39;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 6317, 17} true;
  assume !($b73);
  goto $bb40;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 6322, 17} true;
  goto $bb31;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 6309, 17} true;
  $p76 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6309, 17} true;
  $p77 := $p76;
  assume {:sourceloc "parport_true.i.cil.c", 6309, 17} true;
  $p78 := $pa($pa($p77, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6309, 17} true;
  $p79 := $M.0[$p78];
  assume {:sourceloc "parport_true.i.cil.c", 6309, 17} true;
  $p80 := $pa($pa(Extension, 0, 448), 172, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6309, 17} true;
  $M.0[$p80] := $p79;
  assume {:sourceloc "parport_true.i.cil.c", 6310, 17} true;
  goto $bb31;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 6271, 17} true;
  $p81 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6271, 17} true;
  $p82 := $p81;
  assume {:sourceloc "parport_true.i.cil.c", 6271, 17} true;
  $p83 := $pa($pa($p82, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6271, 17} true;
  $p84 := $M.0[$p83];
  assume {:sourceloc "parport_true.i.cil.c", 6271, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6272, 17} true;
  $b85 := ($p84 == 8);
  assume {:sourceloc "parport_true.i.cil.c", 6272, 17} true;
  goto $bb48, $bb49;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 6273, 19} true;
  goto $bb60;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 6275, 19} true;
  $b86 := ($p84 == 4);
  assume {:sourceloc "parport_true.i.cil.c", 6275, 19} true;
  goto $bb52, $bb53;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 6272, 17} true;
  assume $b85;
  goto $bb46;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 6272, 17} true;
  assume !($b85);
  goto $bb47;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 6276, 21} true;
  goto $bb58;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 6279, 21} true;
  goto $bb54;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 6275, 19} true;
  assume $b86;
  goto $bb50;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 6275, 19} true;
  assume !($b86);
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 6301, 21} true;
  goto $bb55;
$bb55:
  goto $bb56;
$bb56:
  goto $bb57;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 6307, 17} true;
  goto $bb31;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 6293, 23} true;
  $p87 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6293, 23} true;
  $p88 := $pa($pa($p87, 0, 80), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6293, 23} true;
  $p89 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6293, 23} true;
  $p90 := $p89;
  assume {:sourceloc "parport_true.i.cil.c", 6293, 23} true;
  $p91 := $pa($pa($p90, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6293, 23} true;
  $p92 := $p88;
  assume {:sourceloc "parport_true.i.cil.c", 6293, 23} true;
  $p93 := $p91;
  assume {:sourceloc "parport_true.i.cil.c", 6293, 23} true;
  call $memcpy.0.0($p92, $p93, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 6294, 23} true;
  $p94 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6294, 23} true;
  $p95 := $p94;
  assume {:sourceloc "parport_true.i.cil.c", 6294, 23} true;
  $p96 := $pa($pa($p95, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6294, 23} true;
  $p97 := $M.0[$p96];
  assume {:sourceloc "parport_true.i.cil.c", 6294, 23} true;
  $p98 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6294, 23} true;
  $p99 := $pa($pa($p98, 0, 80), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6294, 23} true;
  $M.0[$p99] := $p97;
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $p100 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $p101 := $pa($pa($p100, 0, 80), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $p102 := $p101;
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $p103 := $M.0[$p102];
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $p104 := $trunc($p103, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $p105 := $i2p($p104);
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $p106 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $p107 := $pa($pa($p106, 0, 80), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6295, 23} true;
  $M.0[$p107] := $p105;
  assume {:sourceloc "parport_true.i.cil.c", 6296, 23} true;
  $p108 := $pa($pa($p21, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6296, 23} true;
  $p109 := $M.0[$p108];
  assume {:sourceloc "parport_true.i.cil.c", 6296, 23} true;
  $p110 := $p109;
  assume {:sourceloc "parport_true.i.cil.c", 6296, 23} true;
  $p111 := $pa($pa(Extension, 0, 448), 164, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6296, 23} true;
  $M.0[$p111] := $p110;
  assume {:sourceloc "parport_true.i.cil.c", 6297, 23} true;
  goto $bb59;
$bb59:
  goto $bb55;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 6284, 23} true;
  $p112 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6284, 23} true;
  $p113 := $pa($pa($p112, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6284, 23} true;
  $p114 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6284, 23} true;
  $p115 := $p114;
  assume {:sourceloc "parport_true.i.cil.c", 6284, 23} true;
  $p116 := $pa($pa($p115, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6284, 23} true;
  $p117 := $p113;
  assume {:sourceloc "parport_true.i.cil.c", 6284, 23} true;
  $p118 := $p116;
  assume {:sourceloc "parport_true.i.cil.c", 6284, 23} true;
  call $memcpy.0.0($p117, $p118, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 6285, 23} true;
  $p119 := $pa($pa($p21, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6285, 23} true;
  $p120 := $p119;
  assume {:sourceloc "parport_true.i.cil.c", 6285, 23} true;
  $p121 := $pa($pa($p120, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6285, 23} true;
  $p122 := $M.0[$p121];
  assume {:sourceloc "parport_true.i.cil.c", 6285, 23} true;
  $p123 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6285, 23} true;
  $p124 := $pa($pa($p123, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6285, 23} true;
  $M.0[$p124] := $p122;
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $p125 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $p126 := $pa($pa($p125, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $p127 := $p126;
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $p128 := $M.0[$p127];
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $p129 := $trunc($p128, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $p130 := $i2p($p129);
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $p131 := $pa($pa(Extension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $p132 := $pa($pa($p131, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6286, 23} true;
  $M.0[$p132] := $p130;
  assume {:sourceloc "parport_true.i.cil.c", 6287, 23} true;
  $p133 := $pa($pa($p21, 0, 16), 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6287, 23} true;
  $p134 := $M.0[$p133];
  assume {:sourceloc "parport_true.i.cil.c", 6287, 23} true;
  $p135 := $p134;
  assume {:sourceloc "parport_true.i.cil.c", 6287, 23} true;
  $p136 := $pa($pa(Extension, 0, 448), 160, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6287, 23} true;
  $M.0[$p136] := $p135;
  assume {:sourceloc "parport_true.i.cil.c", 6288, 23} true;
  $M.13[FoundPort] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 6289, 23} true;
  goto $bb59;
}
procedure PptPnpStartValidateResources(DeviceObject: int, FoundPort: int, FoundIrq: int, FoundDma: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b15: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 6960, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6960, 77} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6961, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6961, 66} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6966, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6966, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 6966, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 6966, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6967, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6968, 3} true;
  $b := (FoundPort != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6968, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $p4 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $p5 := $pa($pa($p4, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $p6 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $p8 := $trunc($p7, 32);
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $p9 := $i2p($p8);
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $p10 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $p11 := $pa($pa($p10, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6971, 5} true;
  $M.0[$p11] := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 6972, 5} true;
  $p12 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6972, 5} true;
  $p13 := $pa($pa($p12, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6972, 5} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 6972, 5} true;
  $b15 := ($p14 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 6972, 5} true;
  goto $bb8, $bb9;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 6969, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6970, 3} true;
  $p3 := -1073741810;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 6968, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 6968, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 6982, 3} true;
  $r := $p3;
  return;
$bb6:
  $p20 := 0;
  goto $bb10;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 6974, 7} true;
  $p16 := $pa($pa(DeviceObject, 0, 184), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6974, 7} true;
  $p17 := $M.0[$p16];
  assume {:sourceloc "parport_true.i.cil.c", 6974, 7} true;
  $p18 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6974, 7} true;
  $p19 := $pa($pa($p18, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 6974, 7} true;
  call PptLogError($p17, DeviceObject, $p19, PhysicalZero, 0, 0, 0, 10, 0, 4);
  assume {:sourceloc "parport_true.i.cil.c", 6976, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 6978, 5} true;
  $p20 := -1073741709;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 6972, 5} true;
  assume $b15;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 6972, 5} true;
  assume !($b15);
  goto $bb7;
$bb10:
  $p3 := $p20;
  goto $bb5;
}
procedure PptPnpStopDevice(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7473, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7473, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7479, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7479, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7479, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 7479, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7481, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7481, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 7481, 3} true;
  $p5 := $or($p4, 32);
  assume {:sourceloc "parport_true.i.cil.c", 7481, 3} true;
  $M.0[$p3] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 7482, 3} true;
  $p6 := $pa($pa($p2, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7482, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 7482, 3} true;
  $p8 := $and($p7, -18);
  assume {:sourceloc "parport_true.i.cil.c", 7482, 3} true;
  $M.0[$p6] := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 7484, 3} true;
  $p9 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7484, 3} true;
  $p10 := $pa($pa($p9, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7484, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 7484, 3} true;
  $M.0[$p11] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7485, 3} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7486, 9} true;
  call $p12 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p2, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7486, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7488, 3} true;
  $r := $p12;
  return;
}
procedure PptPnpSurpriseRemoval(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(1, 1));
  assume {:sourceloc "parport_true.i.cil.c", 7579, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7579, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7581, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7586, 3} true;
  $p1 := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7586, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 7586, 3} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 7586, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7588, 3} true;
  $p4 := $pa($pa($p3, 0, 448), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7588, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 7588, 3} true;
  $p6 := $or($p5, 4096);
  assume {:sourceloc "parport_true.i.cil.c", 7588, 3} true;
  $M.0[$p4] := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 7590, 3} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 7592, 3} true;
  $p7 := $pa($pa($p3, 0, 448), 296, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7592, 3} true;
  call $p8 := IoSetDeviceInterfaceState($p7, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7593, 3} true;
  $p9 := $pa($pa(Irp, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7593, 3} true;
  $p10 := $pa($pa($p9, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7593, 3} true;
  $p11 := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 7593, 3} true;
  $M.0[$p11] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7594, 3} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 7595, 9} true;
  call $p12 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p3, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7595, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7597, 3} true;
  $r := $p12;
  return;
}
procedure PptPnpUnhandledIrp(DeviceObject: int, Irp: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 7701, 44} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7701, 64} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7706, 9} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7706, 9} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 7706, 9} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 7706, 9} true;
  call $p3 := PptPnpPassThroughPnpIrpAndReleaseRemoveLock($p2, Irp);
  assume {:sourceloc "parport_true.i.cil.c", 7706, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7709, 3} true;
  $r := $p3;
  return;
}
procedure PptPowerComplete(pDeviceObject: int, pIrp: int, Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b23: bool;
  var $b24: bool;
  var $b25: bool;
  var $b30: bool;
  var $b35: bool;
  var $b42: bool;
  var $b50: bool;
  var $b55: bool;
  var $b58: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p56: int;
  var $p57: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(4, 1));
  call $p1 := $alloca($mul(4, 1));
  assume {:sourceloc "parport_true.i.cil.c", 7740, 42} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7740, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7740, 88} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7742, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7746, 3} true;
  $p2 := $pa($pa(pIrp, 0, 112), 64, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7746, 3} true;
  $p3 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 7746, 3} true;
  $p4 := $pa($pa($p3, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7746, 3} true;
  $p5 := $pa($pa($p4, 0, 12), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7746, 3} true;
  $p6 := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 7746, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 7746, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7747, 3} true;
  $p8 := $pa($pa($p7, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7747, 3} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 7747, 3} true;
  $p10 := $pa($pa($p9, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7747, 3} true;
  $p11 := $M.0[$p10];
  assume {:sourceloc "parport_true.i.cil.c", 7747, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 7748, 3} true;
  $p12 := $pa($pa($p7, 0, 36), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7748, 3} true;
  $p13 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 7748, 3} true;
  $p14 := $pa($pa($p13, 0, 16), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7748, 3} true;
  $p15 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7748, 3} true;
  $p16 := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 7748, 3} true;
  call $memcpy.0.0($p15, $p16, 4, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 7749, 3} true;
  $p17 := $pa($pa($p7, 0, 36), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7749, 3} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 7749, 3} true;
  $p19 := $p18;
  assume {:sourceloc "parport_true.i.cil.c", 7749, 3} true;
  $b := ($p19 == 3);
  assume {:sourceloc "parport_true.i.cil.c", 7749, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 7750, 5} true;
  goto $bb63;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 7752, 5} true;
  $p20 := $pa($pa($p7, 0, 36), 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7752, 5} true;
  $p21 := $M.0[$p20];
  assume {:sourceloc "parport_true.i.cil.c", 7752, 5} true;
  $p22 := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 7752, 5} true;
  $b23 := ($p22 == 2);
  assume {:sourceloc "parport_true.i.cil.c", 7752, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 7749, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 7749, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 7753, 7} true;
  goto $bb13;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 7756, 7} true;
  goto $bb9;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 7752, 5} true;
  assume $b23;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 7752, 5} true;
  assume !($b23);
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 7816, 7} true;
  goto $bb10;
$bb10:
  goto $bb11;
$bb11:
  goto $bb12;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 7825, 3} true;
  $r := 0;
  return;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 7763, 9} true;
  $b24 := ($p11 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 7763, 9} true;
  goto $bb16, $bb17;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 7764, 11} true;
  goto $bb31;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 7766, 11} true;
  $b25 := ($p11 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 7766, 11} true;
  goto $bb20, $bb21;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 7763, 9} true;
  assume $b24;
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 7763, 9} true;
  assume !($b24);
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 7767, 13} true;
  goto $bb47;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 7769, 13} true;
  goto $bb24, $bb25;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 7766, 11} true;
  assume $b25;
  goto $bb18;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 7766, 11} true;
  assume !($b25);
  goto $bb19;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 7769, 20} true;
  goto $bb31;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 7809, 20} true;
  goto $bb26;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 7769, 13} true;
  assume false;
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 7769, 13} true;
  assume !(false);
  goto $bb23;
$bb26:
  goto $bb27;
$bb27:
  goto $bb28;
$bb28:
  goto $bb29;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 7814, 9} true;
  goto $bb30;
$bb30:
  goto $bb10;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 7771, 15} true;
  $p26 := $pa($pa(Extension, 0, 448), 304, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7771, 15} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 7771, 15} true;
  $p28 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7771, 15} true;
  $p29 := $M.0[$p28];
  assume {:sourceloc "parport_true.i.cil.c", 7771, 15} true;
  $b30 := $slt($p27, $p29);
  assume {:sourceloc "parport_true.i.cil.c", 7771, 15} true;
  goto $bb34, $bb35;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 7773, 15} true;
  goto $bb41;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 7774, 17} true;
  $p31 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7774, 17} true;
  $p32 := $M.0[$p31];
  assume {:sourceloc "parport_true.i.cil.c", 7774, 17} true;
  $p33 := $pa($pa(Extension, 0, 448), 304, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7774, 17} true;
  $p34 := $M.0[$p33];
  assume {:sourceloc "parport_true.i.cil.c", 7774, 17} true;
  $b35 := $slt($p32, $p34);
  assume {:sourceloc "parport_true.i.cil.c", 7774, 17} true;
  goto $bb38, $bb39;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 7771, 15} true;
  assume $b30;
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 7771, 15} true;
  assume !($b30);
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 7776, 19} true;
  $p36 := $pa($pa(Extension, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7776, 19} true;
  $p37 := $M.0[$p36];
  assume {:sourceloc "parport_true.i.cil.c", 7776, 19} true;
  call $p38 := PoSetPowerState($p37, $p11, $p);
  assume {:sourceloc "parport_true.i.cil.c", 7776, 19} true;
  $p39 := $pa($pa($p1, 0, 4), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7776, 19} true;
  $M.17[$p39] := $p38;
  assume {:sourceloc "parport_true.i.cil.c", 7778, 19} true;
  $p40 := $pa($pa(Extension, 0, 448), 304, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7778, 19} true;
  $p41 := $M.0[$p40];
  assume {:sourceloc "parport_true.i.cil.c", 7778, 19} true;
  $b42 := (1 == $p41);
  assume {:sourceloc "parport_true.i.cil.c", 7778, 19} true;
  goto $bb44, $bb45;
$bb37:
  goto $bb40;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 7774, 17} true;
  assume $b35;
  goto $bb36;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 7774, 17} true;
  assume !($b35);
  goto $bb37;
$bb40:
  goto $bb41;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 7788, 15} true;
  goto $bb26;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 7780, 19} true;
  goto $bb46;
$bb43:
  goto $bb46;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 7778, 19} true;
  assume $b42;
  goto $bb42;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 7778, 19} true;
  assume !($b42);
  goto $bb43;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 7783, 19} true;
  $p43 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7783, 19} true;
  $p44 := $M.0[$p43];
  assume {:sourceloc "parport_true.i.cil.c", 7783, 19} true;
  $p45 := $pa($pa(Extension, 0, 448), 304, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7783, 19} true;
  $M.0[$p45] := $p44;
  assume {:sourceloc "parport_true.i.cil.c", 7784, 17} true;
  goto $bb40;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 7790, 15} true;
  $p46 := $pa($pa(Extension, 0, 448), 308, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7790, 15} true;
  $p47 := $M.0[$p46];
  assume {:sourceloc "parport_true.i.cil.c", 7790, 15} true;
  $p48 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7790, 15} true;
  $p49 := $M.0[$p48];
  assume {:sourceloc "parport_true.i.cil.c", 7790, 15} true;
  $b50 := $slt($p47, $p49);
  assume {:sourceloc "parport_true.i.cil.c", 7790, 15} true;
  goto $bb50, $bb51;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 7792, 15} true;
  goto $bb57;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 7793, 17} true;
  $p51 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7793, 17} true;
  $p52 := $M.0[$p51];
  assume {:sourceloc "parport_true.i.cil.c", 7793, 17} true;
  $p53 := $pa($pa(Extension, 0, 448), 308, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7793, 17} true;
  $p54 := $M.0[$p53];
  assume {:sourceloc "parport_true.i.cil.c", 7793, 17} true;
  $b55 := $slt($p52, $p54);
  assume {:sourceloc "parport_true.i.cil.c", 7793, 17} true;
  goto $bb54, $bb55;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 7790, 15} true;
  assume $b50;
  goto $bb48;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 7790, 15} true;
  assume !($b50);
  goto $bb49;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 7794, 19} true;
  $p56 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7794, 19} true;
  $p57 := $M.0[$p56];
  assume {:sourceloc "parport_true.i.cil.c", 7794, 19} true;
  $b58 := (1 == $p57);
  assume {:sourceloc "parport_true.i.cil.c", 7794, 19} true;
  goto $bb60, $bb61;
$bb53:
  goto $bb56;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 7793, 17} true;
  assume $b55;
  goto $bb52;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 7793, 17} true;
  assume !($b55);
  goto $bb53;
$bb56:
  goto $bb57;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 7808, 15} true;
  goto $bb26;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 7796, 21} true;
  $p62 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7796, 21} true;
  $M.0[$p62] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 7797, 21} true;
  $p63 := $pa($pa(Extension, 0, 448), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7797, 21} true;
  $p64 := $M.0[$p63];
  assume {:sourceloc "parport_true.i.cil.c", 7797, 21} true;
  call $p65 := PoRequestPowerIrp($p64, 2, $p, 0, 0, 0);
  assume {:sourceloc "parport_true.i.cil.c", 7800, 19} true;
  goto $bb62;
$bb59:
  goto $bb62;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 7794, 19} true;
  assume $b58;
  goto $bb58;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 7794, 19} true;
  assume !($b58);
  goto $bb59;
$bb62:
  assume {:sourceloc "parport_true.i.cil.c", 7803, 19} true;
  $p59 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 7803, 19} true;
  $p60 := $M.0[$p59];
  assume {:sourceloc "parport_true.i.cil.c", 7803, 19} true;
  $p61 := $pa($pa(Extension, 0, 448), 308, 1);
  assume {:sourceloc "parport_true.i.cil.c", 7803, 19} true;
  $M.0[$p61] := $p60;
  assume {:sourceloc "parport_true.i.cil.c", 7804, 17} true;
  goto $bb56;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 7759, 9} true;
  goto $bb30;
}
procedure PptQueryNumWaiters(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(1, 1));
  call $p1 := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8962, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8964, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8965, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8969, 3} true;
  $p2 := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 8969, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8970, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8970, 3} true;
  $p4 := $pa($pa($p1, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8970, 3} true;
  $M.0[$p4] := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 8971, 3} true;
  $p5 := $pa($pa($p2, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8971, 3} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 8971, 3} true;
  $b := ($p6 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8971, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8973, 5} true;
  $p15 := $pa($pa($p2, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8973, 5} true;
  $p16 := $M.0[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 8973, 5} true;
  $p17 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8973, 5} true;
  call $p18 := KeSynchronizeExecution($p16, PptSynchronizedRead, $p17);
  assume {:sourceloc "parport_true.i.cil.c", 8976, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8978, 5} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 8979, 5} true;
  $p7 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8979, 5} true;
  call $p8 := PptSynchronizedRead($p7);
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8971, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8971, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8983, 3} true;
  $p9 := $pa($pa($p1, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8983, 3} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 8983, 3} true;
  $b11 := $sge($p10, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8983, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8984, 5} true;
  $p13 := $pa($pa($p1, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8984, 5} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 8984, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8985, 3} true;
  $p12 := $p14;
  goto $bb10;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 8986, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p12 := 0;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8983, 3} true;
  assume $b11;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8983, 3} true;
  assume !($b11);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8988, 3} true;
  $r := $p12;
  return;
}
procedure PptRegGetDeviceParameterDword(Pdo: int, ParameterName: int, ParameterValue: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b25: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(4, 1));
  call $p1 := $alloca($mul(56, 1));
  call $p2 := $alloca($mul(4, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8305, 55} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8305, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8306, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8308, 10} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8309, 28} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8310, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8314, 12} true;
  call $p3 := IoOpenDeviceRegistryKey(Pdo, 1, 131097, $p);
  assume {:sourceloc "parport_true.i.cil.c", 8314, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8316, 3} true;
  $b := $sge($p3, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8316, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8317, 5} true;
  $p4 := $p3;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8316, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8316, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8342, 1} true;
  $r := $p4;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8322, 3} true;
  $p5 := $M.10[ParameterValue];
  assume {:sourceloc "parport_true.i.cil.c", 8322, 3} true;
  $M.3[$p2] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 8323, 3} true;
  $p6 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8323, 3} true;
  call $memset.2($p6, 0, 56, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 8324, 3} true;
  $p7 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8324, 3} true;
  $p8 := $pa($pa($p7, 0, 28), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8324, 3} true;
  $M.2[$p8] := 32;
  assume {:sourceloc "parport_true.i.cil.c", 8325, 3} true;
  $p9 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8325, 3} true;
  $p10 := $pa($pa($p9, 0, 28), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8325, 3} true;
  $M.2[$p10] := ParameterName;
  assume {:sourceloc "parport_true.i.cil.c", 8326, 3} true;
  $p11 := ParameterValue;
  assume {:sourceloc "parport_true.i.cil.c", 8326, 3} true;
  $p12 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8326, 3} true;
  $p13 := $pa($pa($p12, 0, 28), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8326, 3} true;
  $M.2[$p13] := $p11;
  assume {:sourceloc "parport_true.i.cil.c", 8327, 3} true;
  $p14 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8327, 3} true;
  $p15 := $pa($pa($p14, 0, 28), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8327, 3} true;
  $M.2[$p15] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 8328, 3} true;
  $p16 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 8328, 3} true;
  $p17 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8328, 3} true;
  $p18 := $pa($pa($p17, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8328, 3} true;
  $M.2[$p18] := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 8329, 3} true;
  $p19 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8329, 3} true;
  $p20 := $pa($pa($p19, 0, 28), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8329, 3} true;
  $M.2[$p20] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 8330, 12} true;
  $p21 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8330, 12} true;
  $p22 := $p21;
  assume {:sourceloc "parport_true.i.cil.c", 8330, 12} true;
  $p23 := $pa($pa($p1, 0, 56), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8330, 12} true;
  call $p24 := RtlQueryRegistryValues(1073741824, $p22, $p23, 0, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8330, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8332, 3} true;
  $b25 := $sge($p24, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8332, 3} true;
  goto $bb9, $bb10;
$bb7:
  goto $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8333, 5} true;
  $p26 := $M.3[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 8333, 5} true;
  $M.10[ParameterValue] := $p26;
  assume {:sourceloc "parport_true.i.cil.c", 8334, 3} true;
  goto $bb11;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8332, 3} true;
  assume $b25;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8332, 3} true;
  assume !($b25);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 8338, 3} true;
  $p27 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8338, 3} true;
  call $p28 := ZwClose($p27);
  assume {:sourceloc "parport_true.i.cil.c", 8340, 3} true;
  $p4 := $p24;
  goto $bb5;
}
procedure PptRegInitDriverSettings(RegistryPath___0: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b48: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(84, 1));
  call $p1 := $alloca($mul(4, 1));
  call $p2 := $alloca($mul(4, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8252, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8254, 28} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8256, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8257, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8262, 3} true;
  $M.3[$p1] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 8263, 3} true;
  $M.3[$p2] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 8264, 9} true;
  $p3 := $pa($pa(RegistryPath___0, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8264, 9} true;
  $p4 := $M.53[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 8264, 9} true;
  $p5 := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 8264, 9} true;
  $p6 := $add($p5, 2);
  assume {:sourceloc "parport_true.i.cil.c", 8264, 9} true;
  call $p7 := ExAllocatePoolWithTag(1, $p6, 1349673296);
  assume {:sourceloc "parport_true.i.cil.c", 8264, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8266, 3} true;
  $p8 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 8266, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8268, 3} true;
  $b := ($p8 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8268, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8269, 5} true;
  $p9 := $M.3[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8269, 5} true;
  $M.0[PptDebugLevel] := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 8270, 5} true;
  $p10 := $M.3[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 8270, 5} true;
  $M.0[PptBreakOn] := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 8271, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8268, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8268, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8304, 1} true;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8276, 3} true;
  $p11 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 8276, 3} true;
  $p12 := $pa($pa(RegistryPath___0, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8276, 3} true;
  $p13 := $M.54[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 8276, 3} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 8276, 3} true;
  $p15 := $pa($pa(RegistryPath___0, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8276, 3} true;
  $p16 := $M.53[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 8276, 3} true;
  $p17 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 8276, 3} true;
  call llvm.memmove.p0i8.p0i8.i32($p11, $p14, $p17, 2, false);
  assume {:sourceloc "parport_true.i.cil.c", 8277, 3} true;
  $p18 := $pa($pa(RegistryPath___0, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8277, 3} true;
  $p19 := $M.53[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 8277, 3} true;
  $p20 := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 8277, 3} true;
  $p21 := $sdiv($p20, 2);
  assume {:sourceloc "parport_true.i.cil.c", 8277, 3} true;
  $p22 := $pa($p8, $p21, 2);
  assume {:sourceloc "parport_true.i.cil.c", 8277, 3} true;
  $M.0[$p22] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 8278, 3} true;
  $p23 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 8278, 3} true;
  call $memset.2($p23, 0, 84, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 8279, 3} true;
  $p24 := $pa($pa($p, 0, 84), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8279, 3} true;
  $p25 := $pa($pa($p24, 0, 28), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8279, 3} true;
  $M.2[$p25] := 32;
  assume {:sourceloc "parport_true.i.cil.c", 8280, 3} true;
  $p26 := $pa($pa($p, 0, 84), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8280, 3} true;
  $p27 := $pa($pa($p26, 0, 28), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8280, 3} true;
  $M.2[$p27] := PptDebugLevel;
  assume {:sourceloc "parport_true.i.cil.c", 8281, 3} true;
  $p28 := $pa($pa($p, 0, 84), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8281, 3} true;
  $p29 := $pa($pa($p28, 0, 28), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8281, 3} true;
  $M.2[$p29] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 8282, 3} true;
  $p30 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8282, 3} true;
  $p31 := $pa($pa($p, 0, 84), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8282, 3} true;
  $p32 := $pa($pa($p31, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8282, 3} true;
  $M.2[$p32] := $p30;
  assume {:sourceloc "parport_true.i.cil.c", 8283, 3} true;
  $p33 := $pa($pa($p, 0, 84), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8283, 3} true;
  $p34 := $pa($pa($p33, 0, 28), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8283, 3} true;
  $M.2[$p34] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 8284, 3} true;
  $p35 := $pa($pa($p, 0, 84), 1, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8284, 3} true;
  $p36 := $pa($pa($p35, 0, 28), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8284, 3} true;
  $M.2[$p36] := 32;
  assume {:sourceloc "parport_true.i.cil.c", 8285, 3} true;
  $p37 := $pa($pa($p, 0, 84), 1, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8285, 3} true;
  $p38 := $pa($pa($p37, 0, 28), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8285, 3} true;
  $M.2[$p38] := PptBreakOn;
  assume {:sourceloc "parport_true.i.cil.c", 8286, 3} true;
  $p39 := $pa($pa($p, 0, 84), 1, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8286, 3} true;
  $p40 := $pa($pa($p39, 0, 28), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8286, 3} true;
  $M.2[$p40] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 8287, 3} true;
  $p41 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 8287, 3} true;
  $p42 := $pa($pa($p, 0, 84), 1, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8287, 3} true;
  $p43 := $pa($pa($p42, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8287, 3} true;
  $M.2[$p43] := $p41;
  assume {:sourceloc "parport_true.i.cil.c", 8288, 3} true;
  $p44 := $pa($pa($p, 0, 84), 1, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8288, 3} true;
  $p45 := $pa($pa($p44, 0, 28), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8288, 3} true;
  $M.2[$p45] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 8289, 12} true;
  $p46 := $pa($pa($p, 0, 84), 0, 28);
  assume {:sourceloc "parport_true.i.cil.c", 8289, 12} true;
  call $p47 := RtlQueryRegistryValues(-2147483648, $p8, $p46, 0, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8289, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8291, 3} true;
  $b48 := $sge($p47, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8291, 3} true;
  goto $bb9, $bb10;
$bb7:
  goto $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8292, 5} true;
  $p49 := $M.3[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8292, 5} true;
  $M.0[PptDebugLevel] := $p49;
  assume {:sourceloc "parport_true.i.cil.c", 8293, 5} true;
  $p50 := $M.3[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 8293, 5} true;
  $M.0[PptBreakOn] := $p50;
  assume {:sourceloc "parport_true.i.cil.c", 8294, 3} true;
  goto $bb11;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8291, 3} true;
  assume $b48;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8291, 3} true;
  assume !($b48);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 8302, 3} true;
  goto $bb5;
}
procedure PptRegSetDeviceParameterDword(Pdo: int, ParameterName: int, ParameterValue: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b7: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(4, 1));
  call $p1 := $alloca($mul(8, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8343, 55} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8343, 67} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8344, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8346, 10} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8347, 18} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8351, 12} true;
  call $p2 := IoOpenDeviceRegistryKey(Pdo, 1, 131078, $p);
  assume {:sourceloc "parport_true.i.cil.c", 8351, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8353, 3} true;
  $b := $sge($p2, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8353, 3} true;
  goto $bb3, $bb4;
$bb1:
  goto $bb6;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8356, 5} true;
  $p3 := $p2;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8353, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8353, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8375, 1} true;
  $r := $p3;
  return;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8362, 12} true;
  $p4 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8362, 12} true;
  $p5 := ParameterValue;
  assume {:sourceloc "parport_true.i.cil.c", 8362, 12} true;
  call $p6 := ZwSetValueKey($p4, $p1, 0, 4, $p5, 4);
  assume {:sourceloc "parport_true.i.cil.c", 8362, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8364, 3} true;
  $b7 := $sge($p6, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8364, 3} true;
  goto $bb9, $bb10;
$bb7:
  goto $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8367, 3} true;
  goto $bb11;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8364, 3} true;
  assume $b7;
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8364, 3} true;
  assume !($b7);
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 8371, 3} true;
  $p8 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 8371, 3} true;
  call $p9 := ZwClose($p8);
  assume {:sourceloc "parport_true.i.cil.c", 8373, 3} true;
  $p3 := $p6;
  goto $bb5;
}
procedure PptReleaseRemoveLock(RemoveLock: int, Tag: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2419, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2419, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2424, 3} true;
  call IoReleaseRemoveLockEx(RemoveLock, Tag, 24);
  assume {:sourceloc "parport_true.i.cil.c", 2428, 1} true;
  return;
}
procedure PptReleaseRemoveLockAndWait(RemoveLock: int, Tag: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2429, 50} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2429, 69} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2434, 3} true;
  call IoReleaseRemoveLockAndWaitEx(RemoveLock, Tag, 24);
  assume {:sourceloc "parport_true.i.cil.c", 2438, 1} true;
  return;
}
procedure PptRemovePptRemovalRelation(Extension: int, PptRemovalRelations: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b10: bool;
  var $b30: bool;
  var $b33: bool;
  var $b34: bool;
  var $b41: bool;
  var $b52: bool;
  var $p: int;
  var $p1: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p31: int;
  var $p32: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2902, 56} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2902, 95} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2917, 3} true;
  $p := $pa($pa(PptRemovalRelations, 0, 12), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2917, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 2917, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2918, 3} true;
  $p2 := $pa($pa(Extension, 0, 448), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2918, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2919, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2920, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2921, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2922, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2923, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2924, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2930, 3} true;
  $p3 := $pa($pa($p2, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2930, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 2930, 3} true;
  $p5 := $p2i($p4);
  assume {:sourceloc "parport_true.i.cil.c", 2930, 3} true;
  $p6 := $p2i($p2);
  assume {:sourceloc "parport_true.i.cil.c", 2930, 3} true;
  $b := ($p5 == $p6);
  assume {:sourceloc "parport_true.i.cil.c", 2930, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2936, 5} true;
  goto $bb39;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2930, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2930, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2948, 3} true;
  $p7 := 0;
  $p8 := 0;
  $p9 := 0;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2948, 13} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 2950, 5} true;
  $b10 := ($p9 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2950, 5} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 2953, 7} true;
  goto $bb33;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 2952, 5} true;
  goto $bb12;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 2950, 5} true;
  assume $b10;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 2950, 5} true;
  assume !($b10);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 2955, 5} true;
  $p11 := $pa($pa($p2, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2955, 5} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 2955, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2956, 5} true;
  $p13 := $pa($pa($p2, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2956, 5} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 2956, 5} true;
  $p15 := $pa($pa($p14, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2956, 5} true;
  $p16 := $M.0[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 2956, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2957, 5} true;
  $p17 := $pa($pa($p2, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2957, 5} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 2957, 5} true;
  $p19 := $pa($pa($p18, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2957, 5} true;
  $p20 := $M.0[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 2957, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2958, 5} true;
  $p21 := $pa($pa($p20, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2958, 5} true;
  $M.0[$p21] := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 2959, 5} true;
  $p22 := $pa($pa($p16, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2959, 5} true;
  $M.0[$p22] := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 2960, 5} true;
  $p23 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 2960, 5} true;
  $p24 := $pa($p23, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2960, 5} true;
  $p25 := $p24;
  assume {:sourceloc "parport_true.i.cil.c", 2960, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2961, 5} true;
  $p26 := $pa($pa($p25, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2961, 5} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 2961, 5} true;
  $p28 := $p2i($p27);
  assume {:sourceloc "parport_true.i.cil.c", 2961, 5} true;
  $p29 := $p2i($p1);
  assume {:sourceloc "parport_true.i.cil.c", 2961, 5} true;
  $b30 := ($p28 == $p29);
  assume {:sourceloc "parport_true.i.cil.c", 2961, 5} true;
  goto $bb15, $bb16;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 2964, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2965, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2966, 5} true;
  $p38 := $p7;
  $p39 := 1;
  $p40 := 1;
  goto $bb27;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 2967, 7} true;
  $p31 := $p2i($p7);
  assume {:sourceloc "parport_true.i.cil.c", 2967, 7} true;
  $p32 := $p2i($p12);
  assume {:sourceloc "parport_true.i.cil.c", 2967, 7} true;
  $b33 := ($p31 == $p32);
  assume {:sourceloc "parport_true.i.cil.c", 2967, 7} true;
  goto $bb19, $bb20;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 2961, 5} true;
  assume $b30;
  goto $bb13;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 2961, 5} true;
  assume !($b30);
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 2970, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2971, 7} true;
  $p36 := $p7;
  $p37 := 1;
  goto $bb26;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 2972, 9} true;
  $b34 := ($p7 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2972, 9} true;
  goto $bb23, $bb24;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 2967, 7} true;
  assume $b33;
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 2967, 7} true;
  assume !($b33);
  goto $bb18;
$bb21:
  $p35 := $p7;
  goto $bb25;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 2975, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2976, 9} true;
  $p35 := $p12;
  goto $bb25;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 2972, 9} true;
  assume $b34;
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 2972, 9} true;
  assume !($b34);
  goto $bb22;
$bb25:
  $p36 := $p35;
  $p37 := $p9;
  goto $bb26;
$bb26:
  $p38 := $p36;
  $p39 := $p8;
  $p40 := $p37;
  goto $bb27;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 2981, 5} true;
  $b41 := ($p39 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2981, 5} true;
  goto $bb30, $bb31;
$bb28:
  goto $bb32;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 2982, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2983, 7} true;
  $p42 := $pa($pa($p2, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2983, 7} true;
  $p43 := $M.0[$p42];
  assume {:sourceloc "parport_true.i.cil.c", 2983, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2984, 7} true;
  $p44 := $pa($pa($p25, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2984, 7} true;
  $p45 := $pa($pa($p44, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2984, 7} true;
  $M.0[$p45] := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 2985, 7} true;
  $p46 := $pa($pa($p25, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2985, 7} true;
  $p47 := $pa($pa($p46, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2985, 7} true;
  $M.0[$p47] := $p43;
  assume {:sourceloc "parport_true.i.cil.c", 2986, 7} true;
  $p48 := $pa($pa($p25, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2986, 7} true;
  $p49 := $pa($pa($p43, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2986, 7} true;
  $M.0[$p49] := $p48;
  assume {:sourceloc "parport_true.i.cil.c", 2987, 7} true;
  $p50 := $pa($pa($p25, 0, 24), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2987, 7} true;
  $p51 := $pa($pa($p2, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2987, 7} true;
  $M.0[$p51] := $p50;
  assume {:sourceloc "parport_true.i.cil.c", 2988, 5} true;
  goto $bb32;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 2981, 5} true;
  assume $b41;
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 2981, 5} true;
  assume !($b41);
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 2991, 3} true;
  $p7 := $p38;
  $p8 := $p39;
  $p9 := $p40;
  goto $bb6;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 2997, 3} true;
  $b52 := ($p8 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2997, 3} true;
  goto $bb36, $bb37;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 3002, 3} true;
  goto $bb38;
$bb35:
  goto $bb38;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 2997, 3} true;
  assume $b52;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 2997, 3} true;
  assume !($b52);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 3007, 3} true;
  goto $bb39;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 3009, 1} true;
  $r := 0;
  return;
}
procedure PptSend1284_3Command(DeviceExtension: int, Command: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b31: bool;
  var $b38: bool;
  var $b43: bool;
  var $b50: bool;
  var $b55: bool;
  var $b64: bool;
  var $b66: bool;
  var $b75: bool;
  var $b77: bool;
  var $b81: bool;
  var $b83: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p59: int;
  var $p6: int;
  var $p60: int;
  var $p61: int;
  var $p62: int;
  var $p63: int;
  var $p65: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p76: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p82: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 4636, 48} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4636, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4637, 13} true;
  call $p := __VERIFIER_nondet_char();
  assume {:sourceloc "parport_true.i.cil.c", 4637, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4659, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4660, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4661, 3} true;
  $p1 := $pa($pa(DeviceExtension, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4661, 3} true;
  $p2 := $pa($pa($p1, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4661, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 4661, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4662, 3} true;
  $p4 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4662, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4663, 3} true;
  $p5 := $pa($p3, 2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4663, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4664, 3} true;
  $p6 := Command;
  assume {:sourceloc "parport_true.i.cil.c", 4664, 3} true;
  $p7 := $and($p6, 248);
  assume {:sourceloc "parport_true.i.cil.c", 4664, 3} true;
  $p8 := $trunc($p7, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4664, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4668, 11} true;
  call $p9 := READ_PORT_UCHAR($p5);
  assume {:sourceloc "parport_true.i.cil.c", 4668, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4669, 3} true;
  $p10 := $p9;
  assume {:sourceloc "parport_true.i.cil.c", 4669, 3} true;
  $p11 := $and($p10, -9);
  assume {:sourceloc "parport_true.i.cil.c", 4669, 3} true;
  $p12 := $or($p11, 4);
  assume {:sourceloc "parport_true.i.cil.c", 4669, 3} true;
  $p13 := $trunc($p12, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4669, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4670, 3} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 4670, 3} true;
  $p15 := $and($p14, -33);
  assume {:sourceloc "parport_true.i.cil.c", 4670, 3} true;
  $p16 := $trunc($p15, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4670, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4671, 3} true;
  call WRITE_PORT_UCHAR($p5, $p16);
  assume {:sourceloc "parport_true.i.cil.c", 4672, 3} true;
  $p17 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 4672, 3} true;
  $p18 := $and($p17, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4672, 3} true;
  $p19 := $trunc($p18, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4672, 3} true;
  call WRITE_PORT_UCHAR($p5, $p19);
  assume {:sourceloc "parport_true.i.cil.c", 4673, 3} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4674, 3} true;
  $p20 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4674, 3} true;
  $p21 := $pa($pa(ModeQualifier___6, 0, 7), $p20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4674, 3} true;
  $p22 := $M.29[$p21];
  assume {:sourceloc "parport_true.i.cil.c", 4674, 3} true;
  call WRITE_PORT_UCHAR($p3, $p22);
  assume {:sourceloc "parport_true.i.cil.c", 4675, 3} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4676, 14} true;
  $p23 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4676, 14} true;
  call $p24 := READ_PORT_UCHAR($p23);
  assume {:sourceloc "parport_true.i.cil.c", 4676, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4678, 3} true;
  $p25 := $p24;
  assume {:sourceloc "parport_true.i.cil.c", 4678, 3} true;
  $p26 := $and($p25, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4678, 3} true;
  $b := ($p26 == 184);
  assume {:sourceloc "parport_true.i.cil.c", 4678, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 4679, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4680, 3} true;
  $p30 := 1;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 4682, 16} true;
  $p27 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4682, 16} true;
  call $p28 := CheckPort($p27, 184, 184, 5);
  assume {:sourceloc "parport_true.i.cil.c", 4682, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4683, 5} true;
  $p29 := $p28;
  assume {:sourceloc "parport_true.i.cil.c", 4683, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p30 := $p29;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 4678, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 4678, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 4686, 3} true;
  $b31 := ($p30 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4686, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 4688, 5} true;
  $p33 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 4, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4688, 5} true;
  call WRITE_PORT_UCHAR($p3, $p33);
  assume {:sourceloc "parport_true.i.cil.c", 4689, 5} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4690, 16} true;
  $p34 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4690, 16} true;
  call $p35 := READ_PORT_UCHAR($p34);
  assume {:sourceloc "parport_true.i.cil.c", 4690, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4692, 5} true;
  $p36 := $p35;
  assume {:sourceloc "parport_true.i.cil.c", 4692, 5} true;
  $p37 := $and($p36, 184);
  assume {:sourceloc "parport_true.i.cil.c", 4692, 5} true;
  $b38 := ($p37 == 24);
  assume {:sourceloc "parport_true.i.cil.c", 4692, 5} true;
  goto $bb13, $bb14;
$bb7:
  $p32 := 0;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 4686, 3} true;
  assume $b31;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 4686, 3} true;
  assume !($b31);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 4799, 3} true;
  call WRITE_PORT_UCHAR($p5, $p9);
  assume {:sourceloc "parport_true.i.cil.c", 4801, 3} true;
  $r := $p32;
  return;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 4693, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4694, 5} true;
  $p42 := 1;
  goto $bb15;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 4696, 17} true;
  $p39 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4696, 17} true;
  call $p40 := CheckPort($p39, 184, 24, 5);
  assume {:sourceloc "parport_true.i.cil.c", 4696, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4697, 7} true;
  $p41 := $p40;
  assume {:sourceloc "parport_true.i.cil.c", 4697, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p42 := $p41;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 4692, 5} true;
  assume $b38;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 4692, 5} true;
  assume !($b38);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 4700, 5} true;
  $b43 := ($p42 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4700, 5} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 4702, 7} true;
  $p45 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 5, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4702, 7} true;
  call WRITE_PORT_UCHAR($p3, $p45);
  assume {:sourceloc "parport_true.i.cil.c", 4703, 7} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4704, 17} true;
  $p46 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4704, 17} true;
  call $p47 := READ_PORT_UCHAR($p46);
  assume {:sourceloc "parport_true.i.cil.c", 4704, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4706, 7} true;
  $p48 := $p47;
  assume {:sourceloc "parport_true.i.cil.c", 4706, 7} true;
  $p49 := $and($p48, 48);
  assume {:sourceloc "parport_true.i.cil.c", 4706, 7} true;
  $b50 := ($p49 == 48);
  assume {:sourceloc "parport_true.i.cil.c", 4706, 7} true;
  goto $bb23, $bb24;
$bb17:
  $p44 := 0;
  goto $bb20;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 4700, 5} true;
  assume $b43;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 4700, 5} true;
  assume !($b43);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 4795, 3} true;
  $p32 := $p44;
  goto $bb10;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 4707, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4708, 7} true;
  $p54 := 1;
  goto $bb25;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 4710, 19} true;
  $p51 := $pa($p3, 1, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4710, 19} true;
  call $p52 := CheckPort($p51, 48, 48, 5);
  assume {:sourceloc "parport_true.i.cil.c", 4710, 19} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4711, 9} true;
  $p53 := $p52;
  assume {:sourceloc "parport_true.i.cil.c", 4711, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p54 := $p53;
  goto $bb25;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 4706, 7} true;
  assume $b50;
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 4706, 7} true;
  assume !($b50);
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 4714, 7} true;
  $b55 := ($p54 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4714, 7} true;
  goto $bb28, $bb29;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 4716, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4717, 9} true;
  call WRITE_PORT_UCHAR($p3, Command);
  assume {:sourceloc "parport_true.i.cil.c", 4718, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4719, 9} true;
  $p57 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 4719, 9} true;
  $p58 := $and($p57, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4719, 9} true;
  $p59 := $trunc($p58, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4719, 9} true;
  call WRITE_PORT_UCHAR($p5, $p59);
  assume {:sourceloc "parport_true.i.cil.c", 4720, 9} true;
  $p60 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 4720, 9} true;
  $p61 := $or($p60, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4720, 9} true;
  $p62 := $trunc($p61, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4720, 9} true;
  call WRITE_PORT_UCHAR($p5, $p62);
  assume {:sourceloc "parport_true.i.cil.c", 4721, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4723, 9} true;
  $p63 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 4723, 9} true;
  $b64 := ($p63 == 224);
  assume {:sourceloc "parport_true.i.cil.c", 4723, 9} true;
  goto $bb33, $bb34;
$bb27:
  $p56 := 0;
  goto $bb30;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 4714, 7} true;
  assume $b55;
  goto $bb26;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 4714, 7} true;
  assume !($b55);
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 4792, 5} true;
  $p44 := $p56;
  goto $bb20;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 4724, 11} true;
  goto $bb55;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 4726, 11} true;
  $p65 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 4726, 11} true;
  $b66 := ($p65 == 48);
  assume {:sourceloc "parport_true.i.cil.c", 4726, 11} true;
  goto $bb37, $bb38;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 4723, 9} true;
  assume $b64;
  goto $bb31;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 4723, 9} true;
  assume !($b64);
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 4727, 13} true;
  goto $bb44;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 4730, 13} true;
  goto $bb39;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 4726, 11} true;
  assume $b66;
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 4726, 11} true;
  assume !($b66);
  goto $bb36;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 4774, 15} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4775, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4777, 15} true;
  $p67 := 1;
  goto $bb40;
$bb40:
  goto $bb41;
$bb41:
  goto $bb42;
$bb42:
  goto $bb43;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 4785, 9} true;
  $p68 := $p16;
  assume {:sourceloc "parport_true.i.cil.c", 4785, 9} true;
  $p69 := $and($p68, -2);
  assume {:sourceloc "parport_true.i.cil.c", 4785, 9} true;
  $p70 := $trunc($p69, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4785, 9} true;
  call WRITE_PORT_UCHAR($p5, $p70);
  assume {:sourceloc "parport_true.i.cil.c", 4786, 9} true;
  call KeStallExecutionProcessor(3);
  assume {:sourceloc "parport_true.i.cil.c", 4787, 9} true;
  $p71 := $M.29[$pa($pa(ModeQualifier___6, 0, 7), 6, 1)];
  assume {:sourceloc "parport_true.i.cil.c", 4787, 9} true;
  call WRITE_PORT_UCHAR($p3, $p71);
  assume {:sourceloc "parport_true.i.cil.c", 4789, 7} true;
  $p56 := $p67;
  goto $bb30;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 4754, 25} true;
  call $p72 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4754, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4756, 15} true;
  $p73 := $p72;
  assume {:sourceloc "parport_true.i.cil.c", 4756, 15} true;
  $p74 := $and($p73, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4756, 15} true;
  $b75 := ($p74 != 8);
  assume {:sourceloc "parport_true.i.cil.c", 4756, 15} true;
  goto $bb47, $bb48;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 4757, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4760, 15} true;
  $p76 := 1;
  goto $bb49;
$bb46:
  $p76 := 0;
  goto $bb49;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 4756, 15} true;
  assume $b75;
  goto $bb45;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 4756, 15} true;
  assume !($b75);
  goto $bb46;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 4763, 15} true;
  $b77 := ($p76 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4763, 15} true;
  goto $bb52, $bb53;
$bb50:
  goto $bb54;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 4766, 15} true;
  goto $bb54;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 4763, 15} true;
  assume $b77;
  goto $bb50;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 4763, 15} true;
  assume !($b77);
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 4769, 15} true;
  $p67 := $p76;
  goto $bb40;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 4736, 21} true;
  call $p78 := READ_PORT_UCHAR($p4);
  assume {:sourceloc "parport_true.i.cil.c", 4736, 21} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4738, 15} true;
  $p79 := $p78;
  assume {:sourceloc "parport_true.i.cil.c", 4738, 15} true;
  $p80 := $and($p79, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4738, 15} true;
  $b81 := ($p80 == 8);
  assume {:sourceloc "parport_true.i.cil.c", 4738, 15} true;
  goto $bb58, $bb59;
$bb56:
  assume {:sourceloc "parport_true.i.cil.c", 4739, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4742, 15} true;
  $p82 := 1;
  goto $bb60;
$bb57:
  $p82 := 0;
  goto $bb60;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 4738, 15} true;
  assume $b81;
  goto $bb56;
$bb59:
  assume {:sourceloc "parport_true.i.cil.c", 4738, 15} true;
  assume !($b81);
  goto $bb57;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 4745, 15} true;
  $b83 := ($p82 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4745, 15} true;
  goto $bb63, $bb64;
$bb61:
  goto $bb65;
$bb62:
  assume {:sourceloc "parport_true.i.cil.c", 4748, 15} true;
  goto $bb65;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 4745, 15} true;
  assume $b83;
  goto $bb61;
$bb64:
  assume {:sourceloc "parport_true.i.cil.c", 4745, 15} true;
  assume !($b83);
  goto $bb62;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 4751, 15} true;
  $p67 := $p82;
  goto $bb40;
}
procedure PptSetByteMode(Extension: int, ChipMode: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5605, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5605, 61} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5609, 3} true;
  $p := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5609, 3} true;
  $p1 := $pa($pa($p, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5609, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 5609, 3} true;
  $p3 := $and($p2, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5609, 3} true;
  $b := ($p3 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5609, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5611, 14} true;
  call $p5 := PptEcrSetMode(Extension, ChipMode);
  assume {:sourceloc "parport_true.i.cil.c", 5611, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5613, 3} true;
  goto $bb5;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5609, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5609, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5617, 12} true;
  call $p4 := PptCheckByteMode(Extension);
  assume {:sourceloc "parport_true.i.cil.c", 5617, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5619, 3} true;
  $r := $p4;
  return;
}
procedure PptSetCancelRoutine(Irp: int, CancelRoutine: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8991, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8991, 45} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8997, 9} true;
  $p := $pa($pa(Irp, 0, 112), 56, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8997, 9} true;
  $p1 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 8997, 9} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8997, 9} true;
  $p3 := CancelRoutine;
  assume {:sourceloc "parport_true.i.cil.c", 8997, 9} true;
  $p4 := $p2i($p3);
  assume {:sourceloc "parport_true.i.cil.c", 8997, 9} true;
  call $p5 := InterlockedExchange($p2, $p4);
  assume {:sourceloc "parport_true.i.cil.c", 8997, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8999, 3} true;
  $p6 := $i2p($p5);
  assume {:sourceloc "parport_true.i.cil.c", 8999, 3} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 8999, 3} true;
  $p8 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 8999, 3} true;
  $r := $p8;
  return;
}
procedure PptSetChipMode(Extension: int, ChipMode: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b11: bool;
  var $b13: bool;
  var $b16: bool;
  var $b27: bool;
  var $b34: bool;
  var $b41: bool;
  var $b7: bool;
  var $b9: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p12: int;
  var $p14: int;
  var $p15: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p6: int;
  var $p8: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 5427, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5427, 61} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5432, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5433, 3} true;
  $p := ChipMode;
  assume {:sourceloc "parport_true.i.cil.c", 5433, 3} true;
  $p1 := $and($p, -32);
  assume {:sourceloc "parport_true.i.cil.c", 5433, 3} true;
  $p2 := $trunc($p1, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5433, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5436, 3} true;
  $p3 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5436, 3} true;
  $p4 := $pa($pa($p3, 0, 80), 68, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5436, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 5436, 3} true;
  $b := ($p5 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5436, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 5439, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5440, 5} true;
  $p17 := -1073741436;
  goto $bb32;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 5436, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 5436, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 5444, 3} true;
  $p6 := $M.30[Extension_FilterMode];
  assume {:sourceloc "parport_true.i.cil.c", 5444, 3} true;
  $b7 := ($p6 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5444, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 5448, 14} true;
  $p43 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5448, 14} true;
  $p44 := $pa($pa($p43, 0, 28), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5448, 14} true;
  $p45 := $M.0[$p44];
  assume {:sourceloc "parport_true.i.cil.c", 5448, 14} true;
  $p46 := $pa($pa(Extension, 0, 448), 260, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5448, 14} true;
  $p47 := $pa($pa($p46, 0, 28), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5448, 14} true;
  $p48 := $M.0[$p47];
  assume {:sourceloc "parport_true.i.cil.c", 5448, 14} true;
  // WARNING: unsoundly ignoring indeterminate call: %"$p49" = call i32 %"$p45"(i8* %"$p48", i8 zeroext %ChipMode), !dbg !2106
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5448, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5451, 3} true;
  $p14 := $p49;
  goto $bb25;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 5454, 5} true;
  $p8 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 5454, 5} true;
  $b9 := ($p8 == 96);
  assume {:sourceloc "parport_true.i.cil.c", 5454, 5} true;
  goto $bb12, $bb13;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 5444, 3} true;
  assume $b7;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 5444, 3} true;
  assume !($b7);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  $p36 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  $p37 := $pa($pa($p36, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  $p38 := $M.0[$p37];
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  $p39 := $and($p38, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  $p40 := $xor($p39, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  $b41 := ($p40 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  goto $bb46, $bb47;
$bb11:
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 5454, 5} true;
  assume $b9;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 5454, 5} true;
  assume !($b9);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 5469, 5} true;
  $p10 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 5469, 5} true;
  $b11 := ($p10 == 128);
  assume {:sourceloc "parport_true.i.cil.c", 5469, 5} true;
  goto $bb17, $bb18;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  $p29 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  $p30 := $pa($pa($p29, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  $p31 := $M.0[$p30];
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  $p32 := $and($p31, 2);
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  $p33 := $xor($p32, 2);
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  $b34 := ($p33 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  goto $bb41, $bb42;
$bb16:
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 5469, 5} true;
  assume $b11;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 5469, 5} true;
  assume !($b11);
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 5484, 5} true;
  $p12 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 5484, 5} true;
  $b13 := ($p12 == 32);
  assume {:sourceloc "parport_true.i.cil.c", 5484, 5} true;
  goto $bb22, $bb23;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  $p22 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  $p23 := $pa($pa($p22, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  $p24 := $M.0[$p23];
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  $p25 := $and($p24, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  $p26 := $xor($p25, 8);
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  $b27 := ($p26 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  goto $bb36, $bb37;
$bb21:
  goto $bb24;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 5484, 5} true;
  assume $b13;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 5484, 5} true;
  assume !($b13);
  goto $bb21;
$bb24:
  $p14 := 0;
  goto $bb25;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 5499, 3} true;
  $p15 := $p14;
  goto $bb26;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 5501, 3} true;
  $b16 := $sge($p15, 0);
  assume {:sourceloc "parport_true.i.cil.c", 5501, 3} true;
  goto $bb29, $bb30;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 5504, 5} true;
  $p19 := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 5504, 5} true;
  $p20 := $pa($pa(Extension, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5504, 5} true;
  $p21 := $pa($pa($p20, 0, 80), 68, 1);
  assume {:sourceloc "parport_true.i.cil.c", 5504, 5} true;
  $M.0[$p21] := $p19;
  assume {:sourceloc "parport_true.i.cil.c", 5505, 3} true;
  goto $bb31;
$bb28:
  goto $bb31;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 5501, 3} true;
  assume $b16;
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 5501, 3} true;
  assume !($b16);
  goto $bb28;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 5508, 3} true;
  $p17 := $p15;
  goto $bb32;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 5512, 3} true;
  $p18 := $p17;
  goto $bb33;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 5514, 1} true;
  $r := $p18;
  return;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 5488, 9} true;
  $p18 := -1073741810;
  goto $bb33;
$bb35:
  goto $bb38;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  assume $b27;
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 5485, 7} true;
  assume !($b27);
  goto $bb35;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 5493, 16} true;
  call $p28 := PptSetByteMode(Extension, ChipMode);
  assume {:sourceloc "parport_true.i.cil.c", 5493, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5495, 7} true;
  $p15 := $p28;
  goto $bb26;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 5473, 9} true;
  $p18 := -1073741810;
  goto $bb33;
$bb40:
  goto $bb43;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  assume $b34;
  goto $bb39;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 5470, 7} true;
  assume !($b34);
  goto $bb40;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 5478, 16} true;
  call $p35 := PptEcrSetMode(Extension, ChipMode);
  assume {:sourceloc "parport_true.i.cil.c", 5478, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5480, 7} true;
  $p15 := $p35;
  goto $bb26;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 5458, 9} true;
  $p18 := -1073741810;
  goto $bb33;
$bb45:
  goto $bb48;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  assume $b41;
  goto $bb44;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 5455, 7} true;
  assume !($b41);
  goto $bb45;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 5463, 16} true;
  call $p42 := PptEcrSetMode(Extension, ChipMode);
  assume {:sourceloc "parport_true.i.cil.c", 5463, 16} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 5465, 7} true;
  $p15 := $p42;
  goto $bb26;
}
procedure PptSynchCompletionRoutine(DeviceObject: int, Irp: int, Event: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8471, 51} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8471, 71} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8471, 85} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8476, 3} true;
  call $p := KeSetEvent(Event, 0, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8478, 3} true;
  $r := -1073741802;
  return;
}
procedure PptSynchronizedDecrement(SyncContext: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8654, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8658, 3} true;
  $p := SyncContext;
  assume {:sourceloc "parport_true.i.cil.c", 8658, 3} true;
  $p1 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8658, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8658, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 8658, 3} true;
  $p4 := $sub($p3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8658, 3} true;
  $M.0[$p2] := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 8659, 3} true;
  $p5 := SyncContext;
  assume {:sourceloc "parport_true.i.cil.c", 8659, 3} true;
  $p6 := $pa($pa($p5, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8659, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 8659, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 8659, 3} true;
  $p9 := SyncContext;
  assume {:sourceloc "parport_true.i.cil.c", 8659, 3} true;
  $p10 := $pa($pa($p9, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8659, 3} true;
  $M.0[$p10] := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 8660, 3} true;
  $r := 1;
  return;
}
procedure PptSynchronizedDisconnect(Context: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b28: bool;
  var $b35: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8687, 41} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8697, 3} true;
  $p := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8697, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8698, 3} true;
  $p1 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8698, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8698, 3} true;
  $p3 := $pa($pa($p2, 0, 16), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8698, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 8698, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8699, 3} true;
  $p5 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8699, 3} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 8699, 3} true;
  $p7 := $pa($pa($p6, 0, 16), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8699, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 8699, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8700, 3} true;
  $p9 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8700, 3} true;
  $p10 := $M.0[$p9];
  assume {:sourceloc "parport_true.i.cil.c", 8700, 3} true;
  $p11 := $pa($pa($p10, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8700, 3} true;
  $p12 := $pa($pa($p11, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8700, 3} true;
  $p13 := $M.0[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 8700, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8702, 3} true;
  $p14 := $p13;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8702, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  $p15 := $p2i($p14);
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  $p16 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  $p17 := $M.0[$p16];
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  $p18 := $pa($pa($p17, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  $p19 := $p2i($p18);
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  $b := ($p15 != $p19);
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8706, 5} true;
  goto $bb9;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8707, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8704, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 8727, 3} true;
  $p20 := 0;
  goto $bb8;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8729, 1} true;
  $r := $p20;
  return;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8709, 5} true;
  $p21 := $p14;
  assume {:sourceloc "parport_true.i.cil.c", 8709, 5} true;
  $p22 := $pa($p21, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8709, 5} true;
  $p23 := $p22;
  assume {:sourceloc "parport_true.i.cil.c", 8709, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8710, 5} true;
  $p24 := $pa($pa($p23, 0, 24), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8710, 5} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 8710, 5} true;
  $p26 := $p2i($p25);
  assume {:sourceloc "parport_true.i.cil.c", 8710, 5} true;
  $p27 := $p2i($p4);
  assume {:sourceloc "parport_true.i.cil.c", 8710, 5} true;
  $b28 := ($p26 == $p27);
  assume {:sourceloc "parport_true.i.cil.c", 8710, 5} true;
  goto $bb12, $bb13;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8711, 7} true;
  $p31 := $pa($pa($p23, 0, 24), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8711, 7} true;
  $p32 := $M.0[$p31];
  assume {:sourceloc "parport_true.i.cil.c", 8711, 7} true;
  $p33 := $p2i($p32);
  assume {:sourceloc "parport_true.i.cil.c", 8711, 7} true;
  $p34 := $p2i($p8);
  assume {:sourceloc "parport_true.i.cil.c", 8711, 7} true;
  $b35 := ($p33 == $p34);
  assume {:sourceloc "parport_true.i.cil.c", 8711, 7} true;
  goto $bb17, $bb18;
$bb11:
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 8710, 5} true;
  assume $b28;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 8710, 5} true;
  assume !($b28);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 8723, 5} true;
  $p29 := $pa($pa($p14, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8723, 5} true;
  $p30 := $M.0[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 8723, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8724, 3} true;
  $p14 := $p30;
  goto $bb1;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 8712, 9} true;
  $p36 := $pa($pa($p14, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8712, 9} true;
  $p37 := $M.0[$p36];
  assume {:sourceloc "parport_true.i.cil.c", 8712, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8713, 9} true;
  $p38 := $pa($pa($p14, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8713, 9} true;
  $p39 := $M.0[$p38];
  assume {:sourceloc "parport_true.i.cil.c", 8713, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8714, 9} true;
  $p40 := $pa($pa($p39, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8714, 9} true;
  $M.0[$p40] := $p37;
  assume {:sourceloc "parport_true.i.cil.c", 8715, 9} true;
  $p41 := $pa($pa($p37, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8715, 9} true;
  $M.0[$p41] := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 8716, 9} true;
  $p20 := 1;
  goto $bb8;
$bb16:
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 8711, 7} true;
  assume $b35;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 8711, 7} true;
  assume !($b35);
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 8720, 5} true;
  goto $bb14;
}
procedure PptSynchronizedIncrement(SyncContext: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8645, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8649, 3} true;
  $p := SyncContext;
  assume {:sourceloc "parport_true.i.cil.c", 8649, 3} true;
  $p1 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8649, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8649, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 8649, 3} true;
  $p4 := $add($p3, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8649, 3} true;
  $M.0[$p2] := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 8650, 3} true;
  $p5 := SyncContext;
  assume {:sourceloc "parport_true.i.cil.c", 8650, 3} true;
  $p6 := $pa($pa($p5, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8650, 3} true;
  $p7 := $M.0[$p6];
  assume {:sourceloc "parport_true.i.cil.c", 8650, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 8650, 3} true;
  $p9 := SyncContext;
  assume {:sourceloc "parport_true.i.cil.c", 8650, 3} true;
  $p10 := $pa($pa($p9, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8650, 3} true;
  $M.0[$p10] := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 8651, 3} true;
  $r := 1;
  return;
}
procedure PptSynchronizedQueue(Context: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8671, 36} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8677, 3} true;
  $p := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8677, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8678, 3} true;
  $p1 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8678, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8678, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8679, 3} true;
  $p3 := $pa($pa($p2, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8679, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 8679, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8680, 3} true;
  $p5 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8680, 3} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 8680, 3} true;
  $p7 := $pa($pa($p6, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8680, 3} true;
  $M.0[$p7] := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 8681, 3} true;
  $p8 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8681, 3} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 8681, 3} true;
  $p10 := $pa($pa($p9, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8681, 3} true;
  $M.0[$p10] := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 8682, 3} true;
  $p11 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8682, 3} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 8682, 3} true;
  $p13 := $pa($pa($p4, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8682, 3} true;
  $M.0[$p13] := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 8683, 3} true;
  $p14 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8683, 3} true;
  $p15 := $M.0[$p14];
  assume {:sourceloc "parport_true.i.cil.c", 8683, 3} true;
  $p16 := $pa($pa($p2, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8683, 3} true;
  $M.0[$p16] := $p15;
  assume {:sourceloc "parport_true.i.cil.c", 8684, 3} true;
  $r := 1;
  return;
}
procedure PptSynchronizedRead(SyncContext: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8663, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8667, 3} true;
  $p := SyncContext;
  assume {:sourceloc "parport_true.i.cil.c", 8667, 3} true;
  $p1 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8667, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8667, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 8667, 3} true;
  $p4 := SyncContext;
  assume {:sourceloc "parport_true.i.cil.c", 8667, 3} true;
  $p5 := $pa($pa($p4, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8667, 3} true;
  $M.0[$p5] := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 8668, 3} true;
  $r := 1;
  return;
}
procedure PptTraversePortCheckList(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b10: bool;
  var $b17: bool;
  var $p: int;
  var $p1: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8861, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8867, 3} true;
  $p := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 8867, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8868, 3} true;
  $p1 := $pa($pa($p, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8868, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8868, 3} true;
  $b := $sge($p2, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8868, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8869, 5} true;
  $p11 := 0;
  goto $bb13;
$bb2:
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8868, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8868, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8873, 3} true;
  $p3 := $pa($pa($p, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8873, 3} true;
  $p4 := $pa($pa($p3, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8873, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 8873, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8875, 3} true;
  $p6 := $p5;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8875, 13} true;
  goto $bb7;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 8877, 5} true;
  $p7 := $p2i($p6);
  assume {:sourceloc "parport_true.i.cil.c", 8877, 5} true;
  $p8 := $pa($pa($p, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8877, 5} true;
  $p9 := $p2i($p8);
  assume {:sourceloc "parport_true.i.cil.c", 8877, 5} true;
  $b10 := ($p7 != $p9);
  assume {:sourceloc "parport_true.i.cil.c", 8877, 5} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8879, 5} true;
  goto $bb14;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8880, 7} true;
  goto $bb12;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8877, 5} true;
  assume $b10;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 8877, 5} true;
  assume !($b10);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 8894, 3} true;
  $p11 := 1;
  goto $bb13;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 8896, 1} true;
  $r := $p11;
  return;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 8882, 5} true;
  $p12 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 8882, 5} true;
  $p13 := $pa($p12, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8882, 5} true;
  $p14 := $p13;
  assume {:sourceloc "parport_true.i.cil.c", 8882, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8883, 5} true;
  $p15 := $pa($pa($p14, 0, 24), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8883, 5} true;
  $p16 := $M.0[$p15];
  assume {:sourceloc "parport_true.i.cil.c", 8883, 5} true;
  $b17 := ($p16 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8883, 5} true;
  goto $bb17, $bb18;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 8885, 7} true;
  $p20 := $pa($pa($p14, 0, 24), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8885, 7} true;
  $p21 := $M.0[$p20];
  assume {:sourceloc "parport_true.i.cil.c", 8885, 7} true;
  $p22 := $pa($pa($p14, 0, 24), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8885, 7} true;
  $p23 := $M.0[$p22];
  assume {:sourceloc "parport_true.i.cil.c", 8885, 7} true;
  goto $bb21, $bb22;
$bb16:
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 8883, 5} true;
  assume $b17;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 8883, 5} true;
  assume !($b17);
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 8890, 5} true;
  $p18 := $pa($pa($p6, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8890, 5} true;
  $p19 := $M.0[$p18];
  assume {:sourceloc "parport_true.i.cil.c", 8890, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8891, 3} true;
  $p6 := $p19;
  goto $bb6;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 8887, 5} true;
  goto $bb19;
$bb21:
  assume ($p21 == PptFreePort);
  call PptFreePort($p23);
  goto $bb20;
$bb22:
  assume ($p21 == PptFreePortFromInterruptLevel);
  call PptFreePortFromInterruptLevel($p23);
  goto $bb20;
}
procedure PptTryAllocatePort(Extension: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(1, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8837, 34} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8839, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8843, 3} true;
  $p1 := Extension;
  assume {:sourceloc "parport_true.i.cil.c", 8843, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8844, 3} true;
  $p2 := $pa($pa($p1, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8844, 3} true;
  $p3 := $M.0[$p2];
  assume {:sourceloc "parport_true.i.cil.c", 8844, 3} true;
  $b := ($p3 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8844, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8846, 9} true;
  $p7 := $pa($pa($p1, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8846, 9} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 8846, 9} true;
  $p9 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8846, 9} true;
  call $p10 := KeSynchronizeExecution($p8, PptTryAllocatePortAtInterruptLevel, $p9);
  assume {:sourceloc "parport_true.i.cil.c", 8846, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8849, 3} true;
  $p6 := $p10;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8851, 5} true;
  call IoAcquireCancelSpinLock($p);
  assume {:sourceloc "parport_true.i.cil.c", 8852, 9} true;
  $p4 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 8852, 9} true;
  call $p5 := PptTryAllocatePortAtInterruptLevel($p4);
  assume {:sourceloc "parport_true.i.cil.c", 8852, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p6 := $p5;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8844, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8844, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8858, 3} true;
  $r := $p6;
  return;
}
procedure PptTryAllocatePortAtInterruptLevel(Context: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 8776, 50} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8780, 3} true;
  $p := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8780, 3} true;
  $p1 := $pa($pa($p, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8780, 3} true;
  $p2 := $M.0[$p1];
  assume {:sourceloc "parport_true.i.cil.c", 8780, 3} true;
  $b := ($p2 == -1);
  assume {:sourceloc "parport_true.i.cil.c", 8780, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 8781, 5} true;
  $p4 := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8781, 5} true;
  $p5 := $pa($pa($p4, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8781, 5} true;
  $M.0[$p5] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 8782, 5} true;
  $p6 := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8782, 5} true;
  $p7 := $pa($pa($p6, 0, 448), 432, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8782, 5} true;
  $p8 := $pa($pa($p7, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8782, 5} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 8782, 5} true;
  $p10 := $add($p9, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8782, 5} true;
  $M.0[$p8] := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 8783, 5} true;
  $p3 := 1;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8785, 5} true;
  $p3 := 0;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8780, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8780, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8788, 1} true;
  $r := $p3;
  return;
}
procedure PptTrySelectDevice(Context: int, TrySelectCommand: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b10: bool;
  var $b16: bool;
  var $b21: bool;
  var $b25: bool;
  var $b30: bool;
  var $b35: bool;
  var $b43: bool;
  var $b48: bool;
  var $b59: bool;
  var $b60: bool;
  var $b62: bool;
  var $b77: bool;
  var $b82: bool;
  var $b89: bool;
  var $b90: bool;
  var $b92: bool;
  var $p: int;
  var $p1: int;
  var $p100: int;
  var $p101: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p17: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p42: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p56: int;
  var $p57: int;
  var $p58: int;
  var $p6: int;
  var $p61: int;
  var $p63: int;
  var $p64: int;
  var $p65: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p69: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p83: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p88: int;
  var $p9: int;
  var $p91: int;
  var $p93: int;
  var $p94: int;
  var $p95: int;
  var $p96: int;
  var $p97: int;
  var $p98: int;
  var $p99: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(1, 1));
  assume {:sourceloc "parport_true.i.cil.c", 3930, 35} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3930, 51} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3935, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3936, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3942, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3943, 3} true;
  $p2 := Context;
  assume {:sourceloc "parport_true.i.cil.c", 3943, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3944, 3} true;
  $p3 := TrySelectCommand;
  assume {:sourceloc "parport_true.i.cil.c", 3944, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3945, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3948, 3} true;
  $p4 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3948, 3} true;
  $p5 := $M.0[$p4];
  assume {:sourceloc "parport_true.i.cil.c", 3948, 3} true;
  $p6 := $and($p5, 4);
  assume {:sourceloc "parport_true.i.cil.c", 3948, 3} true;
  $b := ($p6 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3948, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 3950, 11} true;
  call $p101 := PptTrySelectLegacyZip(Context, TrySelectCommand);
  assume {:sourceloc "parport_true.i.cil.c", 3950, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3952, 5} true;
  $p53 := $p101;
  goto $bb46;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 3954, 5} true;
  $p7 := $pa($pa($p3, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3954, 5} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 3954, 5} true;
  $p9 := $p8;
  assume {:sourceloc "parport_true.i.cil.c", 3954, 5} true;
  $b10 := ($p9 == 5);
  assume {:sourceloc "parport_true.i.cil.c", 3954, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 3948, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 3948, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 3956, 13} true;
  call $p100 := PptTrySelectLegacyZip(Context, TrySelectCommand);
  assume {:sourceloc "parport_true.i.cil.c", 3956, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3958, 7} true;
  $p53 := $p100;
  goto $bb46;
$bb6:
  goto $bb9;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 3954, 5} true;
  assume $b10;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 3954, 5} true;
  assume !($b10);
  goto $bb6;
$bb9:
  goto $bb10;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 3963, 3} true;
  $p11 := $pa($pa($p3, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3963, 3} true;
  $p12 := $M.0[$p11];
  assume {:sourceloc "parport_true.i.cil.c", 3963, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3964, 3} true;
  $p13 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3964, 3} true;
  $p14 := $M.0[$p13];
  assume {:sourceloc "parport_true.i.cil.c", 3964, 3} true;
  $p15 := $and($p14, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3964, 3} true;
  $b16 := ($p15 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3964, 3} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 3972, 10} true;
  goto $bb19;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 3965, 5} true;
  $p17 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 3965, 5} true;
  $p18 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3965, 5} true;
  $p19 := $pa($pa($p18, 0, 80), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3965, 5} true;
  $p20 := $M.0[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 3965, 5} true;
  $b21 := $ugt($p17, $p20);
  assume {:sourceloc "parport_true.i.cil.c", 3965, 5} true;
  goto $bb17, $bb18;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 3964, 3} true;
  assume $b16;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 3964, 3} true;
  assume !($b16);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 3968, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3969, 5} true;
  goto $bb95;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 3970, 7} true;
  goto $bb19;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 3965, 5} true;
  assume $b21;
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 3965, 5} true;
  assume !($b21);
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 3974, 5} true;
  $p22 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3974, 5} true;
  $p23 := $M.0[$p22];
  assume {:sourceloc "parport_true.i.cil.c", 3974, 5} true;
  $p24 := $and($p23, 2);
  assume {:sourceloc "parport_true.i.cil.c", 3974, 5} true;
  $b25 := ($p24 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3974, 5} true;
  goto $bb22, $bb23;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 3975, 7} true;
  $p74 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3975, 7} true;
  $p75 := $M.0[$p74];
  assume {:sourceloc "parport_true.i.cil.c", 3975, 7} true;
  $p76 := $and($p75, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3975, 7} true;
  $b77 := ($p76 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3975, 7} true;
  goto $bb68, $bb69;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 4020, 7} true;
  call IoAcquireCancelSpinLock($p1);
  assume {:sourceloc "parport_true.i.cil.c", 4021, 7} true;
  $p26 := $pa($pa($p2, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4021, 7} true;
  $p27 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4021, 7} true;
  $M.0[$p27] := $p26;
  assume {:sourceloc "parport_true.i.cil.c", 4023, 7} true;
  $p28 := $pa($pa($p2, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4023, 7} true;
  $p29 := $M.0[$p28];
  assume {:sourceloc "parport_true.i.cil.c", 4023, 7} true;
  $b30 := ($p29 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4023, 7} true;
  goto $bb26, $bb27;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 3974, 5} true;
  assume $b25;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 3974, 5} true;
  assume !($b25);
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 4025, 9} true;
  $p70 := $pa($pa($p2, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4025, 9} true;
  $p71 := $M.0[$p70];
  assume {:sourceloc "parport_true.i.cil.c", 4025, 9} true;
  $p72 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4025, 9} true;
  call $p73 := KeSynchronizeExecution($p71, PptSynchronizedIncrement, $p72);
  assume {:sourceloc "parport_true.i.cil.c", 4028, 7} true;
  goto $bb28;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 4030, 9} true;
  $p31 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 4030, 9} true;
  call $p32 := PptSynchronizedIncrement($p31);
  goto $bb28;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 4023, 7} true;
  assume $b30;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 4023, 7} true;
  assume !($b30);
  goto $bb25;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 4033, 7} true;
  $p33 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4033, 7} true;
  $p34 := $M.0[$p33];
  assume {:sourceloc "parport_true.i.cil.c", 4033, 7} true;
  $b35 := ($p34 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4033, 7} true;
  goto $bb31, $bb32;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 4036, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4038, 7} true;
  $p50 := 259;
  goto $bb43;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 4044, 9} true;
  $p36 := $pa($pa($p2, 0, 448), 432, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4044, 9} true;
  $p37 := $pa($pa($p36, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4044, 9} true;
  $p38 := $M.0[$p37];
  assume {:sourceloc "parport_true.i.cil.c", 4044, 9} true;
  $p39 := $add($p38, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4044, 9} true;
  $M.0[$p37] := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 4045, 9} true;
  $p40 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4045, 9} true;
  $p41 := $M.0[$p40];
  assume {:sourceloc "parport_true.i.cil.c", 4045, 9} true;
  $p42 := $and($p41, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4045, 9} true;
  $b43 := ($p42 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4045, 9} true;
  goto $bb35, $bb36;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 4033, 7} true;
  assume $b35;
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 4033, 7} true;
  assume !($b35);
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 4080, 16} true;
  goto $bb41;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 4046, 11} true;
  $p44 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 4046, 11} true;
  $p45 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4046, 11} true;
  $p46 := $pa($pa($p45, 0, 80), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4046, 11} true;
  $p47 := $M.0[$p46];
  assume {:sourceloc "parport_true.i.cil.c", 4046, 11} true;
  $b48 := $ult($p44, $p47);
  assume {:sourceloc "parport_true.i.cil.c", 4046, 11} true;
  goto $bb39, $bb40;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 4045, 9} true;
  assume $b43;
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 4045, 9} true;
  assume !($b43);
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 4047, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4049, 13} true;
  $p54 := 0;
  $p55 := 0;
  goto $bb47;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 4078, 13} true;
  goto $bb41;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 4046, 11} true;
  assume $b48;
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 4046, 11} true;
  assume !($b48);
  goto $bb38;
$bb41:
  assume {:sourceloc "parport_true.i.cil.c", 4084, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p49 := 0;
  goto $bb42;
$bb42:
  $p50 := $p49;
  goto $bb43;
$bb43:
  $p51 := $p50;
  goto $bb44;
$bb44:
  $p52 := $p51;
  goto $bb45;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 4089, 3} true;
  $p53 := $p52;
  goto $bb46;
$bb46:
  assume {:sourceloc "parport_true.i.cil.c", 4091, 1} true;
  $r := $p53;
  return;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 4049, 23} true;
  goto $bb48;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 4051, 15} true;
  $p56 := $p55;
  assume {:sourceloc "parport_true.i.cil.c", 4051, 15} true;
  $p57 := $M.28[PptDot3Retries];
  assume {:sourceloc "parport_true.i.cil.c", 4051, 15} true;
  $p58 := $p57;
  assume {:sourceloc "parport_true.i.cil.c", 4051, 15} true;
  $b59 := $slt($p56, $p58);
  assume {:sourceloc "parport_true.i.cil.c", 4051, 15} true;
  goto $bb51, $bb52;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 4052, 17} true;
  $b62 := ($p54 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4052, 17} true;
  goto $bb62, $bb63;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 4058, 17} true;
  goto $bb53;
$bb51:
  assume {:sourceloc "parport_true.i.cil.c", 4051, 15} true;
  assume $b59;
  goto $bb49;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 4051, 15} true;
  assume !($b59);
  goto $bb50;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 4068, 13} true;
  $b60 := ($p54 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 4068, 13} true;
  goto $bb56, $bb57;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 4071, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4072, 13} true;
  $p61 := 0;
  goto $bb58;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 4075, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p61 := -1073741823;
  goto $bb58;
$bb56:
  assume {:sourceloc "parport_true.i.cil.c", 4068, 13} true;
  assume $b60;
  goto $bb54;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 4068, 13} true;
  assume !($b60);
  goto $bb55;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 4077, 11} true;
  goto $bb59;
$bb59:
  assume {:sourceloc "parport_true.i.cil.c", 4080, 9} true;
  $p49 := $p61;
  goto $bb42;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 4055, 19} true;
  goto $bb53;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 4054, 17} true;
  goto $bb64;
$bb62:
  assume {:sourceloc "parport_true.i.cil.c", 4052, 17} true;
  assume $b62;
  goto $bb60;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 4052, 17} true;
  assume !($b62);
  goto $bb61;
$bb64:
  assume {:sourceloc "parport_true.i.cil.c", 4057, 15} true;
  goto $bb65;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 4061, 25} true;
  $p63 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 4061, 25} true;
  $p64 := $or(224, $p63);
  assume {:sourceloc "parport_true.i.cil.c", 4061, 25} true;
  $p65 := $trunc($p64, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4061, 25} true;
  call $p66 := PptSend1284_3Command($p2, $p65);
  assume {:sourceloc "parport_true.i.cil.c", 4061, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4062, 15} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 4063, 15} true;
  $p67 := $p55;
  assume {:sourceloc "parport_true.i.cil.c", 4063, 15} true;
  $p68 := $add($p67, 1);
  assume {:sourceloc "parport_true.i.cil.c", 4063, 15} true;
  $p69 := $trunc($p68, 8);
  assume {:sourceloc "parport_true.i.cil.c", 4063, 15} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4065, 13} true;
  $p54 := $p66;
  $p55 := $p69;
  goto $bb47;
$bb66:
  assume {:sourceloc "parport_true.i.cil.c", 4010, 14} true;
  goto $bb74;
$bb67:
  assume {:sourceloc "parport_true.i.cil.c", 3976, 9} true;
  $p78 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 3976, 9} true;
  $p79 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3976, 9} true;
  $p80 := $pa($pa($p79, 0, 80), 52, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3976, 9} true;
  $p81 := $M.0[$p80];
  assume {:sourceloc "parport_true.i.cil.c", 3976, 9} true;
  $b82 := $ult($p78, $p81);
  assume {:sourceloc "parport_true.i.cil.c", 3976, 9} true;
  goto $bb72, $bb73;
$bb68:
  assume {:sourceloc "parport_true.i.cil.c", 3975, 7} true;
  assume $b77;
  goto $bb66;
$bb69:
  assume {:sourceloc "parport_true.i.cil.c", 3975, 7} true;
  assume !($b77);
  goto $bb67;
$bb70:
  assume {:sourceloc "parport_true.i.cil.c", 3977, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3979, 11} true;
  $p84 := 0;
  $p85 := 0;
  goto $bb76;
$bb71:
  assume {:sourceloc "parport_true.i.cil.c", 4008, 11} true;
  goto $bb74;
$bb72:
  assume {:sourceloc "parport_true.i.cil.c", 3976, 9} true;
  assume $b82;
  goto $bb70;
$bb73:
  assume {:sourceloc "parport_true.i.cil.c", 3976, 9} true;
  assume !($b82);
  goto $bb71;
$bb74:
  assume {:sourceloc "parport_true.i.cil.c", 4014, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p83 := 0;
  goto $bb75;
$bb75:
  assume {:sourceloc "parport_true.i.cil.c", 4016, 5} true;
  $p51 := $p83;
  goto $bb44;
$bb76:
  assume {:sourceloc "parport_true.i.cil.c", 3979, 21} true;
  goto $bb77;
$bb77:
  assume {:sourceloc "parport_true.i.cil.c", 3981, 13} true;
  $p86 := $p85;
  assume {:sourceloc "parport_true.i.cil.c", 3981, 13} true;
  $p87 := $M.28[PptDot3Retries];
  assume {:sourceloc "parport_true.i.cil.c", 3981, 13} true;
  $p88 := $p87;
  assume {:sourceloc "parport_true.i.cil.c", 3981, 13} true;
  $b89 := $slt($p86, $p88);
  assume {:sourceloc "parport_true.i.cil.c", 3981, 13} true;
  goto $bb80, $bb81;
$bb78:
  assume {:sourceloc "parport_true.i.cil.c", 3982, 15} true;
  $b92 := ($p84 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3982, 15} true;
  goto $bb91, $bb92;
$bb79:
  assume {:sourceloc "parport_true.i.cil.c", 3988, 15} true;
  goto $bb82;
$bb80:
  assume {:sourceloc "parport_true.i.cil.c", 3981, 13} true;
  assume $b89;
  goto $bb78;
$bb81:
  assume {:sourceloc "parport_true.i.cil.c", 3981, 13} true;
  assume !($b89);
  goto $bb79;
$bb82:
  assume {:sourceloc "parport_true.i.cil.c", 3998, 11} true;
  $b90 := ($p84 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 3998, 11} true;
  goto $bb85, $bb86;
$bb83:
  assume {:sourceloc "parport_true.i.cil.c", 4001, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 4002, 11} true;
  $p91 := 0;
  goto $bb87;
$bb84:
  assume {:sourceloc "parport_true.i.cil.c", 4005, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p91 := -1073741823;
  goto $bb87;
$bb85:
  assume {:sourceloc "parport_true.i.cil.c", 3998, 11} true;
  assume $b90;
  goto $bb83;
$bb86:
  assume {:sourceloc "parport_true.i.cil.c", 3998, 11} true;
  assume !($b90);
  goto $bb84;
$bb87:
  assume {:sourceloc "parport_true.i.cil.c", 4007, 9} true;
  goto $bb88;
$bb88:
  assume {:sourceloc "parport_true.i.cil.c", 4010, 7} true;
  $p83 := $p91;
  goto $bb75;
$bb89:
  assume {:sourceloc "parport_true.i.cil.c", 3985, 17} true;
  goto $bb82;
$bb90:
  assume {:sourceloc "parport_true.i.cil.c", 3984, 15} true;
  goto $bb93;
$bb91:
  assume {:sourceloc "parport_true.i.cil.c", 3982, 15} true;
  assume $b92;
  goto $bb89;
$bb92:
  assume {:sourceloc "parport_true.i.cil.c", 3982, 15} true;
  assume !($b92);
  goto $bb90;
$bb93:
  assume {:sourceloc "parport_true.i.cil.c", 3987, 13} true;
  goto $bb94;
$bb94:
  assume {:sourceloc "parport_true.i.cil.c", 3991, 23} true;
  $p93 := $p12;
  assume {:sourceloc "parport_true.i.cil.c", 3991, 23} true;
  $p94 := $or(224, $p93);
  assume {:sourceloc "parport_true.i.cil.c", 3991, 23} true;
  $p95 := $trunc($p94, 8);
  assume {:sourceloc "parport_true.i.cil.c", 3991, 23} true;
  call $p96 := PptSend1284_3Command($p2, $p95);
  assume {:sourceloc "parport_true.i.cil.c", 3991, 23} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3992, 13} true;
  call KeStallExecutionProcessor(5);
  assume {:sourceloc "parport_true.i.cil.c", 3993, 13} true;
  $p97 := $p85;
  assume {:sourceloc "parport_true.i.cil.c", 3993, 13} true;
  $p98 := $add($p97, 1);
  assume {:sourceloc "parport_true.i.cil.c", 3993, 13} true;
  $p99 := $trunc($p98, 8);
  assume {:sourceloc "parport_true.i.cil.c", 3993, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 3995, 11} true;
  $p84 := $p96;
  $p85 := $p99;
  goto $bb76;
$bb95:
  assume {:sourceloc "parport_true.i.cil.c", 3972, 3} true;
  $p52 := -1073741811;
  goto $bb45;
}
procedure PptTrySelectLegacyZip(Context: int, TrySelectCommand: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b14: bool;
  var $b19: bool;
  var $b22: bool;
  var $b24: bool;
  var $b29: bool;
  var $b31: bool;
  var $b36: bool;
  var $b41: bool;
  var $b45: bool;
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p15: int;
  var $p16: int;
  var $p17: int;
  var $p18: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p23: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p3: int;
  var $p30: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p42: int;
  var $p43: int;
  var $p44: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  call $p := $alloca($mul(8, 1));
  call $p1 := $alloca($mul(1, 1));
  assume {:sourceloc "parport_true.i.cil.c", 8104, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8104, 54} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8109, 30} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8110, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8114, 3} true;
  $p2 := Context;
  assume {:sourceloc "parport_true.i.cil.c", 8114, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8115, 3} true;
  $p3 := TrySelectCommand;
  assume {:sourceloc "parport_true.i.cil.c", 8115, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8116, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8117, 3} true;
  $p4 := $pa($pa($p2, 0, 448), 48, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8117, 3} true;
  $p5 := $pa($pa($p4, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8117, 3} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 8117, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8120, 3} true;
  $p7 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8120, 3} true;
  $p8 := $M.0[$p7];
  assume {:sourceloc "parport_true.i.cil.c", 8120, 3} true;
  $p9 := $and($p8, 2);
  assume {:sourceloc "parport_true.i.cil.c", 8120, 3} true;
  $b := ($p9 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8120, 3} true;
  goto $bb3, $bb4;
$bb1:
  $p21 := 0;
  goto $bb15;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 8124, 5} true;
  call IoAcquireCancelSpinLock($p1);
  assume {:sourceloc "parport_true.i.cil.c", 8125, 5} true;
  $p10 := $pa($pa($p2, 0, 448), 44, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8125, 5} true;
  $p11 := $pa($pa($p, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8125, 5} true;
  $M.0[$p11] := $p10;
  assume {:sourceloc "parport_true.i.cil.c", 8127, 5} true;
  $p12 := $pa($pa($p2, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8127, 5} true;
  $p13 := $M.0[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 8127, 5} true;
  $b14 := ($p13 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8127, 5} true;
  goto $bb7, $bb8;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 8120, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 8120, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 8129, 7} true;
  $p46 := $pa($pa($p2, 0, 448), 212, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8129, 7} true;
  $p47 := $M.0[$p46];
  assume {:sourceloc "parport_true.i.cil.c", 8129, 7} true;
  $p48 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 8129, 7} true;
  call $p49 := KeSynchronizeExecution($p47, PptSynchronizedIncrement, $p48);
  assume {:sourceloc "parport_true.i.cil.c", 8132, 5} true;
  goto $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 8134, 7} true;
  $p15 := $p;
  assume {:sourceloc "parport_true.i.cil.c", 8134, 7} true;
  call $p16 := PptSynchronizedIncrement($p15);
  goto $bb9;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 8127, 5} true;
  assume $b14;
  goto $bb5;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 8127, 5} true;
  assume !($b14);
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 8137, 5} true;
  $p17 := $pa($pa($p, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8137, 5} true;
  $p18 := $M.0[$p17];
  assume {:sourceloc "parport_true.i.cil.c", 8137, 5} true;
  $b19 := ($p18 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8137, 5} true;
  goto $bb12, $bb13;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 8138, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8139, 5} true;
  $p20 := 259;
  goto $bb14;
$bb11:
  $p20 := 0;
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 8137, 5} true;
  assume $b19;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 8137, 5} true;
  assume !($b19);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 8145, 3} true;
  $p21 := $p20;
  goto $bb15;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 8148, 3} true;
  $b22 := $sge($p21, 0);
  assume {:sourceloc "parport_true.i.cil.c", 8148, 3} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 8149, 5} true;
  $b24 := ($p21 != 259);
  assume {:sourceloc "parport_true.i.cil.c", 8149, 5} true;
  goto $bb23, $bb24;
$bb17:
  $p23 := $p21;
  goto $bb20;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 8148, 3} true;
  assume $b22;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 8148, 3} true;
  assume !($b22);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 8195, 3} true;
  $r := $p23;
  return;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 8150, 7} true;
  $p26 := $pa($pa($p3, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8150, 7} true;
  $p27 := $M.0[$p26];
  assume {:sourceloc "parport_true.i.cil.c", 8150, 7} true;
  $p28 := $and($p27, 32);
  assume {:sourceloc "parport_true.i.cil.c", 8150, 7} true;
  $b29 := ($p28 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8150, 7} true;
  goto $bb28, $bb29;
$bb22:
  $p25 := $p21;
  goto $bb25;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 8149, 5} true;
  assume $b24;
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 8149, 5} true;
  assume !($b24);
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 8192, 3} true;
  $p23 := $p25;
  goto $bb20;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 8152, 9} true;
  call PptLegacyZipSetDiskMode($p6, 207);
  assume {:sourceloc "parport_true.i.cil.c", 8154, 7} true;
  goto $bb30;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 8156, 9} true;
  call PptLegacyZipSetDiskMode($p6, 143);
  goto $bb30;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 8150, 7} true;
  assume $b29;
  goto $bb26;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 8150, 7} true;
  assume !($b29);
  goto $bb27;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 8160, 13} true;
  call $p30 := PptLegacyZipCheckDevice($p6);
  assume {:sourceloc "parport_true.i.cil.c", 8160, 13} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 8162, 7} true;
  $b31 := ($p30 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8162, 7} true;
  goto $bb33, $bb34;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 8165, 9} true;
  $p34 := $pa($pa($p2, 0, 448), 440, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8165, 9} true;
  $p35 := $M.0[$p34];
  assume {:sourceloc "parport_true.i.cil.c", 8165, 9} true;
  $b36 := ($p35 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8165, 9} true;
  goto $bb38, $bb39;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 8185, 9} true;
  call $p32 := PptDeselectLegacyZip(Context, TrySelectCommand);
  assume {:sourceloc "parport_true.i.cil.c", 8186, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  $p33 := -1073741823;
  goto $bb35;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 8162, 7} true;
  assume $b31;
  goto $bb31;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 8162, 7} true;
  assume !($b31);
  goto $bb32;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 8189, 5} true;
  $p25 := $p33;
  goto $bb25;
$bb36:
  goto $bb45;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 8166, 11} true;
  $p37 := $pa($pa($p2, 0, 448), 80, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8166, 11} true;
  $p38 := $pa($pa($p37, 0, 80), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8166, 11} true;
  $p39 := $M.0[$p38];
  assume {:sourceloc "parport_true.i.cil.c", 8166, 11} true;
  $p40 := $and($p39, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8166, 11} true;
  $b41 := ($p40 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8166, 11} true;
  goto $bb42, $bb43;
$bb38:
  assume {:sourceloc "parport_true.i.cil.c", 8165, 9} true;
  assume $b36;
  goto $bb36;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 8165, 9} true;
  assume !($b36);
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 8167, 13} true;
  $p43 := $pa($pa($p2, 0, 448), 254, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8167, 13} true;
  $p44 := $M.0[$p43];
  assume {:sourceloc "parport_true.i.cil.c", 8167, 13} true;
  $b45 := ($p44 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 8167, 13} true;
  goto $bb48, $bb49;
$bb41:
  goto $bb44;
$bb42:
  assume {:sourceloc "parport_true.i.cil.c", 8166, 11} true;
  assume $b41;
  goto $bb40;
$bb43:
  assume {:sourceloc "parport_true.i.cil.c", 8166, 11} true;
  assume !($b41);
  goto $bb41;
$bb44:
  assume {:sourceloc "parport_true.i.cil.c", 8177, 11} true;
  $p42 := $pa($pa($p2, 0, 448), 440, 1);
  assume {:sourceloc "parport_true.i.cil.c", 8177, 11} true;
  $M.0[$p42] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 8178, 9} true;
  goto $bb45;
$bb45:
  assume {:sourceloc "parport_true.i.cil.c", 8181, 7} true;
  $p33 := $p21;
  goto $bb35;
$bb46:
  goto $bb50;
$bb47:
  assume {:sourceloc "parport_true.i.cil.c", 8169, 15} true;
  call PptDetectEppPort($p2);
  assume {:sourceloc "parport_true.i.cil.c", 8171, 13} true;
  goto $bb50;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 8167, 13} true;
  assume $b45;
  goto $bb46;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 8167, 13} true;
  assume !($b45);
  goto $bb47;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 8174, 11} true;
  goto $bb44;
}
procedure PptUnload(DriverObject: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b10: bool;
  var $b17: bool;
  var $b4: bool;
  var $p: int;
  var $p1: int;
  var $p11: int;
  var $p12: int;
  var $p13: int;
  var $p14: int;
  var $p15: int;
  var $p16: int;
  var $p18: int;
  var $p19: int;
  var $p2: int;
  var $p20: int;
  var $p21: int;
  var $p22: int;
  var $p23: int;
  var $p24: int;
  var $p25: int;
  var $p26: int;
  var $p27: int;
  var $p28: int;
  var $p29: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p32: int;
  var $p33: int;
  var $p34: int;
  var $p35: int;
  var $p36: int;
  var $p37: int;
  var $p38: int;
  var $p39: int;
  var $p40: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2704, 31} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2716, 3} true;
  $p := $pa($pa(DriverObject, 0, 168), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2716, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 2716, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2718, 3} true;
  $p2 := $p1;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2718, 13} true;
  goto $bb2;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 2720, 5} true;
  $b := ($p2 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2720, 5} true;
  goto $bb5, $bb6;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 2722, 5} true;
  goto $bb13;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 2723, 7} true;
  goto $bb7;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 2720, 5} true;
  assume $b;
  goto $bb3;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 2720, 5} true;
  assume !($b);
  goto $bb4;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 2763, 3} true;
  $p3 := $M.26[PortInfoMutex];
  assume {:sourceloc "parport_true.i.cil.c", 2763, 3} true;
  $b4 := ($p3 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2763, 3} true;
  goto $bb10, $bb11;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 2766, 5} true;
  $M.26[PortInfoMutex] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 2768, 3} true;
  goto $bb12;
$bb9:
  goto $bb12;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 2763, 3} true;
  assume $b4;
  goto $bb8;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 2763, 3} true;
  assume !($b4);
  goto $bb9;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 2776, 1} true;
  return;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 2725, 5} true;
  $p5 := $pa($pa($p2, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2725, 5} true;
  $p6 := $M.0[$p5];
  assume {:sourceloc "parport_true.i.cil.c", 2725, 5} true;
  $p7 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 2725, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2726, 5} true;
  $p8 := $pa($pa($p7, 0, 448), 216, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2726, 5} true;
  $p9 := $M.0[$p8];
  assume {:sourceloc "parport_true.i.cil.c", 2726, 5} true;
  $b10 := ($p9 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 2726, 5} true;
  goto $bb16, $bb17;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 2728, 7} true;
  call PptDisconnectInterrupt($p7);
  assume {:sourceloc "parport_true.i.cil.c", 2730, 5} true;
  goto $bb18;
$bb15:
  goto $bb18;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 2726, 5} true;
  assume $b10;
  goto $bb14;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 2726, 5} true;
  assume !($b10);
  goto $bb15;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 2734, 5} true;
  goto $bb19;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 2734, 15} true;
  goto $bb20;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  $p11 := $pa($pa($p7, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  $p12 := $pa($pa($p11, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  $p13 := $M.0[$p12];
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  $p14 := $p2i($p13);
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  $p15 := $pa($pa($p7, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  $p16 := $p2i($p15);
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  $b17 := ($p14 == $p16);
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  goto $bb23, $bb24;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 2739, 9} true;
  goto $bb26;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 2738, 7} true;
  goto $bb25;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  assume $b17;
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 2736, 7} true;
  assume !($b17);
  goto $bb22;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 2742, 7} true;
  $p18 := $pa($pa($p7, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2742, 7} true;
  $p19 := $pa($pa($p18, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2742, 7} true;
  $p20 := $M.0[$p19];
  assume {:sourceloc "parport_true.i.cil.c", 2742, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2743, 7} true;
  $p21 := $pa($pa($p7, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2743, 7} true;
  $p22 := $pa($pa($p21, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2743, 7} true;
  $p23 := $M.0[$p22];
  assume {:sourceloc "parport_true.i.cil.c", 2743, 7} true;
  $p24 := $pa($pa($p23, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2743, 7} true;
  $p25 := $M.0[$p24];
  assume {:sourceloc "parport_true.i.cil.c", 2743, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2744, 7} true;
  $p26 := $pa($pa($p7, 0, 448), 204, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2744, 7} true;
  $p27 := $pa($pa($p26, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2744, 7} true;
  $p28 := $M.0[$p27];
  assume {:sourceloc "parport_true.i.cil.c", 2744, 7} true;
  $p29 := $pa($pa($p28, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2744, 7} true;
  $p30 := $M.0[$p29];
  assume {:sourceloc "parport_true.i.cil.c", 2744, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2745, 7} true;
  $p31 := $pa($pa($p30, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2745, 7} true;
  $M.0[$p31] := $p25;
  assume {:sourceloc "parport_true.i.cil.c", 2746, 7} true;
  $p32 := $pa($pa($p25, 0, 8), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2746, 7} true;
  $M.0[$p32] := $p30;
  assume {:sourceloc "parport_true.i.cil.c", 2747, 7} true;
  $p33 := $p20;
  assume {:sourceloc "parport_true.i.cil.c", 2747, 7} true;
  $p34 := $pa($p33, 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2750, 5} true;
  goto $bb19;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 2756, 11} true;
  call $p35 := IoGetConfigurationInformation();
  assume {:sourceloc "parport_true.i.cil.c", 2756, 11} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2757, 5} true;
  $p36 := $pa($pa($p35, 0, 40), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2757, 5} true;
  $p37 := $M.7[$p36];
  assume {:sourceloc "parport_true.i.cil.c", 2757, 5} true;
  $p38 := $sub($p37, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2757, 5} true;
  $M.7[$p36] := $p38;
  assume {:sourceloc "parport_true.i.cil.c", 2758, 5} true;
  $p39 := $pa($pa(DriverObject, 0, 168), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 2758, 5} true;
  $p40 := $M.0[$p39];
  assume {:sourceloc "parport_true.i.cil.c", 2758, 5} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 2760, 3} true;
  $p2 := $p40;
  goto $bb1;
}
procedure PptWmiInitWmi(DeviceObject: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p10: int;
  var $p11: int;
  var $p12: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9386, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9393, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9393, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 9393, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 9393, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9394, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 400, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9394, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9395, 3} true;
  $p4 := $pa($pa($p3, 0, 32), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9395, 3} true;
  $M.0[$p4] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 9396, 3} true;
  $p5 := $pa($pa($p3, 0, 32), 4, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9396, 3} true;
  $M.0[$p5] := $pa($pa(PptWmiGuidList, 0, 12), 0, 12);
  assume {:sourceloc "parport_true.i.cil.c", 9397, 3} true;
  $p6 := $pa($pa($p3, 0, 32), 8, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9397, 3} true;
  $M.0[$p6] := PptWmiQueryWmiRegInfo;
  assume {:sourceloc "parport_true.i.cil.c", 9398, 3} true;
  $p7 := $pa($pa($p3, 0, 32), 12, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9398, 3} true;
  $M.0[$p7] := PptWmiQueryWmiDataBlock;
  assume {:sourceloc "parport_true.i.cil.c", 9399, 3} true;
  $p8 := $pa($pa($p3, 0, 32), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9399, 3} true;
  $M.0[$p8] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9400, 3} true;
  $p9 := $pa($pa($p3, 0, 32), 20, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9400, 3} true;
  $M.0[$p9] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9401, 3} true;
  $p10 := $pa($pa($p3, 0, 32), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9401, 3} true;
  $M.0[$p10] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9402, 3} true;
  $p11 := $pa($pa($p3, 0, 32), 28, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9402, 3} true;
  $M.0[$p11] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9403, 9} true;
  call $p12 := IoWMIRegistrationControl(DeviceObject, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9403, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9405, 3} true;
  $r := $p12;
  return;
}
procedure PptWmiQueryWmiDataBlock(DeviceObject: int, Irp: int, GuidIndex: int, InstanceIndex: int, InstanceCount: int, InstanceLengthArray: int, OutBufferSize: int, Buffer: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b5: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p6: int;
  var $p7: int;
  var $p8: int;
  var $p9: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9496, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9496, 69} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9496, 81} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9497, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9497, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9497, 85} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9498, 40} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9498, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9504, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9505, 3} true;
  $p := $pa($pa(DeviceObject, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9505, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 9505, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 9505, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9506, 3} true;
  $b := (GuidIndex == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9506, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9507, 5} true;
  goto $bb9;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 9510, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9506, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9506, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9524, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9525, 7} true;
  $p3 := -1073741163;
  goto $bb6;
$bb6:
  goto $bb7;
$bb7:
  goto $bb8;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 9532, 12} true;
  call $p4 := WmiCompleteRequest(DeviceObject, Irp, $p3, 8, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9532, 12} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9534, 3} true;
  $r := $p4;
  return;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 9513, 7} true;
  $b5 := $ult(OutBufferSize, 8);
  assume {:sourceloc "parport_true.i.cil.c", 9513, 7} true;
  goto $bb12, $bb13;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 9514, 9} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9515, 9} true;
  $p3 := -1073741789;
  goto $bb6;
$bb11:
  goto $bb14;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 9513, 7} true;
  assume $b5;
  goto $bb10;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 9513, 7} true;
  assume !($b5);
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 9519, 7} true;
  $p6 := Buffer;
  assume {:sourceloc "parport_true.i.cil.c", 9519, 7} true;
  $p7 := $pa($pa($p2, 0, 448), 432, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9519, 7} true;
  $p8 := $p6;
  assume {:sourceloc "parport_true.i.cil.c", 9519, 7} true;
  $p9 := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 9519, 7} true;
  call $memcpy.0.0($p8, $p9, 8, 4, false);
  assume {:sourceloc "parport_true.i.cil.c", 9520, 7} true;
  $M.0[InstanceLengthArray] := 8;
  assume {:sourceloc "parport_true.i.cil.c", 9521, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9522, 7} true;
  $p3 := 0;
  goto $bb6;
}
procedure PptWmiQueryWmiRegInfo(PDevObj: int, PRegFlags: int, PInstanceName: int, PRegistryPath: int, MofResourceName: int, Pdo: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9481, 47} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9481, 64} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9481, 92} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9482, 49} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9482, 81} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9483, 48} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9487, 3} true;
  $p := $pa($pa(PDevObj, 0, 184), 40, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9487, 3} true;
  $p1 := $M.0[$p];
  assume {:sourceloc "parport_true.i.cil.c", 9487, 3} true;
  $p2 := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 9487, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9490, 3} true;
  $M.0[PRegFlags] := 32;
  assume {:sourceloc "parport_true.i.cil.c", 9491, 3} true;
  $M.0[PRegistryPath] := RegistryPath;
  assume {:sourceloc "parport_true.i.cil.c", 9492, 3} true;
  $p3 := $pa($pa($p2, 0, 448), 16, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9492, 3} true;
  $p4 := $M.0[$p3];
  assume {:sourceloc "parport_true.i.cil.c", 9492, 3} true;
  $M.0[Pdo] := $p4;
  assume {:sourceloc "parport_true.i.cil.c", 9493, 3} true;
  $r := 0;
  return;
}
procedure PsCreateSystemThread(ThreadHandle: int, DesiredAccess: int, ObjectAttributes: int, ProcessHandle: int, ClientId: int, StartRoutine: int, StartContext: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10708, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10708, 60} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10708, 95} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10709, 38} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10709, 65} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10709, 83} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10710, 37} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10711, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10711, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10714, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10714, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10715, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10718, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10714, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10714, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10723, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10730, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10721, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure PsTerminateSystemThread(ExitStatus: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10732, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10733, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10733, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10736, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10736, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10737, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10740, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10736, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10736, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10745, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10752, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10743, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure READ_PORT_UCHAR(p#0: int)
  returns ($r: int);
procedure RtlAnsiStringToUnicodeString(DestinationString: int, SourceString: int, AllocateDestinationString: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10756, 55} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10757, 84} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10758, 79} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10759, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10759, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10762, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10762, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10763, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10766, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10762, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10762, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10771, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10778, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10769, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure RtlAppendUnicodeStringToString(p#0: int, p#1: int)
  returns ($r: int);
procedure RtlCompareMemory(Source1: int, Source2: int, Length: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10782, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10782, 63} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10783, 64} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10784, 14} true;
  call $p := __VERIFIER_nondet_long();
  assume {:sourceloc "parport_true.i.cil.c", 10784, 14} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10787, 3} true;
  $r := $p;
  return;
}
procedure RtlCompareUnicodeString(p#0: int, p#1: int, p#2: int)
  returns ($r: int);
procedure RtlCopyUnicodeString(DestinationString: int, SourceString: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10792, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10793, 75} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10799, 1} true;
  return;
}
procedure RtlDeleteRegistryValue(RelativeTo: int, Path: int, ValueName: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10803, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10804, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10804, 86} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10805, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10805, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10808, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10808, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10809, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10812, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10808, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10808, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10817, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10824, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10815, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure RtlFreeUnicodeString(UnicodeString: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10826, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10832, 1} true;
  return;
}
procedure RtlInitString(DestinationString: int, SourceString: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10835, 28} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10835, 53} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10841, 1} true;
  return;
}
procedure RtlInitUnicodeString(DestinationString: int, SourceString: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10844, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10845, 66} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10851, 1} true;
  return;
}
procedure RtlIntegerToUnicodeString(p#0: int, p#1: int, p#2: int)
  returns ($r: int);
procedure RtlQueryRegistryValues(RelativeTo: int, Path: int, QueryTable: int, Context: int, Environment: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10857, 39} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10858, 72} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10858, 105} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10859, 71} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10859, 87} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10860, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10860, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10863, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10863, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10864, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10867, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10863, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10863, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10872, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10879, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10870, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure RtlUnicodeStringToInteger(p#0: int, p#1: int, p#2: int)
  returns ($r: int);
procedure WRITE_PORT_UCHAR(p#0: int, p#1: int);
procedure WmiCompleteRequest(p#0: int, p#1: int, p#2: int, p#3: int, p#4: int)
  returns ($r: int);
procedure WmiSystemControl(WmiLibInfo: int, DeviceObject: int, Irp: int, IrpDisposition: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10902, 43} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10902, 71} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10903, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10903, 62} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10904, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10904, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10907, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10907, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10908, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10911, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10907, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10907, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10916, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10923, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10914, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure ZwClose(Handle: int)
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10881, 25} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10882, 24} true;
  call $p := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 10882, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 10885, 3} true;
  $b := ($p == 0);
  assume {:sourceloc "parport_true.i.cil.c", 10885, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10886, 5} true;
  goto $bb7;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10889, 5} true;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10885, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10885, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10894, 7} true;
  $p1 := -1073741823;
  goto $bb6;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 10901, 1} true;
  $r := $p1;
  return;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 10892, 7} true;
  $p1 := 0;
  goto $bb6;
}
procedure ZwQueryValueKey(p#0: int, p#1: int, p#2: int, p#3: int, p#4: int, p#5: int)
  returns ($r: int);
procedure ZwSetValueKey(p#0: int, p#1: int, p#2: int, p#3: int, p#4: int, p#5: int)
  returns ($r: int);
procedure _BLAST_init()
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9568, 3} true;
  $M.43[UNLOADED] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9569, 3} true;
  $M.36[NP] := 1;
  assume {:sourceloc "parport_true.i.cil.c", 9570, 3} true;
  $M.42[DC] := 2;
  assume {:sourceloc "parport_true.i.cil.c", 9571, 3} true;
  $M.37[SKIP1] := 3;
  assume {:sourceloc "parport_true.i.cil.c", 9572, 3} true;
  $M.44[SKIP2] := 4;
  assume {:sourceloc "parport_true.i.cil.c", 9573, 3} true;
  $M.45[MPR1] := 5;
  assume {:sourceloc "parport_true.i.cil.c", 9574, 3} true;
  $M.46[MPR3] := 6;
  assume {:sourceloc "parport_true.i.cil.c", 9575, 3} true;
  $M.47[IPC] := 7;
  assume {:sourceloc "parport_true.i.cil.c", 9576, 3} true;
  $p := $M.43[UNLOADED];
  assume {:sourceloc "parport_true.i.cil.c", 9576, 3} true;
  $M.35[s] := $p;
  assume {:sourceloc "parport_true.i.cil.c", 9577, 3} true;
  $M.27[pended] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9578, 3} true;
  $M.39[compFptr] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9579, 3} true;
  $M.38[compRegistered] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9580, 3} true;
  $M.48[lowerDriverReturn] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9581, 3} true;
  $M.49[setEventCalled] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9582, 3} true;
  $M.50[customIrp] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9585, 1} true;
  return;
}
procedure __SMACK_assert(v: bool)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  $p := $b2p(v);
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 40, 26} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 41, 3} true;
  $b := $i2b($p);
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 41, 3} true;
  $p1 := $b2p($b);
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 41, 3} true;
  assert $p1 != 0;
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 42, 1} true;
  return;
}
procedure __SMACK_assume(v: bool)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
$bb0:
  $p := $b2p(v);
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 44, 26} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 45, 3} true;
  $b := $i2b($p);
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 45, 3} true;
  $p1 := $b2p($b);
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 45, 3} true;
  assume $p1 != 0;
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 46, 1} true;
  return;
}
procedure __SMACK_nondet()
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
$bb0:
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 57, 3} true;
  $p := $M.23[__SMACK_nondet.XXX];
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 57, 3} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 58, 3} true;
  havoc $p;
  assume {:sourceloc "/home/zvonimir/smack-project/smack/install/include/smack/smack.h", 59, 3} true;
  $r := $p;
  return;
}
procedure __VERIFIER_nondet_char()
  returns ($r: int);
procedure __VERIFIER_nondet_int()
  returns ($r: int);
procedure __VERIFIER_nondet_long()
  returns ($r: int);
procedure __VERIFIER_nondet_pointer()
  returns ($r: int);
procedure errorFn()
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 2248, 3} true;
  goto $bb1;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 2249, 10} true;
  call __SMACK_assert(false);
  assume {:sourceloc "parport_true.i.cil.c", 2250, 3} true;
  goto $bb1;
}
procedure llvm.memmove.p0i8.p0i8.i32(p#0: int, p#1: int, p#2: int, p#3: int, p#4: bool);
procedure {:entrypoint} main()
  returns ($r: int)
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $b10: bool;
  var $b12: bool;
  var $b15: bool;
  var $b16: bool;
  var $b19: bool;
  var $b21: bool;
  var $b24: bool;
  var $b26: bool;
  var $b28: bool;
  var $b29: bool;
  var $b32: bool;
  var $b35: bool;
  var $b38: bool;
  var $b42: bool;
  var $b56: bool;
  var $b57: bool;
  var $b58: bool;
  var $b59: bool;
  var $b60: bool;
  var $b61: bool;
  var $b62: bool;
  var $b63: bool;
  var $b64: bool;
  var $b65: bool;
  var $b69: bool;
  var $p: int;
  var $p1: int;
  var $p11: int;
  var $p13: int;
  var $p14: int;
  var $p17: int;
  var $p18: int;
  var $p2: int;
  var $p20: int;
  var $p22: int;
  var $p23: int;
  var $p25: int;
  var $p27: int;
  var $p3: int;
  var $p30: int;
  var $p31: int;
  var $p33: int;
  var $p34: int;
  var $p36: int;
  var $p37: int;
  var $p39: int;
  var $p4: int;
  var $p40: int;
  var $p41: int;
  var $p43: int;
  var $p44: int;
  var $p45: int;
  var $p46: int;
  var $p47: int;
  var $p48: int;
  var $p49: int;
  var $p5: int;
  var $p50: int;
  var $p51: int;
  var $p52: int;
  var $p53: int;
  var $p54: int;
  var $p55: int;
  var $p6: int;
  var $p66: int;
  var $p67: int;
  var $p68: int;
  var $p7: int;
  var $p70: int;
  var $p71: int;
  var $p72: int;
  var $p73: int;
  var $p74: int;
  var $p75: int;
  var $p76: int;
  var $p77: int;
  var $p78: int;
  var $p79: int;
  var $p8: int;
  var $p80: int;
  var $p81: int;
  var $p82: int;
  var $p83: int;
  var $p84: int;
  var $p85: int;
  var $p86: int;
  var $p87: int;
  var $p9: int;
$bb0:
  call $static_init();
  call $p := $alloca($mul(168, 1));
  call $p1 := $alloca($mul(112, 1));
  call $p2 := $alloca($mul(184, 1));
  assume {:sourceloc "parport_true.i.cil.c", 9602, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9603, 21} true;
  call $p3 := __VERIFIER_nondet_long();
  assume {:sourceloc "parport_true.i.cil.c", 9603, 21} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9604, 26} true;
  call $p4 := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9604, 26} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9605, 7} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9606, 24} true;
  call $p5 := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9606, 24} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9607, 20} true;
  call $p6 := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9607, 20} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9608, 17} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9609, 7} true;
  call $p7 := __VERIFIER_nondet_int();
  assume {:sourceloc "parport_true.i.cil.c", 9609, 7} true;
  $M.35[s] := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 9613, 3} true;
  $M.51[pirp] := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 9614, 3} true;
  call _BLAST_init();
  assume {:sourceloc "parport_true.i.cil.c", 9616, 3} true;
  $b := $sge($p3, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9616, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 9617, 5} true;
  $p44 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 9617, 5} true;
  $M.35[s] := $p44;
  assume {:sourceloc "parport_true.i.cil.c", 9618, 5} true;
  $M.50[customIrp] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9619, 5} true;
  $p45 := $M.50[customIrp];
  assume {:sourceloc "parport_true.i.cil.c", 9619, 5} true;
  $M.49[setEventCalled] := $p45;
  assume {:sourceloc "parport_true.i.cil.c", 9620, 5} true;
  $p46 := $M.49[setEventCalled];
  assume {:sourceloc "parport_true.i.cil.c", 9620, 5} true;
  $M.48[lowerDriverReturn] := $p46;
  assume {:sourceloc "parport_true.i.cil.c", 9621, 5} true;
  $p47 := $M.48[lowerDriverReturn];
  assume {:sourceloc "parport_true.i.cil.c", 9621, 5} true;
  $M.38[compRegistered] := $p47;
  assume {:sourceloc "parport_true.i.cil.c", 9622, 5} true;
  $p48 := $M.38[compRegistered];
  assume {:sourceloc "parport_true.i.cil.c", 9622, 5} true;
  $p49 := $i2p($p48);
  assume {:sourceloc "parport_true.i.cil.c", 9622, 5} true;
  $M.39[compFptr] := $p49;
  assume {:sourceloc "parport_true.i.cil.c", 9623, 5} true;
  $p50 := $M.39[compFptr];
  assume {:sourceloc "parport_true.i.cil.c", 9623, 5} true;
  $p51 := $p2i($p50);
  assume {:sourceloc "parport_true.i.cil.c", 9623, 5} true;
  $M.27[pended] := $p51;
  assume {:sourceloc "parport_true.i.cil.c", 9624, 5} true;
  $p52 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9624, 5} true;
  $p53 := $pa($pa($p52, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9624, 5} true;
  $p54 := $pa($pa($p53, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9624, 5} true;
  $p55 := $p54;
  assume {:sourceloc "parport_true.i.cil.c", 9624, 5} true;
  $M.0[$p55] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9625, 5} true;
  $M.24[myStatus] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9626, 5} true;
  $b56 := ($p6 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9626, 5} true;
  goto $bb82, $bb83;
$bb2:
  $p8 := $p3;
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 9616, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 9616, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 9731, 3} true;
  $p9 := $M.27[pended];
  assume {:sourceloc "parport_true.i.cil.c", 9731, 3} true;
  $b10 := ($p9 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 9731, 3} true;
  goto $bb8, $bb9;
$bb6:
  assume {:sourceloc "parport_true.i.cil.c", 9732, 5} true;
  $p40 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9732, 5} true;
  $p41 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 9732, 5} true;
  $b42 := ($p40 == $p41);
  assume {:sourceloc "parport_true.i.cil.c", 9732, 5} true;
  goto $bb77, $bb78;
$bb7:
  assume {:sourceloc "parport_true.i.cil.c", 9737, 10} true;
  goto $bb10;
$bb8:
  assume {:sourceloc "parport_true.i.cil.c", 9731, 3} true;
  assume $b10;
  goto $bb6;
$bb9:
  assume {:sourceloc "parport_true.i.cil.c", 9731, 3} true;
  assume !($b10);
  goto $bb7;
$bb10:
  assume {:sourceloc "parport_true.i.cil.c", 9739, 5} true;
  $p11 := $M.27[pended];
  assume {:sourceloc "parport_true.i.cil.c", 9739, 5} true;
  $b12 := ($p11 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 9739, 5} true;
  goto $bb13, $bb14;
$bb11:
  assume {:sourceloc "parport_true.i.cil.c", 9740, 7} true;
  $p36 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9740, 7} true;
  $p37 := $M.46[MPR3];
  assume {:sourceloc "parport_true.i.cil.c", 9740, 7} true;
  $b38 := ($p36 == $p37);
  assume {:sourceloc "parport_true.i.cil.c", 9740, 7} true;
  goto $bb72, $bb73;
$bb12:
  assume {:sourceloc "parport_true.i.cil.c", 9745, 12} true;
  goto $bb15;
$bb13:
  assume {:sourceloc "parport_true.i.cil.c", 9739, 5} true;
  assume $b12;
  goto $bb11;
$bb14:
  assume {:sourceloc "parport_true.i.cil.c", 9739, 5} true;
  assume !($b12);
  goto $bb12;
$bb15:
  assume {:sourceloc "parport_true.i.cil.c", 9747, 7} true;
  $p13 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9747, 7} true;
  $p14 := $M.43[UNLOADED];
  assume {:sourceloc "parport_true.i.cil.c", 9747, 7} true;
  $b15 := ($p13 == $p14);
  assume {:sourceloc "parport_true.i.cil.c", 9747, 7} true;
  goto $bb18, $bb19;
$bb16:
  assume {:sourceloc "parport_true.i.cil.c", 9749, 7} true;
  goto $bb46;
$bb17:
  assume {:sourceloc "parport_true.i.cil.c", 9750, 9} true;
  $b16 := ($p8 == -1);
  assume {:sourceloc "parport_true.i.cil.c", 9750, 9} true;
  goto $bb22, $bb23;
$bb18:
  assume {:sourceloc "parport_true.i.cil.c", 9747, 7} true;
  assume $b15;
  goto $bb16;
$bb19:
  assume {:sourceloc "parport_true.i.cil.c", 9747, 7} true;
  assume !($b15);
  goto $bb17;
$bb20:
  assume {:sourceloc "parport_true.i.cil.c", 9752, 9} true;
  goto $bb45;
$bb21:
  assume {:sourceloc "parport_true.i.cil.c", 9753, 11} true;
  $p17 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9753, 11} true;
  $p18 := $M.44[SKIP2];
  assume {:sourceloc "parport_true.i.cil.c", 9753, 11} true;
  $b19 := ($p17 != $p18);
  assume {:sourceloc "parport_true.i.cil.c", 9753, 11} true;
  goto $bb26, $bb27;
$bb22:
  assume {:sourceloc "parport_true.i.cil.c", 9750, 9} true;
  assume $b16;
  goto $bb20;
$bb23:
  assume {:sourceloc "parport_true.i.cil.c", 9750, 9} true;
  assume !($b16);
  goto $bb21;
$bb24:
  assume {:sourceloc "parport_true.i.cil.c", 9754, 13} true;
  $p30 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9754, 13} true;
  $p31 := $M.47[IPC];
  assume {:sourceloc "parport_true.i.cil.c", 9754, 13} true;
  $b32 := ($p30 != $p31);
  assume {:sourceloc "parport_true.i.cil.c", 9754, 13} true;
  goto $bb62, $bb63;
$bb25:
  assume {:sourceloc "parport_true.i.cil.c", 9765, 18} true;
  goto $bb28;
$bb26:
  assume {:sourceloc "parport_true.i.cil.c", 9753, 11} true;
  assume $b19;
  goto $bb24;
$bb27:
  assume {:sourceloc "parport_true.i.cil.c", 9753, 11} true;
  assume !($b19);
  goto $bb25;
$bb28:
  assume {:sourceloc "parport_true.i.cil.c", 9767, 13} true;
  $p20 := $M.27[pended];
  assume {:sourceloc "parport_true.i.cil.c", 9767, 13} true;
  $b21 := ($p20 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 9767, 13} true;
  goto $bb31, $bb32;
$bb29:
  assume {:sourceloc "parport_true.i.cil.c", 9768, 15} true;
  $b29 := ($p8 != 259);
  assume {:sourceloc "parport_true.i.cil.c", 9768, 15} true;
  goto $bb57, $bb58;
$bb30:
  assume {:sourceloc "parport_true.i.cil.c", 9776, 15} true;
  $p22 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9776, 15} true;
  $p23 := $M.42[DC];
  assume {:sourceloc "parport_true.i.cil.c", 9776, 15} true;
  $b24 := ($p22 == $p23);
  assume {:sourceloc "parport_true.i.cil.c", 9776, 15} true;
  goto $bb35, $bb36;
$bb31:
  assume {:sourceloc "parport_true.i.cil.c", 9767, 13} true;
  assume $b21;
  goto $bb29;
$bb32:
  assume {:sourceloc "parport_true.i.cil.c", 9767, 13} true;
  assume !($b21);
  goto $bb30;
$bb33:
  assume {:sourceloc "parport_true.i.cil.c", 9777, 17} true;
  $b28 := ($p8 == 259);
  assume {:sourceloc "parport_true.i.cil.c", 9777, 17} true;
  goto $bb52, $bb53;
$bb34:
  assume {:sourceloc "parport_true.i.cil.c", 9785, 17} true;
  $p25 := $M.48[lowerDriverReturn];
  assume {:sourceloc "parport_true.i.cil.c", 9785, 17} true;
  $b26 := ($p8 != $p25);
  assume {:sourceloc "parport_true.i.cil.c", 9785, 17} true;
  goto $bb39, $bb40;
$bb35:
  assume {:sourceloc "parport_true.i.cil.c", 9776, 15} true;
  assume $b24;
  goto $bb33;
$bb36:
  assume {:sourceloc "parport_true.i.cil.c", 9776, 15} true;
  assume !($b24);
  goto $bb34;
$bb37:
  assume {:sourceloc "parport_true.i.cil.c", 9787, 19} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 9789, 17} true;
  goto $bb41;
$bb38:
  goto $bb41;
$bb39:
  assume {:sourceloc "parport_true.i.cil.c", 9785, 17} true;
  assume $b26;
  goto $bb37;
$bb40:
  assume {:sourceloc "parport_true.i.cil.c", 9785, 17} true;
  assume !($b26);
  goto $bb38;
$bb41:
  goto $bb42;
$bb42:
  goto $bb43;
$bb43:
  goto $bb44;
$bb44:
  goto $bb45;
$bb45:
  goto $bb46;
$bb46:
  goto $bb47;
$bb47:
  goto $bb48;
$bb48:
  assume {:sourceloc "parport_true.i.cil.c", 9799, 3} true;
  $p27 := $p8;
  goto $bb49;
$bb49:
  assume {:sourceloc "parport_true.i.cil.c", 9801, 1} true;
  $r := $p27;
  return;
$bb50:
  assume {:sourceloc "parport_true.i.cil.c", 9779, 19} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 9781, 17} true;
  goto $bb54;
$bb51:
  goto $bb54;
$bb52:
  assume {:sourceloc "parport_true.i.cil.c", 9777, 17} true;
  assume $b28;
  goto $bb50;
$bb53:
  assume {:sourceloc "parport_true.i.cil.c", 9777, 17} true;
  assume !($b28);
  goto $bb51;
$bb54:
  assume {:sourceloc "parport_true.i.cil.c", 9784, 15} true;
  goto $bb42;
$bb55:
  assume {:sourceloc "parport_true.i.cil.c", 9770, 17} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 9772, 15} true;
  goto $bb59;
$bb56:
  goto $bb59;
$bb57:
  assume {:sourceloc "parport_true.i.cil.c", 9768, 15} true;
  assume $b29;
  goto $bb55;
$bb58:
  assume {:sourceloc "parport_true.i.cil.c", 9768, 15} true;
  assume !($b29);
  goto $bb56;
$bb59:
  assume {:sourceloc "parport_true.i.cil.c", 9775, 13} true;
  goto $bb43;
$bb60:
  assume {:sourceloc "parport_true.i.cil.c", 9755, 15} true;
  $p33 := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 9755, 15} true;
  $p34 := $M.42[DC];
  assume {:sourceloc "parport_true.i.cil.c", 9755, 15} true;
  $b35 := ($p33 != $p34);
  assume {:sourceloc "parport_true.i.cil.c", 9755, 15} true;
  goto $bb66, $bb67;
$bb61:
  assume {:sourceloc "parport_true.i.cil.c", 9763, 15} true;
  goto $bb28;
$bb62:
  assume {:sourceloc "parport_true.i.cil.c", 9754, 13} true;
  assume $b32;
  goto $bb60;
$bb63:
  assume {:sourceloc "parport_true.i.cil.c", 9754, 13} true;
  assume !($b32);
  goto $bb61;
$bb64:
  assume {:sourceloc "parport_true.i.cil.c", 9757, 17} true;
  call errorFn();
  assume {:sourceloc "parport_true.i.cil.c", 9759, 15} true;
  goto $bb68;
$bb65:
  assume {:sourceloc "parport_true.i.cil.c", 9760, 17} true;
  goto $bb28;
$bb66:
  assume {:sourceloc "parport_true.i.cil.c", 9755, 15} true;
  assume $b35;
  goto $bb64;
$bb67:
  assume {:sourceloc "parport_true.i.cil.c", 9755, 15} true;
  assume !($b35);
  goto $bb65;
$bb68:
  assume {:sourceloc "parport_true.i.cil.c", 9762, 13} true;
  goto $bb69;
$bb69:
  assume {:sourceloc "parport_true.i.cil.c", 9765, 11} true;
  goto $bb44;
$bb70:
  assume {:sourceloc "parport_true.i.cil.c", 9741, 9} true;
  $p39 := $M.46[MPR3];
  assume {:sourceloc "parport_true.i.cil.c", 9741, 9} true;
  $M.35[s] := $p39;
  assume {:sourceloc "parport_true.i.cil.c", 9742, 7} true;
  goto $bb74;
$bb71:
  assume {:sourceloc "parport_true.i.cil.c", 9743, 9} true;
  goto $bb15;
$bb72:
  assume {:sourceloc "parport_true.i.cil.c", 9740, 7} true;
  assume $b38;
  goto $bb70;
$bb73:
  assume {:sourceloc "parport_true.i.cil.c", 9740, 7} true;
  assume !($b38);
  goto $bb71;
$bb74:
  assume {:sourceloc "parport_true.i.cil.c", 9745, 5} true;
  goto $bb47;
$bb75:
  assume {:sourceloc "parport_true.i.cil.c", 9733, 7} true;
  $p43 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 9733, 7} true;
  $M.35[s] := $p43;
  assume {:sourceloc "parport_true.i.cil.c", 9734, 5} true;
  goto $bb79;
$bb76:
  assume {:sourceloc "parport_true.i.cil.c", 9735, 7} true;
  goto $bb10;
$bb77:
  assume {:sourceloc "parport_true.i.cil.c", 9732, 5} true;
  assume $b42;
  goto $bb75;
$bb78:
  assume {:sourceloc "parport_true.i.cil.c", 9732, 5} true;
  assume !($b42);
  goto $bb76;
$bb79:
  assume {:sourceloc "parport_true.i.cil.c", 9737, 3} true;
  goto $bb48;
$bb80:
  assume {:sourceloc "parport_true.i.cil.c", 9627, 7} true;
  $p84 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9627, 7} true;
  $p85 := $pa($pa($p84, 0, 112), 24, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9627, 7} true;
  $p86 := $pa($pa($p85, 0, 8), 0, 1);
  assume {:sourceloc "parport_true.i.cil.c", 9627, 7} true;
  $p87 := $p86;
  assume {:sourceloc "parport_true.i.cil.c", 9627, 7} true;
  $M.0[$p87] := -1073741637;
  assume {:sourceloc "parport_true.i.cil.c", 9628, 7} true;
  $M.24[myStatus] := -1073741637;
  assume {:sourceloc "parport_true.i.cil.c", 9629, 5} true;
  goto $bb84;
$bb81:
  goto $bb84;
$bb82:
  assume {:sourceloc "parport_true.i.cil.c", 9626, 5} true;
  assume $b56;
  goto $bb80;
$bb83:
  assume {:sourceloc "parport_true.i.cil.c", 9626, 5} true;
  assume !($b56);
  goto $bb81;
$bb84:
  assume {:sourceloc "parport_true.i.cil.c", 9633, 5} true;
  call stub_driver_init();
  assume {:sourceloc "parport_true.i.cil.c", 9635, 5} true;
  $b57 := $sge($p3, 0);
  assume {:sourceloc "parport_true.i.cil.c", 9635, 5} true;
  goto $bb87, $bb88;
$bb85:
  goto $bb89;
$bb86:
  assume {:sourceloc "parport_true.i.cil.c", 9636, 7} true;
  $p27 := -1;
  goto $bb49;
$bb87:
  assume {:sourceloc "parport_true.i.cil.c", 9635, 5} true;
  assume $b57;
  goto $bb85;
$bb88:
  assume {:sourceloc "parport_true.i.cil.c", 9635, 5} true;
  assume !($b57);
  goto $bb86;
$bb89:
  assume {:sourceloc "parport_true.i.cil.c", 9640, 5} true;
  $b58 := ($p5 == 0);
  assume {:sourceloc "parport_true.i.cil.c", 9640, 5} true;
  goto $bb92, $bb93;
$bb90:
  assume {:sourceloc "parport_true.i.cil.c", 9641, 7} true;
  goto $bb145;
$bb91:
  assume {:sourceloc "parport_true.i.cil.c", 9643, 7} true;
  $b59 := ($p5 == 1);
  assume {:sourceloc "parport_true.i.cil.c", 9643, 7} true;
  goto $bb96, $bb97;
$bb92:
  assume {:sourceloc "parport_true.i.cil.c", 9640, 5} true;
  assume $b58;
  goto $bb90;
$bb93:
  assume {:sourceloc "parport_true.i.cil.c", 9640, 5} true;
  assume !($b58);
  goto $bb91;
$bb94:
  assume {:sourceloc "parport_true.i.cil.c", 9644, 9} true;
  goto $bb144;
$bb95:
  assume {:sourceloc "parport_true.i.cil.c", 9646, 9} true;
  $b60 := ($p5 == 3);
  assume {:sourceloc "parport_true.i.cil.c", 9646, 9} true;
  goto $bb100, $bb101;
$bb96:
  assume {:sourceloc "parport_true.i.cil.c", 9643, 7} true;
  assume $b59;
  goto $bb94;
$bb97:
  assume {:sourceloc "parport_true.i.cil.c", 9643, 7} true;
  assume !($b59);
  goto $bb95;
$bb98:
  assume {:sourceloc "parport_true.i.cil.c", 9647, 11} true;
  goto $bb143;
$bb99:
  assume {:sourceloc "parport_true.i.cil.c", 9649, 11} true;
  $b61 := ($p5 == 4);
  assume {:sourceloc "parport_true.i.cil.c", 9649, 11} true;
  goto $bb104, $bb105;
$bb100:
  assume {:sourceloc "parport_true.i.cil.c", 9646, 9} true;
  assume $b60;
  goto $bb98;
$bb101:
  assume {:sourceloc "parport_true.i.cil.c", 9646, 9} true;
  assume !($b60);
  goto $bb99;
$bb102:
  assume {:sourceloc "parport_true.i.cil.c", 9650, 13} true;
  goto $bb142;
$bb103:
  assume {:sourceloc "parport_true.i.cil.c", 9652, 13} true;
  $b62 := ($p5 == 5);
  assume {:sourceloc "parport_true.i.cil.c", 9652, 13} true;
  goto $bb108, $bb109;
$bb104:
  assume {:sourceloc "parport_true.i.cil.c", 9649, 11} true;
  assume $b61;
  goto $bb102;
$bb105:
  assume {:sourceloc "parport_true.i.cil.c", 9649, 11} true;
  assume !($b61);
  goto $bb103;
$bb106:
  assume {:sourceloc "parport_true.i.cil.c", 9653, 15} true;
  goto $bb141;
$bb107:
  assume {:sourceloc "parport_true.i.cil.c", 9655, 15} true;
  $b63 := ($p5 == 6);
  assume {:sourceloc "parport_true.i.cil.c", 9655, 15} true;
  goto $bb112, $bb113;
$bb108:
  assume {:sourceloc "parport_true.i.cil.c", 9652, 13} true;
  assume $b62;
  goto $bb106;
$bb109:
  assume {:sourceloc "parport_true.i.cil.c", 9652, 13} true;
  assume !($b62);
  goto $bb107;
$bb110:
  assume {:sourceloc "parport_true.i.cil.c", 9656, 17} true;
  goto $bb140;
$bb111:
  assume {:sourceloc "parport_true.i.cil.c", 9658, 17} true;
  $b64 := ($p5 == 8);
  assume {:sourceloc "parport_true.i.cil.c", 9658, 17} true;
  goto $bb116, $bb117;
$bb112:
  assume {:sourceloc "parport_true.i.cil.c", 9655, 15} true;
  assume $b63;
  goto $bb110;
$bb113:
  assume {:sourceloc "parport_true.i.cil.c", 9655, 15} true;
  assume !($b63);
  goto $bb111;
$bb114:
  assume {:sourceloc "parport_true.i.cil.c", 9659, 19} true;
  goto $bb139;
$bb115:
  assume {:sourceloc "parport_true.i.cil.c", 9661, 19} true;
  $b65 := ($p5 == 11);
  assume {:sourceloc "parport_true.i.cil.c", 9661, 19} true;
  goto $bb120, $bb121;
$bb116:
  assume {:sourceloc "parport_true.i.cil.c", 9658, 17} true;
  assume $b64;
  goto $bb114;
$bb117:
  assume {:sourceloc "parport_true.i.cil.c", 9658, 17} true;
  assume !($b64);
  goto $bb115;
$bb118:
  assume {:sourceloc "parport_true.i.cil.c", 9662, 21} true;
  goto $bb123;
$bb119:
  assume {:sourceloc "parport_true.i.cil.c", 9665, 21} true;
  goto $bb122;
$bb120:
  assume {:sourceloc "parport_true.i.cil.c", 9661, 19} true;
  assume $b65;
  goto $bb118;
$bb121:
  assume {:sourceloc "parport_true.i.cil.c", 9661, 19} true;
  assume !($b65);
  goto $bb119;
$bb122:
  assume {:sourceloc "parport_true.i.cil.c", 9708, 23} true;
  $p27 := -1;
  goto $bb49;
$bb123:
  assume {:sourceloc "parport_true.i.cil.c", 9704, 32} true;
  $p66 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9704, 32} true;
  call $p67 := PptDispatchCleanup($p2, $p66);
  assume {:sourceloc "parport_true.i.cil.c", 9704, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9706, 23} true;
  $p68 := $p67;
  goto $bb124;
$bb124:
  goto $bb125;
$bb125:
  goto $bb126;
$bb126:
  goto $bb127;
$bb127:
  goto $bb128;
$bb128:
  goto $bb129;
$bb129:
  goto $bb130;
$bb130:
  goto $bb131;
$bb131:
  goto $bb132;
$bb132:
  goto $bb133;
$bb133:
  assume {:sourceloc "parport_true.i.cil.c", 9721, 5} true;
  $b69 := ($p4 != 0);
  assume {:sourceloc "parport_true.i.cil.c", 9721, 5} true;
  goto $bb136, $bb137;
$bb134:
  assume {:sourceloc "parport_true.i.cil.c", 9723, 7} true;
  call PptUnload($p);
  assume {:sourceloc "parport_true.i.cil.c", 9725, 5} true;
  goto $bb138;
$bb135:
  goto $bb138;
$bb136:
  assume {:sourceloc "parport_true.i.cil.c", 9721, 5} true;
  assume $b69;
  goto $bb134;
$bb137:
  assume {:sourceloc "parport_true.i.cil.c", 9721, 5} true;
  assume !($b69);
  goto $bb135;
$bb138:
  assume {:sourceloc "parport_true.i.cil.c", 9728, 3} true;
  $p8 := $p68;
  goto $bb5;
$bb139:
  assume {:sourceloc "parport_true.i.cil.c", 9699, 32} true;
  $p70 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9699, 32} true;
  call $p71 := PptDispatchInternalDeviceControl($p2, $p70);
  assume {:sourceloc "parport_true.i.cil.c", 9699, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9701, 23} true;
  $p68 := $p71;
  goto $bb124;
$bb140:
  assume {:sourceloc "parport_true.i.cil.c", 9694, 32} true;
  $p72 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9694, 32} true;
  call $p73 := PptDispatchSystemControl($p2, $p72);
  assume {:sourceloc "parport_true.i.cil.c", 9694, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9696, 23} true;
  $p68 := $p73;
  goto $bb124;
$bb141:
  assume {:sourceloc "parport_true.i.cil.c", 9689, 32} true;
  $p74 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9689, 32} true;
  call $p75 := PptDispatchCleanup($p2, $p74);
  assume {:sourceloc "parport_true.i.cil.c", 9689, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9691, 23} true;
  $p68 := $p75;
  goto $bb124;
$bb142:
  assume {:sourceloc "parport_true.i.cil.c", 9684, 32} true;
  $p76 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9684, 32} true;
  call $p77 := PptDispatchPower($p2, $p76);
  assume {:sourceloc "parport_true.i.cil.c", 9684, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9686, 23} true;
  $p68 := $p77;
  goto $bb124;
$bb143:
  assume {:sourceloc "parport_true.i.cil.c", 9679, 32} true;
  $p78 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9679, 32} true;
  call $p79 := PptDispatchPnp($p2, $p78);
  assume {:sourceloc "parport_true.i.cil.c", 9679, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9681, 23} true;
  $p68 := $p79;
  goto $bb124;
$bb144:
  assume {:sourceloc "parport_true.i.cil.c", 9674, 32} true;
  $p80 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9674, 32} true;
  call $p81 := PptDispatchClose($p2, $p80);
  assume {:sourceloc "parport_true.i.cil.c", 9674, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9676, 23} true;
  $p68 := $p81;
  goto $bb124;
$bb145:
  assume {:sourceloc "parport_true.i.cil.c", 9669, 32} true;
  $p82 := $M.51[pirp];
  assume {:sourceloc "parport_true.i.cil.c", 9669, 32} true;
  call $p83 := PptDispatchCreate($p2, $p82);
  assume {:sourceloc "parport_true.i.cil.c", 9669, 32} true;
  // WARNING: ignoring llvm.debug call.
  assume true;
  assume {:sourceloc "parport_true.i.cil.c", 9671, 23} true;
  $p68 := $p83;
  goto $bb124;
}
procedure stubMoreProcessingRequired()
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $b: bool;
  var $p: int;
  var $p1: int;
  var $p2: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 10245, 3} true;
  $p := $M.35[s];
  assume {:sourceloc "parport_true.i.cil.c", 10245, 3} true;
  $p1 := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 10245, 3} true;
  $b := ($p == $p1);
  assume {:sourceloc "parport_true.i.cil.c", 10245, 3} true;
  goto $bb3, $bb4;
$bb1:
  assume {:sourceloc "parport_true.i.cil.c", 10246, 5} true;
  $p2 := $M.45[MPR1];
  assume {:sourceloc "parport_true.i.cil.c", 10246, 5} true;
  $M.35[s] := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 10247, 3} true;
  goto $bb5;
$bb2:
  assume {:sourceloc "parport_true.i.cil.c", 10249, 5} true;
  call errorFn();
  goto $bb5;
$bb3:
  assume {:sourceloc "parport_true.i.cil.c", 10245, 3} true;
  assume $b;
  goto $bb1;
$bb4:
  assume {:sourceloc "parport_true.i.cil.c", 10245, 3} true;
  assume !($b);
  goto $bb2;
$bb5:
  assume {:sourceloc "parport_true.i.cil.c", 10254, 1} true;
  return;
}
procedure stub_driver_init()
  modifies $Alloc, $Size, $M.0, $M.1, $M.2, $M.3, $M.4, $M.5, $M.6, $M.7, $M.8, $M.9, $M.10, $M.11, $M.12, $M.13, $M.14, $M.15, $M.16, $M.17, $M.18, $M.19, $M.20, $M.21, $M.22, $M.23, $M.24, $M.25, $M.26, $M.27, $M.28, $M.29, $M.30, $M.31, $M.32, $M.33, $M.34, $M.35, $M.36, $M.37, $M.38, $M.39, $M.40, $M.41, $M.42, $M.43, $M.44, $M.45, $M.46, $M.47, $M.48, $M.49, $M.50, $M.51, $M.52, $M.53, $M.54, $M.55, $M.56, $M.57;
{
  var $p: int;
  var $p1: int;
  var $p2: int;
  var $p3: int;
  var $p4: int;
  var $p5: int;
  var $p6: int;
  var $p7: int;
$bb0:
  assume {:sourceloc "parport_true.i.cil.c", 9591, 3} true;
  $p := $M.36[NP];
  assume {:sourceloc "parport_true.i.cil.c", 9591, 3} true;
  $M.35[s] := $p;
  assume {:sourceloc "parport_true.i.cil.c", 9592, 3} true;
  $M.50[customIrp] := 0;
  assume {:sourceloc "parport_true.i.cil.c", 9593, 3} true;
  $p1 := $M.50[customIrp];
  assume {:sourceloc "parport_true.i.cil.c", 9593, 3} true;
  $M.49[setEventCalled] := $p1;
  assume {:sourceloc "parport_true.i.cil.c", 9594, 3} true;
  $p2 := $M.49[setEventCalled];
  assume {:sourceloc "parport_true.i.cil.c", 9594, 3} true;
  $M.48[lowerDriverReturn] := $p2;
  assume {:sourceloc "parport_true.i.cil.c", 9595, 3} true;
  $p3 := $M.48[lowerDriverReturn];
  assume {:sourceloc "parport_true.i.cil.c", 9595, 3} true;
  $M.38[compRegistered] := $p3;
  assume {:sourceloc "parport_true.i.cil.c", 9596, 3} true;
  $p4 := $M.38[compRegistered];
  assume {:sourceloc "parport_true.i.cil.c", 9596, 3} true;
  $p5 := $i2p($p4);
  assume {:sourceloc "parport_true.i.cil.c", 9596, 3} true;
  $M.39[compFptr] := $p5;
  assume {:sourceloc "parport_true.i.cil.c", 9597, 3} true;
  $p6 := $M.39[compFptr];
  assume {:sourceloc "parport_true.i.cil.c", 9597, 3} true;
  $p7 := $p2i($p6);
  assume {:sourceloc "parport_true.i.cil.c", 9597, 3} true;
  $M.27[pended] := $p7;
  assume {:sourceloc "parport_true.i.cil.c", 9600, 1} true;
  return;
}
axiom (__SMACK_nondet.XXX == -38);
axiom (myStatus == -5129);
axiom (PnpIrpName == -6254);
axiom (RegistryPath == -6311);
axiom (PortInfoMutex == -6315);
axiom (pended == -6319);
axiom (PptDot3Retries == -6320);
axiom (ModeQualifier___6 == -6327);
axiom (Extension_FilterMode == -6331);
axiom (GUID_PARALLEL_DEVICE == -6347);
axiom (GUID_PARCLASS_DEVICE == -6363);
axiom (PptDebugLevel == -6367);
axiom (PptBreakOn == -6371);
axiom (PortInfoReferenceCount == -6375);
axiom (PhysicalZero == -6383);
axiom (PptPnpDispatchFunctionTable == -6483);
axiom (s == -6487);
axiom (NP == -6491);
axiom (SKIP1 == -6495);
axiom (compRegistered == -6499);
axiom (compFptr == -6503);
axiom (routine == -6507);
axiom (LegacyZipModeQualifier___11 == -6510);
axiom (PptWmiAllocFreeCountsGuid == -6533);
axiom (PptWmiGuidList == -6545);
axiom (DC == -6549);
axiom (UNLOADED == -6553);
axiom (SKIP2 == -6557);
axiom (MPR1 == -6561);
axiom (MPR3 == -6565);
axiom (IPC == -6569);
axiom (lowerDriverReturn == -6573);
axiom (setEventCalled == -6577);
axiom (customIrp == -6581);
axiom (pirp == -6585);
axiom (_SLAM_alloc_dummy == -6586);
axiom $NULL == 0;
axiom $and(0,0) == 0;
axiom $and(0,1) == 0;
axiom $and(1,0) == 0;
axiom $and(1,1) == 1;
axiom $b2i(false) == 0;
axiom $b2i(true) == 1;
axiom $b2p(false) == 0;
axiom $b2p(true) == 1;
axiom $i2b(0) == false;
axiom $or(0,0) == 0;
axiom $or(0,1) == 1;
axiom $or(1,0) == 1;
axiom $or(1,1) == 1;
axiom $p2b(0) == false;
axiom $xor(0,0) == 0;
axiom $xor(0,1) == 1;
axiom $xor(1,0) == 1;
axiom $xor(1,1) == 0;
axiom (forall i:int :: $i2b(i) <==> i != 0);
axiom (forall i:int :: $i2p(i) == i);
axiom (forall i:int :: $p2b(i) <==> i != 0);
axiom (forall i:int :: $p2i(i) == i);
axiom (forall p,s:int :: $trunc(p,s) == p);
axiom (forall p:int, i:int, s:int :: {$pa(p,i,s)} $pa(p,i,s) == p + i * s);
const $GLOBALS_BOTTOM: int;
const $MOP: $mop;
const $UNDEF: int;
const $ffalse: float;
const $ftrue: float;
const unique $NULL: int;
function $add(p1:int, p2:int) returns (int) {p1 + p2}
function $and(p1:int, p2:int) returns (int);
function $ashr(p1:int, p2:int) returns (int);
function $b2i(b: bool) returns (int);
function $b2p(b: bool) returns (int);
function $fadd(f1:float, f2:float) returns (float);
function $fdiv(f1:float, f2:float) returns (float);
function $fmul(f1:float, f2:float) returns (float);
function $foeq(f1:float, f2:float) returns (bool);
function $foge(f1:float, f2:float) returns (bool);
function $fogt(f1:float, f2:float) returns (bool);
function $fole(f1:float, f2:float) returns (bool);
function $folt(f1:float, f2:float) returns (bool);
function $fone(f1:float, f2:float) returns (bool);
function $ford(f1:float, f2:float) returns (bool);
function $fp(a:int) returns (float);
function $fp2si(f:float) returns (int);
function $fp2ui(f:float) returns (int);
function $frem(f1:float, f2:float) returns (float);
function $fsub(f1:float, f2:float) returns (float);
function $fueq(f1:float, f2:float) returns (bool);
function $fuge(f1:float, f2:float) returns (bool);
function $fugt(f1:float, f2:float) returns (bool);
function $fule(f1:float, f2:float) returns (bool);
function $fult(f1:float, f2:float) returns (bool);
function $fune(f1:float, f2:float) returns (bool);
function $funo(f1:float, f2:float) returns (bool);
function $i2b(i: int) returns (bool);
function $i2p(p: int) returns (int);
function $isExternal(p: int) returns (bool) { p < $GLOBALS_BOTTOM - 32768 }
function $lshr(p1:int, p2:int) returns (int);
function $max(p1:int, p2:int) returns (int);
function $min(p1:int, p2:int) returns (int);
function $mul(p1:int, p2:int) returns (int) {p1 * p2}
function $nand(p1:int, p2:int) returns (int);
function $obj(int) returns (int);
function $off(ptr:int) returns (int) {ptr}
function $or(p1:int, p2:int) returns (int);
function $p2b(p: int) returns (bool);
function $p2i(p: int) returns (int);
function $pa(pointer: int, index: int, size: int) returns (int);
function $ptr(obj:int, off:int) returns (int) {obj + off}
function $sdiv(p1:int, p2:int) returns (int);
function $sge(p1:int, p2:int) returns (bool) {p1 >= p2}
function $sgt(p1:int, p2:int) returns (bool) {p1 > p2}
function $shl(p1:int, p2:int) returns (int);
function $si2fp(i:int) returns (float);
function $sle(p1:int, p2:int) returns (bool) {p1 <= p2}
function $slt(p1:int, p2:int) returns (bool) {p1 < p2}
function $srem(p1:int, p2:int) returns (int);
function $sub(p1:int, p2:int) returns (int) {p1 - p2}
function $trunc(p: int, size: int) returns (int);
function $udiv(p1:int, p2:int) returns (int);
function $uge(p1:int, p2:int) returns (bool) {p1 >= p2}
function $ugt(p1:int, p2:int) returns (bool) {p1 > p2}
function $ui2fp(i:int) returns (float);
function $ule(p1:int, p2:int) returns (bool) {p1 <= p2}
function $ult(p1:int, p2:int) returns (bool) {p1 < p2}
function $umax(p1:int, p2:int) returns (int);
function $umin(p1:int, p2:int) returns (int);
function $urem(p1:int, p2:int) returns (int);
function $xor(p1:int, p2:int) returns (int);
procedure $alloca(n: int) returns (p: int);
modifies $Alloc, $Size;
ensures p > 0;
ensures !old($Alloc[p]);
ensures (forall q: int :: old($Alloc[q]) ==> (p + n < q || p > q + $Size[q]));
ensures $Alloc[p];
ensures $Size[p] == n;
ensures (forall q: int :: {$Size[q]} q != p ==> $Size[q] == old($Size[q]));
ensures (forall q: int :: {$Alloc[q]} q != p ==> $Alloc[q] == old($Alloc[q]));
ensures n >= 0 ==> (forall q: int :: {$obj(q)} p <= q && q < p+n ==> $obj(q) == p);
procedure $free(p: int);
modifies $Alloc;
ensures !$Alloc[p];
ensures (forall q: int :: {$Alloc[q]} q != p ==> $Alloc[q] == old($Alloc[q]));
procedure $malloc(n: int) returns (p: int);
modifies $Alloc, $Size;
ensures p > 0;
ensures !old($Alloc[p]);
ensures (forall q: int :: old($Alloc[q]) ==> (p + n < q || p > q + $Size[q]));
ensures $Alloc[p];
ensures $Size[p] == n;
ensures (forall q: int :: {$Size[q]} q != p ==> $Size[q] == old($Size[q]));
ensures (forall q: int :: {$Alloc[q]} q != p ==> $Alloc[q] == old($Alloc[q]));
ensures n >= 0 ==> (forall q: int :: {$obj(q)} p <= q && q < p+n ==> $obj(q) == p);
procedure $memcpy.0.0(dest: int, src: int, len: int, align: int, isvolatile: bool);
modifies $M.0;
ensures (forall x:int :: dest <= x && x < dest + len ==> $M.0[x] == old($M.0)[src - dest + x]);
ensures (forall x:int :: !(dest <= x && x < dest + len) ==> $M.0[x] == old($M.0)[x]);

procedure $memcpy.21.21(dest: int, src: int, len: int, align: int, isvolatile: bool);
modifies $M.21;
ensures (forall x:int :: dest <= x && x < dest + len ==> $M.21[x] == old($M.21)[src - dest + x]);
ensures (forall x:int :: !(dest <= x && x < dest + len) ==> $M.21[x] == old($M.21)[x]);

procedure $memset.0(dest: int, val: int, len: int, align: int, isvolatile: bool);
modifies $M.0;
ensures (forall x:int :: dest <= x && x < dest + len ==> $M.0[x] == val);
ensures (forall x:int :: !(dest <= x && x < dest + len) ==> $M.0[x] == old($M.0)[x]);

procedure $memset.2(dest: int, val: int, len: int, align: int, isvolatile: bool);
modifies $M.2;
ensures (forall x:int :: dest <= x && x < dest + len ==> $M.2[x] == val);
ensures (forall x:int :: !(dest <= x && x < dest + len) ==> $M.2[x] == old($M.2)[x]);

procedure boogie_si_record_int(i: int);
procedure boogie_si_record_mop(m: $mop);
type $mop;
type float;
var $Alloc: [int] bool;
var $Size: [int] int;

// END SMACK-GENERATED CODE
